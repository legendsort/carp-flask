{
	"info": {
		"_postman_id": "cd69d8e6-b0f7-469b-9ad3-540eaf3142ee",
		"name": "CANS Python Client API (v28)",
		"description": "The [C]openh[A]gen Center for Health Technology [R]esearch [P]latform (CARP) Python Client API - enables researchers to run mobile health (mHealth) studies where data is collected on participant's smartphones and wearable devices. Data is securely uploaded and managed in a hosting infrastructure managed by the Technical University of Denmark.\n\nCARP is a platform for running research studies in the health domain – also known as Digital Phenotyping. Such studies range from technical feasibility studies of novel technology to large-scale clinical studies. The platform is very versatile both in terms of support for different types of health domains, as well as in terms of technical support and configuration.\n\nCARP Python Client API primarily provides the REST API (Python/Flask/FastAPI) consumed by clients for the CARP project.\n\nThe architecture is a modular monolith, with loosely coupled services and endpoints separated by feature-type (i.e auth, data points, study, protocols, deployments, documents, collections, consent documents, file). Shared services can be found under the common directory, and are again separated in directories by type (rather than controllers, models, views, services, factories, presenters, etc). Overall, the CARP Webservices API architecture is divided into three layers; API Gateway, Security, Services, and Persistence layer.\n\n\n\nCopyright 2018 Copenhagen Center for Health Technology (CACHET) at the Technical University of Denmark (DTU). \n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ”Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: \n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. \n\nTHE SOFTWARE IS PROVIDED ”AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic Y2FycDpjYXJw"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "[client_id]",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "[client_secret]",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin@cachet.dk",
									"type": "text"
								},
								{
									"key": "password",
									"value": "[password]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/oauth/token",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "> `Description`: Login as Study Owner.\n- This role is used to create studies and invite participants in CARP Platform studies. Further, this role can access data for a study.\n\n> `Request`: (Http Method: [POST]) http(s)://localhost:443/client/oauth/token\n\nThis request must be authenticated using a HTTP Basic Authentication header.\n   \n> `Response`:\n\n- On success, a JSON object is returned with a fields `access_token`, `refresh_token`, `jti` set to the authentication token for the user, `scope`, and a field `expires_in` set to the (approximate) number of seconds the token is valid. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic Y2FycDpjYXJw"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "[client_id]",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "[client_secret]",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "[username]@dtu.dk",
											"type": "text"
										},
										{
											"key": "password",
											"value": "[password]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/oauth/token?client_id=[client_id]&client_secret=[client_secret]&grant_type=password&username=[username]&password=[password]",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"oauth",
										"token"
									],
									"query": [
										{
											"key": "client_id",
											"value": "[client_id]"
										},
										{
											"key": "client_secret",
											"value": "[client_secret]"
										},
										{
											"key": "grant_type",
											"value": "password"
										},
										{
											"key": "username",
											"value": "[username]"
										},
										{
											"key": "password",
											"value": "[password]"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 11 Jul 2020 18:07:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n  \"access_token\":\"7c7e0da3-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\n  \"token_type\":\"bearer\",\n  \"refresh_token\":\"d4692b9e-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\n  \"expires_in\":3015,\n  \"scope\":\"read write\"\n}"
						}
					]
				},
				{
					"name": "refresh token",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic Y2FycDpjYXJw",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "[refresh_token]",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "[client_id]",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "[client_secret]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/oauth/refresh/token",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"oauth",
								"refresh",
								"token"
							]
						},
						"description": "> `Description`: Refresh token\n\n> `Request`: (Http Method: [POST]) http(s)://localhost:443/client/oauth/refresh/token\n\nThis request must be authenticated using a HTTP Basic Authentication header.\n   \n> `Response`:\n\n- On success, a JSON object is returned with a fields `access_token`, `refresh_token`, `jti` set to the authentication token for the user, `scope`, and a field `expires_in` set to the (approximate) number of seconds the token is valid. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "refresh token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic Y2FycDpjYXJw",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "refresh_token",
											"value": "[refresh_token]",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "[client_id]",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "[client_secret]",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/oauth/refresh/token",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"oauth",
										"refresh",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Sat, 11 Jul 2020 18:05:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"Authorization\":\"Bearer 179cd2d9-xxxx-xxxx-xxxx-xxxxxxxxx\"\n}"
						}
					]
				},
				{
					"name": "current user",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkxMTE1MzYxLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZmI2Y2ZlZmYtY2Q3MS00NjVmLWFlZDItMTZhOWE3Mjg0ZjJjIiwiY2xpZW50X2lkIjoiY2FycCJ9.zLzE0QvwJIw-2k-uuEKFupos9H8t7kBp3gSetEEcbes",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/users/current",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"users",
								"current"
							]
						},
						"description": "> `Description`: `Current user` enpoint returns the information of the current authenticated user.\n\n> `Request`: (Http Method: [GET]) http(s)://localhost:443/client/api/users/current\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n   \n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `firstName`, `lastName`, `isActivated`, `accountId`, and `role` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "current user",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/users/current",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"users",
										"current"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.18.0"
								},
								{
									"key": "Date",
									"value": "Thu, 04 Feb 2021 19:01:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\":1,\n  \"firstName\":\"CARP\",\n  \"lastName\":\"Administrator\",\n  \"isActivated\":true,\n  \"accountId\":\"5cb8903c-xxxx-xxx-xxxx-xxxxxxxxxx\",\n  \"role\": [\"SYSTEM_ADMIN\"]\n}"
						}
					]
				},
				{
					"name": "register user",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTg4MjQyODUwLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTVhZTNjMjEtNGNhZS00MDk0LTliOWYtZTAwYmQxMzk1ODY2IiwiY2xpZW50X2lkIjoiY2FycCJ9.UNFrvGpBEfDHqN9JfAe7l1y_mEI1h3KRuUSXkt1_14Q",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"accountId\": \"\",\n\t\"password\": \"\",\n\t\"firstName\": \"\",\n\t\"lastName\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/users/register",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						},
						"description": "> `Description`: Register \n\nRegistering a user is only available for registering study owners. Participation registration is done by email invitation. Before creation, you have to have an account already created in the database and the account id must be present in the request.\nIn order to create an account in the database, study owners must also be invited via email. The email will contain the redirection URL for the registration form, which will contact the begin on this URI to create an actual user, linked to the already existing account.\n\n> `Request`: (Http Method: [POST]) http(s)://localhost:443/client/api/users/register\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n   \n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": []
				},
				{
					"name": "invite | study owner | carp admin | system admin",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "d00928bc-7852-4f4a-9293-25c1a997ac58",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"emailAddress\": \"[email]@dtu.dk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/{{|STUDY_OWNER|CARP_ADMINISTRATOR|SYSTEM_ADMINISTRATOR|}}",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"{{|STUDY_OWNER|CARP_ADMINISTRATOR|SYSTEM_ADMINISTRATOR|}}"
							]
						},
						"description": "> `Description`: `invite study owner` Creates a new [Account] for the specified [emailAddress] with the `Study Owner` role. A corresponding invitational e-mail will be sent out to the invited [emailAddress].\n\n> `Request`: (Http Method: [POST]) http(s)://localhost:443/client/api/accounts/study-owner\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "invite | study owner | carp admin | system admin",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"emailAddress\": \"[email]@dtu.dk\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/{{|STUDY_OWNER|CARP_ADMINISTRATOR|SYSTEM_ADMINISTRATOR|}}",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"{{|STUDY_OWNER|CARP_ADMINISTRATOR|SYSTEM_ADMINISTRATOR|}}"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n\t\"emailAddress\": \"[example]@dtu.dk\"\n}"
						}
					]
				},
				{
					"name": "send forgotten password email",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"emailAddress\": \"[username]@dtu.dk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/users/forgotten-password/send",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"users",
								"forgotten-password",
								"send"
							]
						},
						"description": "> `Description`: `send a forgotten password email' request using the user email.\n\n> `Request`: (Http Method: [POST]) http(s)://localhost:443/client/api/users/forgotten-password/send\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "send forgotten password email",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"emailAddress\": \"[username]@dtu.dk\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/users/forgotten-password/send",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"users",
										"forgotten-password",
										"send"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n\t\"emailAddress\": \"[username]@dtu.dk\"\n}"
						}
					]
				},
				{
					"name": "save new password for token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"temp-pass\",\n\t\"token\": \"?1Reoaabfxajmg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/users/forgotten-password/save",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"users",
								"forgotten-password",
								"save"
							]
						},
						"description": "> `Description`: Enables saving a new password for the given token provided by [CARP].\n\n> `Request`: (Http Method: [POST]) http(s)://localhost:443/client/api/users/forgotten-password/save\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "save new password for token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"temp-pass\",\n\t\"token\": \"?1Reoaabfxajmg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/users/forgotten-password/save",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"users",
										"forgotten-password",
										"save"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n\t\"password\": \"temp-pass\",\n\t\"token\": \"?1Reoaabfxajmg\"\n}"
						}
					]
				},
				{
					"name": "unlock account",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTk5MTU0MjUzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiYjRmOTIxZjctNmNiZS00ZjBjLTg3YTAtNTcxODEzOTUxYjBlIiwiY2xpZW50X2lkIjoiY2FycCJ9.Ts3oo3W57Y5qw_537vDapCGZmFU1iswmyJJVze1Ds9o",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emailAddress\": \"[example]@dtu.dk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/accounts/unlock",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"accounts",
								"unlock"
							]
						}
					},
					"response": []
				},
				{
					"name": "change password",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJzeXMxYWRtaW4xREtAY2FjaGV0LmRrIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTYwNTUzMTE0NSwiYXV0aG9yaXRpZXMiOlsiU1lTVEVNX0FETUlOIl0sImp0aSI6ImI4YzZiMTc0LTJhYzEtNDMyYS04ZGZlLWY1Zjc4MGQ4YzMyNSIsImNsaWVudF9pZCI6ImNhcnAifQ.ynx6Tjy9SvVwHs29VLfTfkmoW2MGs-d6kskkatUkZYU",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"oldPassword\": \"\",\n    \"newPassword\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/users/password",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"users",
								"password"
							]
						}
					},
					"response": [
						{
							"name": "change password",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"old\",\n    \"newPassword\": \"new\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/users/password",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Nov 2020 15:00:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get studies for researcher accounts",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "password",
									"value": "Cachet20Sys21Admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sysadmin@cachet.dk",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{INSTANCE_URI}}/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/accounts/{{ACCOUNT_ID}}/study-manager",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"accounts",
								"{{ACCOUNT_ID}}",
								"study-manager"
							]
						}
					},
					"response": []
				}
			],
			"description": "# **CARP Webservices API - Auth**\n\nCARP applies the following state-of-art security mechanism; `Authentication`, `Authorization`, and `Encryption`. \n\nThe `CARP Webservices API - Auth` is used to issue a token for collecting data from the registered users in the study. Enrolled researchers and participants are assigned with a user account ID, role, and scopes. This provides valuable information required by researchers and studies.\n\n**`Authentication/Authorization`:**\n\nCommunication with the CARP Platform is secured using the Open Authentication 2.0 (OAuth 2.0) workflow, which is the state-of-art in RESTful authentication and data source integration.\n\nOAuth 2.0 is used in order to provide authorization and authentication, while the CARP platform utilizes the OAuth 2.0 security policy as a standard protocol for authorization. The CARP platform uses the HTTP RESTful methods to perform access control using the authorization token and to request the authorization server for data resources. \n\nSmartphone and wearable applications use Users Credentials and Refresh Token granting type. This token is required for authorization in the CARP platform and can be used to access and upload data according to the roles and scopes specified. Otherwise, no data sources can be registered or send data into the platform. To ensure security, access tokens have an expiry time, thus the last obtained Refresh Token is used to obtain a new Refresh Token and Access Token.\n\n**`Encryption`:**\n- The communication in CARP is secured using Secure Sockets Layer (TLS/SSL) and Transport Layer Security (TLS) as a standard security technology for establishing encrypted endpoints between the CARP platform and its clients. Using SSL/TLS security ensures the authenticity, integrity, and confidentiality of the user’s data. CARP Platform uses Cipher Suites (cryptographic methods) and TLS server security certification to ensure secure users’ transmission data.\n- The CARP Mobile Sensing framework supports encryption (one-way hashing) of sensory data locally before transmission. This is used in order to privacy protect sensitive data, such as the phone number or location of the user.\n\n**`Authorization Roles`:**\n\n- ***`System Administrator`*** - can do everything; superuser.\n\n- ***`CARP Administrator`*** - can allow a user to create studies by making them a *Study Owner*. This role is now allowed to modify or access studies.\n\n- ***`Study Owner`*** - can create studies and invite participants. Can access data for a study.\nNote that multiple study owners should be able to have access to a study. This should be managed by the manage study claim as described in CARP core.\n\n- ***`Participant Roles`*** - Participant - the participant/user/patient uploading and accessing his/her own data.\n\n\n\n# ***AUTH - Permissions Endpoints***\n\n|**`Package`**      | **`Function`**                         | **`Permission`**                          | **`Condition`**                                                                |\n|--------------|----------------------------------|-------------------------------------|--------------------------------------------------------------------------|\n| **Account/User** | **GET CURRENT USER**                 | OPEN                                |                                                                          |\n|              | **REGISTER**                         | OPEN                                |                                                                          |\n|              | **REQUEST FORGOTTEN PASSWORD EMAIL** | OPEN                                |                                                                          |\n|              | **SAVE NEW PASSWORD**                | OPEN                                |                                                                          |\n|              | **INVITE STUDY OWNER**               | `Study Owner`, `CARP Administrator` | `CARP Administrator` is always allowed. `Study Owner` is always allowed. |\n|              | **INVITE SYSTEM ADMIN**              | `System Administrator`              | `System Administrator` is always allowed.                                |\n|              | **INVITE CARP ADMIN**                | `System Administrator`              | `System Administrator` is always allowed.                                |"
		},
		{
			"name": "Study",
			"item": [
				{
					"name": "add researcher",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI5NTk1LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNDdkNGYzOTgtZTRkNi00YmZmLTgwM2UtNzVkYzdlZGUyZDA5IiwiY2xpZW50X2lkIjoiY2FycCJ9.Arvy_xkweiEysrupqtzTrDtj6fv5n5dfK1v5kpLPCCo",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"researcherAccountId\": \"929148f2-3489-463d-81c2-d54c8ee9fb48\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/studies/{{STUDY_ID}}/researchers",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"studies",
								"{{STUDY_ID}}",
								"researchers"
							]
						},
						"description": "> `Description`: `add researcher` \n\nThis endpoint enables adding a researcher to a study with the given [STUDY_ID] as a request parameter. \n\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443}/api/studies/{{STUDY_ID}}/researchers\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "add researcher",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"researcherAccountId\": \"929148f2-3489-463d-81c2-d54c8ee9fb48\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/researchers",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"researchers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:23:46 GMT"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "study-service",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sys1admin1DK@cachet.dk",
									"type": "string"
								},
								{
									"key": "password",
									"value": "sys1admin1DK",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/oauth/token",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJzeXMxYWRtaW4xREtAY2FjaGV0LmRrIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTYwNDY3NDIxMCwiYXV0aG9yaXRpZXMiOlsiU1lTVEVNX0FETUlOIl0sImp0aSI6ImY4N2U2YThlLWZmMzUtNDQwYS05OTU4LTBkNTY5YWQ3YmZlYyIsImNsaWVudF9pZCI6ImNhcnAifQ.J3yrsB9DCvdposrMQkCvTMXyKtkS7qNAmd7eaHFTiCI",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/study-service",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"study-service"
							]
						}
					},
					"response": [
						{
							"name": "GetStudyDetails",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"$type\":\"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.GetStudyDetails\",\n   \"studyId\":\"f454f40e-a7b5-4399-b702-0d489fdf35af\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 06 Nov 2020 10:34:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"studyId\": \"f454f40e-a7b5-4399-b702-0d489fdf35af\",\n    \"studyOwner\": {\n        \"id\": \"8a81e0c0-c2c5-4e0f-82f5-6c08c9335f07\"\n    },\n    \"name\": \"name\",\n    \"creationDate\": 1604656495909,\n    \"description\": \"Description\",\n    \"invitation\": {\n        \"name\": \"\",\n        \"description\": \"\",\n        \"applicationData\": \"f454f40e-a7b5-4399-b702-0d489fdf35af\"\n    },\n    \"protocolSnapshot\": {\n        \"ownerId\": \"8a81e0c0-c2c5-4e0f-82f5-6c08c9335f07\",\n        \"name\": \"Study.deployParticipantGroupTest\",\n        \"description\": \"\",\n        \"creationDate\": 1600328435894,\n        \"masterDevices\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            }\n        ],\n        \"connectedDevices\": [],\n        \"connections\": [],\n        \"tasks\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.tasks.ConcurrentTask\",\n                \"name\": \"task\",\n                \"measures\": [\n                    {\n                        \"$type\": \"dk.cachet.carp.protocols.domain.tasks.measures.PhoneSensorMeasure\",\n                        \"type\": \"dk.cachet.carp.geolocation\",\n                        \"duration\": {\n                            \"microseconds\": -1000\n                        }\n                    }\n                ]\n            }\n        ],\n        \"triggers\": {\n            \"0\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n                \"sourceDeviceRoleName\": \"phone\",\n                \"elapsedTime\": {\n                    \"microseconds\": 10000\n                }\n            }\n        },\n        \"triggeredTasks\": [\n            {\n                \"triggerId\": 0,\n                \"taskName\": \"task\",\n                \"targetDeviceRoleName\": \"phone\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "GetStudiesOverview",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"$type\":\"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.GetStudiesOverview\",\n   \"owner\": {\n       \"id\": \"8a81e0c0-c2c5-4e0f-82f5-6c08c9335f07\"\n   }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:22:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"$type\": \"dk.cachet.carp.studies.domain.StudyStatus.Configuring\",\n        \"studyId\": \"9ae810bf-1563-4458-9062-1b8e935e64fa\",\n        \"name\": \"name\",\n        \"creationDate\": \"2021-01-14T09:20:14.011Z\",\n        \"canSetInvitation\": true,\n        \"canSetStudyProtocol\": true,\n        \"canDeployToParticipants\": false,\n        \"canGoLive\": false\n    }\n]"
						},
						{
							"name": "SetProtocol",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.SetProtocol\",\n    \"studyId\": \"9ae810bf-1563-4458-9062-1b8e935e64fa\",\n    \"protocol\": {\n        \"ownerId\": \"dff9fbde-9bcf-4bcc-abb3-160e20cdb49e\",\n        \"name\": \"Study.setProtocolTest\",\n        \"description\": \"\",\n        \"creationDate\": \"2021-01-14T09:28:51.853Z\",\n        \"masterDevices\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            }\n        ],\n        \"connectedDevices\": [],\n        \"connections\": [],\n        \"tasks\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.tasks.ConcurrentTask\",\n                \"name\": \"task\",\n                \"measures\": [\n                    {\n                        \"$type\": \"dk.cachet.carp.protocols.domain.tasks.measures.PhoneSensorMeasure\",\n                        \"type\": \"dk.cachet.carp.geolocation\",\n                        \"duration\": -1000\n                    }\n                ]\n            }\n        ],\n        \"triggers\": {\n            \"0\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n                \"sourceDeviceRoleName\": \"phone\",\n                \"elapsedTime\": 10000\n            }\n        },\n        \"triggeredTasks\": [\n            {\n                \"triggerId\": 0,\n                \"taskName\": \"task\",\n                \"targetDeviceRoleName\": \"phone\"\n            }\n        ],\n        \"expectedParticipantData\": [\n            {\n                \"$type\": \"dk.cachet.carp.common.users.ParticipantAttribute.DefaultParticipantAttribute\",\n                \"inputType\": \"dk.cachet.carp.input.sex\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:31:06 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.studies.domain.StudyStatus.Configuring\",\n    \"studyId\": \"9ae810bf-1563-4458-9062-1b8e935e64fa\",\n    \"name\": \"name\",\n    \"creationDate\": \"2021-01-14T09:20:14.011Z\",\n    \"canSetInvitation\": true,\n    \"canSetStudyProtocol\": true,\n    \"canDeployToParticipants\": false,\n    \"canGoLive\": true\n}"
						},
						{
							"name": "GoLive",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"$type\":\"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.GoLive\",\n   \"studyId\":\"9ae810bf-1563-4458-9062-1b8e935e64fa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:32:43 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.studies.domain.StudyStatus.Live\",\n    \"studyId\": \"9ae810bf-1563-4458-9062-1b8e935e64fa\",\n    \"name\": \"name\",\n    \"creationDate\": \"2021-01-14T09:20:14.011Z\",\n    \"canSetInvitation\": false,\n    \"canSetStudyProtocol\": false,\n    \"canDeployToParticipants\": true\n}"
						},
						{
							"name": "SetInternalDescription",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"$type\":\"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.SetInternalDescription\",\n   \"studyId\":\"9ae810bf-1563-4458-9062-1b8e935e64fa\",\n   \"name\":\"name\",\n   \"description\":\"New description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:34:04 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.studies.domain.StudyStatus.Live\",\n    \"studyId\": \"9ae810bf-1563-4458-9062-1b8e935e64fa\",\n    \"name\": \"name\",\n    \"creationDate\": \"2021-01-14T09:20:14.011Z\",\n    \"canSetInvitation\": false,\n    \"canSetStudyProtocol\": false,\n    \"canDeployToParticipants\": true\n}"
						},
						{
							"name": "CreateStudy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"$type\":\"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.CreateStudy\",\n   \"owner\":{\n      \"id\":\"8a81e0c0-c2c5-4e0f-82f5-6c08c9335f07\"\n   },\n   \"name\":\"name\",\n   \"description\":\"Description\",\n   \"invitation\":{\n      \"name\":\"\",\n      \"description\":\"\",\n      \"applicationData\":\"\"\n   }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:35:22 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.studies.domain.StudyStatus.Configuring\",\n    \"studyId\": \"c057cbd4-e687-47ef-a370-84bb2f917185\",\n    \"name\": \"name\",\n    \"creationDate\": \"2021-01-14T09:35:22.040Z\",\n    \"canSetInvitation\": true,\n    \"canSetStudyProtocol\": true,\n    \"canDeployToParticipants\": false,\n    \"canGoLive\": false\n}"
						},
						{
							"name": "SetInvitation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.SetInvitation\",\n    \"studyId\": \"c057cbd4-e687-47ef-a370-84bb2f917185\",\n    \"invitation\": {\n        \"name\": \"New Invitation\",\n        \"description\": \"New Description\",\n        \"applicationData\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:39:38 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.studies.domain.StudyStatus.Configuring\",\n    \"studyId\": \"c057cbd4-e687-47ef-a370-84bb2f917185\",\n    \"name\": \"name\",\n    \"creationDate\": \"2021-01-14T09:35:22.040Z\",\n    \"canSetInvitation\": true,\n    \"canSetStudyProtocol\": true,\n    \"canDeployToParticipants\": false,\n    \"canGoLive\": false\n}"
						},
						{
							"name": "GetStudyStatus",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"$type\":\"dk.cachet.carp.studies.infrastructure.StudyServiceRequest.GetStudyStatus\",\n   \"studyId\":\"c057cbd4-e687-47ef-a370-84bb2f917185\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:40:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.studies.domain.StudyStatus.Configuring\",\n    \"studyId\": \"c057cbd4-e687-47ef-a370-84bb2f917185\",\n    \"name\": \"name\",\n    \"creationDate\": \"2021-01-14T09:35:22.040Z\",\n    \"canSetInvitation\": true,\n    \"canSetStudyProtocol\": true,\n    \"canDeployToParticipants\": false,\n    \"canGoLive\": false\n}"
						}
					]
				},
				{
					"name": "participant-service",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sys1admin1DK@cachet.dk",
									"type": "string"
								},
								{
									"key": "password",
									"value": "sys1admin1DK",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/oauth/token",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.GetParticipants\",\n    \"studyId\": \"18644246-0517-415f-8b7e-95e68bdab2e4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/participant-service",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"participant-service"
							]
						}
					},
					"response": [
						{
							"name": "AddParticipant",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.AddParticipant\",\n    \"studyId\": \"c057cbd4-e687-47ef-a370-84bb2f917185\",\n    \"email\": \"stopParticipantGroup@temp.dk\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/participant-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"participant-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:47:52 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"accountIdentity\": {\n        \"$type\": \"dk.cachet.carp.common.users.EmailAccountIdentity\",\n        \"emailAddress\": \"stopParticipantGroup@temp.dk\"\n    },\n    \"id\": \"1b317653-41e7-4d30-8577-d1951a517982\"\n}"
						},
						{
							"name": "GetParticipant",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.GetParticipant\",\n    \"studyId\": \"c057cbd4-e687-47ef-a370-84bb2f917185\",\n    \"participantId\": \"1b317653-41e7-4d30-8577-d1951a517982\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/study-participants",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"study-participants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:48:57 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"accountIdentity\": {\n        \"$type\": \"dk.cachet.carp.common.users.EmailAccountIdentity\",\n        \"emailAddress\": \"stopParticipantGroup@temp.dk\"\n    },\n    \"id\": \"1b317653-41e7-4d30-8577-d1951a517982\"\n}"
						},
						{
							"name": "GetParticipants",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.GetParticipants\",\n    \"studyId\": \"c057cbd4-e687-47ef-a370-84bb2f917185\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/participant-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"participant-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:52:02 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"accountIdentity\": {\n            \"$type\": \"dk.cachet.carp.common.users.EmailAccountIdentity\",\n            \"emailAddress\": \"stopParticipantGroup@temp.dk\"\n        },\n        \"id\": \"1b317653-41e7-4d30-8577-d1951a517982\"\n    }\n]"
						},
						{
							"name": "DeployParticipantGroup",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.DeployParticipantGroup\",\n    \"studyId\": \"7c99e68e-12aa-49d9-852f-2859fd65c26c\",\n    \"group\": [\n        {\n            \"participantId\": \"68928277-4a9c-42f7-b9cb-7339e44ccd05\",\n            \"deviceRoleNames\": [\n                \"phone\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/participant-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"participant-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 09:59:20 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"studyDeploymentStatus\": {\n        \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Invited\",\n        \"studyDeploymentId\": \"4f038ab3-be11-4b63-9c7d-4ee4a5cd1b5f\",\n        \"devicesStatus\": [\n            {\n                \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n                \"device\": {\n                    \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                    \"isMasterDevice\": true,\n                    \"roleName\": \"phone\",\n                    \"samplingConfiguration\": {},\n                    \"supportedDataTypes\": [\n                        \"dk.cachet.carp.geolocation\",\n                        \"dk.cachet.carp.stepcount\"\n                    ]\n                },\n                \"requiresDeployment\": true,\n                \"remainingDevicesToRegisterToObtainDeployment\": [\n                    \"phone\"\n                ],\n                \"remainingDevicesToRegisterBeforeDeployment\": [\n                    \"phone\"\n                ]\n            }\n        ],\n        \"startTime\": null\n    },\n    \"participants\": [\n        {\n            \"participantId\": \"68928277-4a9c-42f7-b9cb-7339e44ccd05\",\n            \"participationId\": \"d4c98d80-8d73-4f2b-8a97-522338529bed\"\n        }\n    ],\n    \"data\": {}\n}"
						},
						{
							"name": "GetParticipantGroupStatusList",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.GetParticipantGroupStatusList\",\n    \"studyId\": \"7c99e68e-12aa-49d9-852f-2859fd65c26c\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/participant-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"participant-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 10:00:11 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"studyDeploymentStatus\": {\n            \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Invited\",\n            \"studyDeploymentId\": \"4f038ab3-be11-4b63-9c7d-4ee4a5cd1b5f\",\n            \"devicesStatus\": [\n                {\n                    \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n                    \"device\": {\n                        \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                        \"isMasterDevice\": true,\n                        \"roleName\": \"phone\",\n                        \"samplingConfiguration\": {},\n                        \"supportedDataTypes\": [\n                            \"dk.cachet.carp.geolocation\",\n                            \"dk.cachet.carp.stepcount\"\n                        ]\n                    },\n                    \"requiresDeployment\": true,\n                    \"remainingDevicesToRegisterToObtainDeployment\": [\n                        \"phone\"\n                    ],\n                    \"remainingDevicesToRegisterBeforeDeployment\": [\n                        \"phone\"\n                    ]\n                }\n            ],\n            \"startTime\": null\n        },\n        \"participants\": [\n            {\n                \"participantId\": \"68928277-4a9c-42f7-b9cb-7339e44ccd05\",\n                \"participationId\": \"d4c98d80-8d73-4f2b-8a97-522338529bed\"\n            }\n        ],\n        \"data\": {}\n    }\n]"
						},
						{
							"name": "StopParticipantGroup",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.StopParticipantGroup\",\n    \"studyId\": \"7c99e68e-12aa-49d9-852f-2859fd65c26c\",\n    \"groupId\": \"4f038ab3-be11-4b63-9c7d-4ee4a5cd1b5f\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/participant-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"participant-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 10:01:03 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"studyDeploymentStatus\": {\n        \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Stopped\",\n        \"studyDeploymentId\": \"4f038ab3-be11-4b63-9c7d-4ee4a5cd1b5f\",\n        \"devicesStatus\": [\n            {\n                \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n                \"device\": {\n                    \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                    \"isMasterDevice\": true,\n                    \"roleName\": \"phone\",\n                    \"samplingConfiguration\": {},\n                    \"supportedDataTypes\": [\n                        \"dk.cachet.carp.geolocation\",\n                        \"dk.cachet.carp.stepcount\"\n                    ]\n                },\n                \"requiresDeployment\": true,\n                \"remainingDevicesToRegisterToObtainDeployment\": [\n                    \"phone\"\n                ],\n                \"remainingDevicesToRegisterBeforeDeployment\": [\n                    \"phone\"\n                ]\n            }\n        ],\n        \"startTime\": null\n    },\n    \"participants\": [\n        {\n            \"participantId\": \"68928277-4a9c-42f7-b9cb-7339e44ccd05\",\n            \"participationId\": \"d4c98d80-8d73-4f2b-8a97-522338529bed\"\n        }\n    ],\n    \"data\": {}\n}"
						},
						{
							"name": "SetParticipantGroupData",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.studies.infrastructure.ParticipantServiceRequest.SetParticipantGroupData\",\n    \"studyId\": \"feb6de27-105a-4ecd-acd8-10a2ec4deaa9\",\n    \"groupId\": \"ba6b0349-e266-4108-9d18-647df0d4c552\",\n    \"inputDataType\": \"dk.cachet.carp.input.sex\",\n    \"data\": {\n        \"$type\": \"dk.cachet.carp.input.sex\",\n        \"value\": \"Male\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/participant-service",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"participant-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 10:37:48 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"studyDeploymentStatus\": {\n        \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Invited\",\n        \"studyDeploymentId\": \"ba6b0349-e266-4108-9d18-647df0d4c552\",\n        \"devicesStatus\": [\n            {\n                \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n                \"device\": {\n                    \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                    \"isMasterDevice\": true,\n                    \"roleName\": \"phone\",\n                    \"samplingConfiguration\": {},\n                    \"supportedDataTypes\": [\n                        \"dk.cachet.carp.geolocation\",\n                        \"dk.cachet.carp.stepcount\"\n                    ]\n                },\n                \"requiresDeployment\": true,\n                \"remainingDevicesToRegisterToObtainDeployment\": [\n                    \"phone\"\n                ],\n                \"remainingDevicesToRegisterBeforeDeployment\": [\n                    \"phone\"\n                ]\n            }\n        ],\n        \"startTime\": null\n    },\n    \"participants\": [\n        {\n            \"participantId\": \"ec301b65-b8dd-411b-a5ae-58aa54dbc249\",\n            \"participationId\": \"9b2869dc-4151-4e82-bbf4-6f54d53e9e43\"\n        }\n    ],\n    \"data\": {\n        \"dk.cachet.carp.input.sex\": {\n            \"$type\": \"dk.cachet.carp.input.sex\",\n            \"value\": \"Male\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "get participant info",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@cachet.dk",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{INSTANCE_URI}}/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/studies/{{STUDY_ID}}/participants",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"studies",
								"{{STUDY_ID}}",
								"participants"
							]
						},
						"description": "> `Description`: `get participant info` \n\nThis endpoint retrieves every participant's account information in the given study.\nThere can be a case, when there are participants in the study, but those are not yet invited (deployed), which means they do not have an account in the system yet. In that case, no account will be retrieved for those users.\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get participant info",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{INSTANCE_URI}}/api/studies/daedba10-7a7b-4729-a4f7-8ca7876f9015/participants",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"studies",
										"daedba10-7a7b-4729-a4f7-8ca7876f9015",
										"participants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 13 Jul 2021 11:51:33 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"77e97753-e181-4e50-b990-f79d888ed5eb\",\n        \"username\": \"\",\n        \"email_address\": \"richard960415@gmail.com\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"roles\": [\n            \"PARTICIPANT\"\n        ],\n        \"user_id\": null,\n        \"created_by\": \"4cd52b85-2b51-48a9-95a5-cf3b770ffb8f\",\n        \"created_at\": \"2021-07-13T11:48:44.108573Z\",\n        \"updated_by\": \"4cd52b85-2b51-48a9-95a5-cf3b770ffb8f\",\n        \"updated_at\": \"2021-07-13T11:48:44.108573Z\"\n    }\n]"
						}
					]
				}
			],
			"description": "`CARP Study` - supports the management of research studies, including the recruitment of participants and assigning metadata (e.g., contact information). This subsystem maps pseudonymized data (managed by the 'deployment' subsystem) to actual participants.\n\n# ***Permissions - Study Endpoints***\n\n|**`Package`**      | **`Function`**                         | **`Permission`**                          | **`Condition`**                                                                |\n|--------------|----------------------------------|-------------------------------------|--------------------------------------------------------------------------|\n|  **Study**     | **CREATE**  | `Study Owner` | `Study Owner` is always allowed. |\n|                | **VIEW STATUS**  | `Study Owner`  | `Study Owner` is only allowed if he has access to the study. |\n|                | **VIEW OVERVIEW FOR OWNER**  | `Study Owner`  | `Study Owner` is always allowed. |\n|                | **VIEW PARTICIPANTS**  | `Study Owner` | `Study Owner` is only allowed if he has access to the study. |\n|                | **SET PROTOCOL**  | `Study Owner` | `Study Owner` is only allowed if he has access to the study. |\n|                | **GO LIVE**  | `Study Owner` | `Study Owner` is only allowed if he has access to the study. |\n|                | **DEPLOY**  | `Study Owner` | `Study Owner` is only allowed if he has access to the study. |\n|                | **ADD PARTICIPANT**  | `Study Owner` | `Study Owner` is only allowed if he has access to the study. |\n|                | **ADD RESEARCHER**  | `Study Owner`  | `Study Owner` is only allowed if he has access to the study. |\n|                | **SET INTERNAL DESCRIPTION**  | `Study Owner`  | `Study Owner` is only allowed if he has access to the study. |\n|                | **SET INVITATION**  | `Study Owner`  | `Study Owner` is only allowed if he has access to the study. |\n|                | **GET STUDY DETAILS**  | `Study Owner`  | `Study Owner` is only allowed if he has access to the study. |\n|                | **GET PARTICIPANT GROUP STATUS LIST**  | `Study Owner`  | `Study Owner` is only allowed if he has access to the study. |\n|                | **STOP PARTICIPANT GROUP**  | `Study Owner`  | `Study Owner` is only allowed if he has access to the study. |\n\n"
		},
		{
			"name": "Protocol",
			"item": [
				{
					"name": "protocol-service",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJzeXMxYWRtaW4xREtAY2FjaGV0LmRrIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTYwNDY3NDIxMCwiYXV0aG9yaXRpZXMiOlsiU1lTVEVNX0FETUlOIl0sImp0aSI6ImY4N2U2YThlLWZmMzUtNDQwYS05OTU4LTBkNTY5YWQ3YmZlYyIsImNsaWVudF9pZCI6ImNhcnAifQ.J3yrsB9DCvdposrMQkCvTMXyKtkS7qNAmd7eaHFTiCI",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/protocol-service",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"protocol-service"
							]
						},
						"description": "> `Description`: `polymorphic` \n\nThis endpoint enables a polymorphic endpoint to create and modify a protocol. \n\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443}/api/protocols/all\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "Add",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.protocols.infrastructure.ProtocolServiceRequest.Add\",\n    \"protocol\": {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\",\n        \"description\": \"\",\n        \"creationDate\": \"2021-01-21T09:30:11.910Z\",\n        \"masterDevices\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            }\n        ],\n        \"connectedDevices\": [],\n        \"connections\": [],\n        \"tasks\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.tasks.ConcurrentTask\",\n                \"name\": \"task\",\n                \"measures\": [\n                    {\n                        \"$type\": \"dk.cachet.carp.protocols.domain.tasks.measures.PhoneSensorMeasure\",\n                        \"type\": \"dk.cachet.carp.geolocation\",\n                        \"duration\": -1000\n                    }\n                ]\n            }\n        ],\n        \"triggers\": {\n            \"0\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n                \"sourceDeviceRoleName\": \"phone\",\n                \"elapsedTime\": 10000\n            }\n        },\n        \"triggeredTasks\": [\n            {\n                \"triggerId\": 0,\n                \"taskName\": \"task\",\n                \"targetDeviceRoleName\": \"phone\"\n            }\n        ],\n        \"expectedParticipantData\": [\n            {\n                \"$type\": \"dk.cachet.carp.common.users.ParticipantAttribute.DefaultParticipantAttribute\",\n                \"inputType\": \"dk.cachet.carp.input.sex\"\n            }\n        ]\n    },\n    \"versionTag\": \"1.0\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-service"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 09:31:55 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "AddVersion",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.protocols.infrastructure.ProtocolServiceRequest.AddVersion\",\n    \"protocol\": {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\",\n        \"description\": \"\",\n        \"creationDate\": \"2021-01-21T09:37:18.895Z\",\n        \"masterDevices\": [],\n        \"connectedDevices\": [],\n        \"connections\": [],\n        \"tasks\": [],\n        \"triggers\": {},\n        \"triggeredTasks\": [],\n        \"expectedParticipantData\": []\n    },\n    \"versionTag\": \"2021-01-21T09:37:18.896Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 09:39:08 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "GetBy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.protocols.infrastructure.ProtocolServiceRequest.GetBy\",\n    \"protocolId\": {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\"\n    },\n    \"versionTag\": \"2021-01-21T09:37:18.896Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 09:43:34 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n    \"name\": \"Test protocol\",\n    \"description\": \"\",\n    \"creationDate\": \"2021-01-21T09:37:18.895Z\",\n    \"masterDevices\": [],\n    \"connectedDevices\": [],\n    \"connections\": [],\n    \"tasks\": [],\n    \"triggers\": {},\n    \"triggeredTasks\": [],\n    \"expectedParticipantData\": []\n}"
						},
						{
							"name": "GetBy without version",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.protocols.infrastructure.ProtocolServiceRequest.GetBy\",\n    \"protocolId\": {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 09:44:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n    \"name\": \"Test protocol\",\n    \"description\": \"\",\n    \"creationDate\": \"2021-01-21T09:37:18.895Z\",\n    \"masterDevices\": [],\n    \"connectedDevices\": [],\n    \"connections\": [],\n    \"tasks\": [],\n    \"triggers\": {},\n    \"triggeredTasks\": [],\n    \"expectedParticipantData\": []\n}"
						},
						{
							"name": "GetAllFor",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.protocols.infrastructure.ProtocolServiceRequest.GetAllFor\",\n    \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 09:52:22 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\",\n        \"description\": \"\",\n        \"creationDate\": \"2021-01-21T09:30:11.910Z\",\n        \"masterDevices\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            }\n        ],\n        \"connectedDevices\": [],\n        \"connections\": [],\n        \"tasks\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.tasks.ConcurrentTask\",\n                \"name\": \"task\",\n                \"measures\": [\n                    {\n                        \"$type\": \"dk.cachet.carp.protocols.domain.tasks.measures.PhoneSensorMeasure\",\n                        \"type\": \"dk.cachet.carp.geolocation\",\n                        \"duration\": -1000\n                    }\n                ]\n            }\n        ],\n        \"triggers\": {\n            \"0\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n                \"sourceDeviceRoleName\": \"phone\",\n                \"elapsedTime\": 10000\n            }\n        },\n        \"triggeredTasks\": [\n            {\n                \"triggerId\": 0,\n                \"taskName\": \"task\",\n                \"targetDeviceRoleName\": \"phone\"\n            }\n        ],\n        \"expectedParticipantData\": [\n            {\n                \"$type\": \"dk.cachet.carp.common.users.ParticipantAttribute.DefaultParticipantAttribute\",\n                \"inputType\": \"dk.cachet.carp.input.sex\"\n            }\n        ]\n    },\n    {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\",\n        \"description\": \"\",\n        \"creationDate\": \"2021-01-21T09:37:18.895Z\",\n        \"masterDevices\": [],\n        \"connectedDevices\": [],\n        \"connections\": [],\n        \"tasks\": [],\n        \"triggers\": {},\n        \"triggeredTasks\": [],\n        \"expectedParticipantData\": []\n    }\n]"
						},
						{
							"name": "GetVersionHistoryFor",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.protocols.infrastructure.ProtocolServiceRequest.GetVersionHistoryFor\",\n    \"protocolId\": {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 09:57:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"tag\": \"2021-01-21T09:37:18.896Z\",\n        \"date\": {\n            \"msSinceUTC\": 1611221948\n        }\n    },\n    {\n        \"tag\": \"1.0\",\n        \"date\": {\n            \"msSinceUTC\": 1611221515\n        }\n    }\n]"
						},
						{
							"name": "UpdateParticipantDataConfiguration",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.protocols.infrastructure.ProtocolServiceRequest.UpdateParticipantDataConfiguration\",\n    \"protocolId\": {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735053\",\n        \"name\": \"Test protocol\"\n    },\n    \"versionTag\": \"1.0\",\n    \"expectedParticipantData\": [\n        {\n            \"$type\": \"dk.cachet.carp.common.users.ParticipantAttribute.DefaultParticipantAttribute\",\n            \"inputType\": \"namespace.type\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 10:32:46 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735053\",\n    \"name\": \"Test protocol\",\n    \"description\": \"\",\n    \"creationDate\": \"2021-01-21T09:30:11.910Z\",\n    \"masterDevices\": [\n        {\n            \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n            \"isMasterDevice\": true,\n            \"roleName\": \"phone\",\n            \"samplingConfiguration\": {},\n            \"supportedDataTypes\": [\n                \"dk.cachet.carp.geolocation\",\n                \"dk.cachet.carp.stepcount\"\n            ]\n        }\n    ],\n    \"connectedDevices\": [],\n    \"connections\": [],\n    \"tasks\": [\n        {\n            \"$type\": \"dk.cachet.carp.protocols.domain.tasks.ConcurrentTask\",\n            \"name\": \"task\",\n            \"measures\": [\n                {\n                    \"$type\": \"dk.cachet.carp.protocols.domain.tasks.measures.PhoneSensorMeasure\",\n                    \"type\": \"dk.cachet.carp.geolocation\",\n                    \"duration\": -1000\n                }\n            ]\n        }\n    ],\n    \"triggers\": {\n        \"0\": {\n            \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n            \"sourceDeviceRoleName\": \"phone\",\n            \"elapsedTime\": 10000\n        }\n    },\n    \"triggeredTasks\": [\n        {\n            \"triggerId\": 0,\n            \"taskName\": \"task\",\n            \"targetDeviceRoleName\": \"phone\"\n        }\n    ],\n    \"expectedParticipantData\": [\n        {\n            \"$type\": \"dk.cachet.carp.common.users.ParticipantAttribute.DefaultParticipantAttribute\",\n            \"inputType\": \"namespace.type\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "protocol-factory-service",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sys1admin1DK@cachet.dk",
									"type": "string"
								},
								{
									"key": "password",
									"value": "sys1admin1DK",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/oauth/token",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/protocol-factory-service",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"protocol-factory-service"
							]
						}
					},
					"response": [
						{
							"name": "CreateCustomProtocol",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"$type\":\"dk.cachet.carp.protocols.infrastructure.ProtocolFactoryServiceRequest.CreateCustomProtocol\",\n   \"ownerId\":\"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n   \"name\":\"name\",\n   \"customProtocol\":\"customProtocol\",\n   \"description\":\"description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/protocol-factory-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"protocol-factory-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 14 Jan 2021 10:39:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"creationDate\": \"2021-01-14T10:39:17.565Z\",\n    \"masterDevices\": [\n        {\n            \"$type\": \"dk.cachet.carp.protocols.domain.devices.CustomProtocolDevice\",\n            \"isMasterDevice\": true,\n            \"roleName\": \"Custom device\",\n            \"supportedDataTypes\": [],\n            \"samplingConfiguration\": {}\n        }\n    ],\n    \"connectedDevices\": [],\n    \"connections\": [],\n    \"tasks\": [\n        {\n            \"$type\": \"dk.cachet.carp.protocols.domain.tasks.CustomProtocolTask\",\n            \"name\": \"Custom device task\",\n            \"studyProtocol\": \"customProtocol\",\n            \"measures\": []\n        }\n    ],\n    \"triggers\": {\n        \"0\": {\n            \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n            \"sourceDeviceRoleName\": \"Custom device\",\n            \"elapsedTime\": 0\n        }\n    },\n    \"triggeredTasks\": [\n        {\n            \"triggerId\": 0,\n            \"taskName\": \"Custom device task\",\n            \"targetDeviceRoleName\": \"Custom device\"\n        }\n    ],\n    \"expectedParticipantData\": []\n}"
						}
					]
				}
			],
			"description": "\n`CARP Protocol` - a study protocol in the CARP platform is a formalized computational representation of how a study is to be executed. It describes what data types to be collected and the temporal specification, i.e., when, and for how long, and which surveys need to be filled out by participants. It is a lightweight description and does not depend on any specific infrastructure or implementation. The study protocol service enables devices to access this study protocol.\n\n\n# ***Permissions - Protocol Endpoints***\n\n| **Package**    | **Function** | **Permission** | **Condition** |\n| ------     | ------   | ------      | ------      |\n|  **Protocol**  | **CREATE**  | `Study Owner` | `Study Owner` is always allowed. |\n|                | **VIEW**  | `Study Owner` | `Study Owner` is always allowed. |\n|                | **VIEW ALL FOR AN OWNER**  |  `Study Owner` | `Study Owner` is always allowed. |\n|                | **VIEW VERSION HISTORY**  |  `Study Owner` | `Study Owner` is always allowed. | \n|                | **UPDATE**  | `Study Owner`  | `Study Owner` is only allowed if he created the resource. |"
		},
		{
			"name": "Deployment",
			"item": [
				{
					"name": "deployment-service",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJzeXMxYWRtaW4xREtAY2FjaGV0LmRrIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTYwMTA0NzUxOCwiYXV0aG9yaXRpZXMiOlsiU1lTVEVNX0FETUlOIl0sImp0aSI6IjljYjY1MTRlLTI0NmItNDFmYS04YjgxLTY3NmU1ZjYzYjE2NCIsImNsaWVudF9pZCI6ImNhcnAifQ.TLkkG7p-Yqp_-OxGL6p1ZyIGvKGz3h3T7YRSLUXUjO0",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployment-service",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployment-service"
							]
						},
						"description": "> `Description`: `RPC` \n\nThis endpoint enables an \"RPC like\" endpoint to create and modify a deployment. \n\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443/api/deployments/all\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Payload documentation`: https://github.com/cph-cachet/carp.core-kotlin/blob/develop/carp.deployment.core/src/commonMain/kotlin/dk/cachet/carp/deployment/infrastructure/DeploymentServiceRequest.kt\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "DeploymentSuccessful",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.DeploymentSuccessful\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"masterDeviceRoleName\": \"phone\",\n    \"deviceDeploymentLastUpdateDate\": \"2021-01-21T13:56:29.135Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 25 Sep 2020 12:41:33 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.DeploymentReady\",\n    \"studyDeploymentId\": \"1cbbd021-161b-470d-b421-6f08a9636b58\",\n    \"devicesStatus\": [\n        {\n            \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Deployed\",\n            \"device\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {}\n            },\n            \"requiresDeployment\": true\n        }\n    ],\n    \"startTime\": 1601037693038\n}"
						},
						{
							"name": "CreateStudyDeployment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.CreateStudyDeployment\",\n    \"protocol\": {\n        \"ownerId\": \"27879e75-ccc1-4866-9ab3-4ece1b735052\",\n        \"name\": \"Test protocol\",\n        \"description\": \"\",\n        \"creationDate\": \"2021-01-21T13:38:53.010Z\",\n        \"masterDevices\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            }\n        ],\n        \"connectedDevices\": [],\n        \"connections\": [],\n        \"tasks\": [\n            {\n                \"$type\": \"dk.cachet.carp.protocols.domain.tasks.ConcurrentTask\",\n                \"name\": \"task\",\n                \"measures\": [\n                    {\n                        \"$type\": \"dk.cachet.carp.protocols.domain.tasks.measures.PhoneSensorMeasure\",\n                        \"type\": \"dk.cachet.carp.geolocation\",\n                        \"duration\": -1000\n                    }\n                ]\n            }\n        ],\n        \"triggers\": {\n            \"0\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n                \"sourceDeviceRoleName\": \"phone\",\n                \"elapsedTime\": 10000\n            }\n        },\n        \"triggeredTasks\": [\n            {\n                \"triggerId\": 0,\n                \"taskName\": \"task\",\n                \"targetDeviceRoleName\": \"phone\"\n            }\n        ],\n        \"expectedParticipantData\": [\n            {\n                \"$type\": \"dk.cachet.carp.common.users.ParticipantAttribute.DefaultParticipantAttribute\",\n                \"inputType\": \"dk.cachet.carp.input.sex\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 13:41:49 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Invited\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"devicesStatus\": [\n        {\n            \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n            \"device\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            },\n            \"requiresDeployment\": true,\n            \"remainingDevicesToRegisterToObtainDeployment\": [\n                \"phone\"\n            ],\n            \"remainingDevicesToRegisterBeforeDeployment\": [\n                \"phone\"\n            ]\n        }\n    ],\n    \"startTime\": null\n}"
						},
						{
							"name": "GetStudyDeploymentStatus",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.GetStudyDeploymentStatus\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 13:42:33 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Invited\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"devicesStatus\": [\n        {\n            \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n            \"device\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            },\n            \"requiresDeployment\": true,\n            \"remainingDevicesToRegisterToObtainDeployment\": [\n                \"phone\"\n            ],\n            \"remainingDevicesToRegisterBeforeDeployment\": [\n                \"phone\"\n            ]\n        }\n    ],\n    \"startTime\": null\n}"
						},
						{
							"name": "RegisterDevice",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.RegisterDevice\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"deviceRoleName\": \"phone\",\n    \"registration\": {\n        \"$type\": \"dk.cachet.carp.protocols.domain.devices.DefaultDeviceRegistration\",\n        \"registrationCreationDate\": \"2021-01-21T13:50:39.391Z\",\n        \"deviceId\": \"114faa76-f00d-4665-b71b-d9b9508786d3\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 13:53:04 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.DeployingDevices\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"devicesStatus\": [\n        {\n            \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Registered\",\n            \"device\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            },\n            \"requiresDeployment\": true,\n            \"remainingDevicesToRegisterToObtainDeployment\": [],\n            \"remainingDevicesToRegisterBeforeDeployment\": []\n        }\n    ],\n    \"startTime\": null\n}"
						},
						{
							"name": "GetDeviceDeploymentFor",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.GetDeviceDeploymentFor\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"masterDeviceRoleName\": \"phone\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 13:54:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"deviceDescriptor\": {\n        \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n        \"isMasterDevice\": true,\n        \"roleName\": \"phone\",\n        \"samplingConfiguration\": {},\n        \"supportedDataTypes\": [\n            \"dk.cachet.carp.geolocation\",\n            \"dk.cachet.carp.stepcount\"\n        ]\n    },\n    \"configuration\": {\n        \"$type\": \"dk.cachet.carp.protocols.domain.devices.DefaultDeviceRegistration\",\n        \"registrationCreationDate\": \"2021-01-21T13:50:39.391Z\",\n        \"deviceId\": \"114faa76-f00d-4665-b71b-d9b9508786d3\"\n    },\n    \"connectedDevices\": [],\n    \"connectedDeviceConfigurations\": {},\n    \"tasks\": [\n        {\n            \"$type\": \"dk.cachet.carp.protocols.domain.tasks.ConcurrentTask\",\n            \"name\": \"task\",\n            \"measures\": [\n                {\n                    \"$type\": \"dk.cachet.carp.protocols.domain.tasks.measures.PhoneSensorMeasure\",\n                    \"type\": \"dk.cachet.carp.geolocation\",\n                    \"duration\": -1000\n                }\n            ]\n        }\n    ],\n    \"triggers\": {\n        \"0\": {\n            \"$type\": \"dk.cachet.carp.protocols.domain.triggers.ElapsedTimeTrigger\",\n            \"sourceDeviceRoleName\": \"phone\",\n            \"elapsedTime\": 10000\n        }\n    },\n    \"triggeredTasks\": [\n        {\n            \"triggerId\": 0,\n            \"taskName\": \"task\",\n            \"destinationDeviceRoleName\": \"phone\"\n        }\n    ],\n    \"lastUpdateDate\": \"2021-01-21T13:50:39.391Z\"\n}"
						},
						{
							"name": "UnregisterDevice",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.UnregisterDevice\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"deviceRoleName\": \"phone\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 13:59:40 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.DeployingDevices\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"devicesStatus\": [\n        {\n            \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n            \"device\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            },\n            \"requiresDeployment\": true,\n            \"remainingDevicesToRegisterToObtainDeployment\": [\n                \"phone\"\n            ],\n            \"remainingDevicesToRegisterBeforeDeployment\": [\n                \"phone\"\n            ]\n        }\n    ],\n    \"startTime\": null\n}"
						},
						{
							"name": "Stop",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.Stop\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 14:00:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Stopped\",\n    \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n    \"devicesStatus\": [\n        {\n            \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n            \"device\": {\n                \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                \"isMasterDevice\": true,\n                \"roleName\": \"phone\",\n                \"samplingConfiguration\": {},\n                \"supportedDataTypes\": [\n                    \"dk.cachet.carp.geolocation\",\n                    \"dk.cachet.carp.stepcount\"\n                ]\n            },\n            \"requiresDeployment\": true,\n            \"remainingDevicesToRegisterToObtainDeployment\": [\n                \"phone\"\n            ],\n            \"remainingDevicesToRegisterBeforeDeployment\": [\n                \"phone\"\n            ]\n        }\n    ],\n    \"startTime\": null\n}"
						},
						{
							"name": "GetStudyDeploymentStatusList",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.DeploymentServiceRequest.GetStudyDeploymentStatusList\",\n    \"studyDeploymentIds\": [\n        \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployment-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployment-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 14:01:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"$type\": \"dk.cachet.carp.deployment.domain.StudyDeploymentStatus.Stopped\",\n        \"studyDeploymentId\": \"b1575ac0-1289-4eeb-9048-a3681ad93ff8\",\n        \"devicesStatus\": [\n            {\n                \"$type\": \"dk.cachet.carp.deployment.domain.DeviceDeploymentStatus.Unregistered\",\n                \"device\": {\n                    \"$type\": \"dk.cachet.carp.protocols.domain.devices.Smartphone\",\n                    \"isMasterDevice\": true,\n                    \"roleName\": \"phone\",\n                    \"samplingConfiguration\": {},\n                    \"supportedDataTypes\": [\n                        \"dk.cachet.carp.geolocation\",\n                        \"dk.cachet.carp.stepcount\"\n                    ]\n                },\n                \"requiresDeployment\": true,\n                \"remainingDevicesToRegisterToObtainDeployment\": [\n                    \"phone\"\n                ],\n                \"remainingDevicesToRegisterBeforeDeployment\": [\n                    \"phone\"\n                ]\n            }\n        ],\n        \"startTime\": null\n    }\n]"
						}
					]
				},
				{
					"name": "participation-service",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJzeXMxYWRtaW4xREtAY2FjaGV0LmRrIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTYwMTA0NzUxOCwiYXV0aG9yaXRpZXMiOlsiU1lTVEVNX0FETUlOIl0sImp0aSI6IjljYjY1MTRlLTI0NmItNDFmYS04YjgxLTY3NmU1ZjYzYjE2NCIsImNsaWVudF9pZCI6ImNhcnAifQ.TLkkG7p-Yqp_-OxGL6p1ZyIGvKGz3h3T7YRSLUXUjO0",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/participation-service",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"participation-service"
							]
						},
						"description": "> `Description`: `RPC` \n\nThis endpoint enables an \"RPC like\" endpoint to create and modify a deployment. \n\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443/api/deployments/all\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Payload documentation`: https://github.com/cph-cachet/carp.core-kotlin/blob/develop/carp.deployment.core/src/commonMain/kotlin/dk/cachet/carp/deployment/infrastructure/DeploymentServiceRequest.kt\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "AddParticipation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.ParticipationServiceRequest.AddParticipation\",\n    \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\",\n    \"deviceRoleNames\": [\n        \"phone\"\n    ],\n    \"identity\": {\n        \"$type\": \"dk.cachet.carp.common.users.EmailAccountIdentity\",\n        \"emailAddress\": \"addParticipationTest@temp.dk\"\n    },\n    \"invitation\": {\n        \"name\": \"MockInvitation\",\n        \"description\": \"Description\",\n        \"applicationData\": \"\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/participation-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"participation-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 14:16:27 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\",\n    \"id\": \"3cf97adf-4cdf-4211-b344-67946934b657\"\n}"
						},
						{
							"name": "GetActiveParticipationInvitations",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.ParticipationServiceRequest.GetActiveParticipationInvitations\",\n    \"accountId\": \"c6102f9b-b1da-4984-9f4a-3417c7da57fc\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/participation-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"participation-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 14:18:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"participation\": {\n            \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\",\n            \"id\": \"3cf97adf-4cdf-4211-b344-67946934b657\"\n        },\n        \"invitation\": {\n            \"name\": \"MockInvitation\",\n            \"description\": \"Description\",\n            \"applicationData\": \"\"\n        },\n        \"devices\": [\n            {\n                \"deviceRoleName\": \"phone\",\n                \"isRegistered\": false\n            }\n        ]\n    }\n]"
						},
						{
							"name": "SetParticipantData",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.ParticipationServiceRequest.SetParticipantData\",\n    \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\",\n    \"inputDataType\": \"dk.cachet.carp.input.sex\",\n    \"data\": {\n        \"$type\": \"dk.cachet.carp.input.sex\",\n        \"value\": \"Male\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/participation-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"participation-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 14:28:09 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\",\n    \"data\": {\n        \"dk.cachet.carp.input.sex\": \"Male\"\n    }\n}"
						},
						{
							"name": "GetParticipantData",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.ParticipationServiceRequest.GetParticipantData\",\n    \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/participation-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"participation-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 14:30:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\",\n    \"data\": {\n        \"dk.cachet.carp.input.sex\": \"Male\"\n    }\n}"
						},
						{
							"name": "GetParticipantDataList",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"$type\": \"dk.cachet.carp.deployment.infrastructure.ParticipationServiceRequest.GetParticipantDataList\",\n    \"studyDeploymentIds\": [\n        \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/participation-service",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"participation-service"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 21 Jan 2021 14:31:15 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"studyDeploymentId\": \"ee257c1c-2dcb-4a0e-8fac-98b6b31ef9d7\",\n        \"data\": {\n            \"dk.cachet.carp.input.sex\": \"Male\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "statistics",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@cachet.dk",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:8080/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deploymentIds\": [\n        \"e0a3db7c-a17e-44d2-8572-da56e380da16\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployment-service/statistics",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployment-service",
								"statistics"
							]
						},
						"description": "> `Description`: `statistics` \n\nThis endpoint retrieves statistical information for the given deployments indicated with their ids in the payload. \n\nIt will return the DTO, which contains a list of  entities. These entities contain a deploymentID, the time of the last data upload for that deployment and the total number of datapoints uploaded to that deployment.\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "statistics",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deploymentIds\": [\n        \"e0a3db7c-a17e-44d2-8572-da56e380da16\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{INSTANCE_URI}}/api/deployment-service/statistics",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"deployment-service",
										"statistics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.20.1"
								},
								{
									"key": "Date",
									"value": "Tue, 10 Aug 2021 08:34:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"statistics\": {\n        \"e0a3db7c-a17e-44d2-8572-da56e380da16\": {\n            \"health\": {\n                \"count\": 3,\n                \"uploads\": {\n                    \"2021-08-10\": 3\n                }\n            },\n            \"location\": {\n                \"count\": 2,\n                \"uploads\": {\n                    \"2021-08-10\": 2\n                }\n            }\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "\n`CARP Deployment` - maps the information specified in a study protocol to runtime configurations used by the 'client' subsystem to run the protocol on concrete devices (e.g., a smartphone) and allow researchers to monitor their state. To start collecting data, participants need to be invited, devices need to be registered, and consent needs to be given to collect the requested data.       \n\n# ***Permissions - Deployment Endpoints***\n\n| **Package**    | **Function** | **Permission** | **Condition** |\n| ------     | ------   | ------      | ------      |\n|  **Deployment**     | **CREATE**  | `Study Owner` | `Study Owner` is always allowed. |\n|                     | **VIEW STATUS**  | `Study Owner` | `Study Owner` is only allowed if he is the owner of the protocol. |\n|                     | **REGISTER DEVICE**  | `Study Owner` | `Study Owner` is only allowed if he is the creator of the resource. |\n|                     | **VIEW MASTER DEVICE**  | `Study Owner` | `Study Owner` is only allowed if he is the owner of the protocol. |\n|                     | **ADD PARTICIPATION**  | `Study Owner` | `Study Owner` is only allowed if he is the creator of the resource. |\n|                     | **VIEW PARTICIPATION INVITATIONS**  | `Study Owner`, `Participant` | `Study Owner` and `Participant` are only allowed to see their own invitations. |\n|                     | **GET DEPLOYMENT SUCCESS**  | `Study Owner` | `Study Owner` is only allowed if he is the owner of the protocol. |\n|                     | **UNREGISTER DEVICE**  | `Study Owner` | `Study Owner` is only allowed if he is the owner of the protocol. |\n|                     | **STOP**  | `Study Owner` | `Study Owner` is only allowed if he is the owner of the protocol. |"
		},
		{
			"name": "Consent Document",
			"item": [
				{
					"name": "create one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM5Njg0LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNjUzMTNmYjUtOTMwMi00ZGJiLTg2MjktNTViMDg2ZDQ5YzhiIiwiY2xpZW50X2lkIjoiY2FycCJ9.2wuWsFfs0KBFsA_5mv33d1tyROZzqFubZ7fk_IZiblE",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"text\": \"The original terms text.\",\n\t\"signature\": \"Image Blob\"\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/deployments/{{DEPLOYMENT_STUDY_ID}}/consent-documents",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"deployments",
								"{{DEPLOYMENT_STUDY_ID}}",
								"consent-documents"
							]
						},
						"description": "> `Description`: `create one` \n\nThis endpoint creates a new consent document with the given [DEPLOYMENT_STUDY_ID].\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443/api/deployments/{{DEPLOYMENT_STUDY_ID}}/consent-documents\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created consent document.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned.\n"
					},
					"response": [
						{
							"name": "create one consent documeny by deploymentId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"text\": \"The original terms text.\",\n\t\"signature\": \"Image Blob\"\n}"
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/consent-documents",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"consent-documents"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 15:06:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n    \"created_by_user_id\": 1,\n    \"data\": {\n        \"text\": \"The original terms text.\",\n        \"signature\": \"Image Blob\"\n    },\n    \"created_at\": \"2020-06-30T15:06:46.273Z\",\n    \"updated_at\": \"2020-06-30T15:06:46.273Z\"\n}"
						}
					]
				},
				{
					"name": "get one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM5Nzc1LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiYzhmNzQ2Y2MtYzViOS00OTg2LTliOTYtNDRlZmNmZjJlMDNiIiwiY2xpZW50X2lkIjoiY2FycCJ9.0XMH1xl7twkFf0IdB0tF-5D5LWAzgh8QErUxdkNaSvI",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/deployments/{{DEPLYOMENT_ID}}/consent-documents/{{CONSENT_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"deployments",
								"{{DEPLYOMENT_ID}}",
								"consent-documents",
								"{{CONSENT_ID}}"
							]
						},
						"description": "> `Description`: `get one` \n\nThis endpoint allows retrieving one consent document with the given [DEPLOYMENT_ID], and the [CONSENT_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLYOMENT_ID}}/consent-documents/{{CONSENT_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get one consent document by deploymentId and consent document id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/consent-documents/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"consent-documents",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 15:08:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n    \"created_by_user_id\": 1,\n    \"data\": {\n        \"text\": \"The original terms text.\",\n        \"signature\": \"Image Blob\"\n    },\n    \"created_at\": \"2020-06-30T15:06:46.273Z\",\n    \"updated_at\": \"2020-06-30T15:06:46.273Z\"\n}"
						}
					]
				},
				{
					"name": "get all",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM5ODY0LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiYWZiNGNmZWMtNDViNi00YmU5LWIyZGUtNWU2YjNiNjIzOWRiIiwiY2xpZW50X2lkIjoiY2FycCJ9.oRed-XZPFbzyMghCuCGtbtTye5CrSzV46a0Rnh8-iwc",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/deployments/{{DEPLOYMENT_ID}}/consent-documents",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"deployments",
								"{{DEPLOYMENT_ID}}",
								"consent-documents"
							]
						},
						"description": "> `Description`: `get all` \n\nThis endpoint allows retrieving all consent documents with the given [DEPLOYMENT_ID as the request parameter.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLOYMENT_ID}}/consent-documents\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all consent document by deploymentId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/consent-documents",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"consent-documents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 15:09:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n        \"created_by_user_id\": 1,\n        \"data\": {\n            \"text\": \"The original terms text.\",\n            \"signature\": \"Image Blob\"\n        },\n        \"created_at\": \"2020-06-30T15:06:46.273Z\",\n        \"updated_at\": \"2020-06-30T15:06:46.273Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "delete one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM5OTg2LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZDIwMmZkYzYtMmU5Zi00MTNiLWJjN2MtM2ZhOGM4MmZmMTI1IiwiY2xpZW50X2lkIjoiY2FycCJ9.9SFbrD6TmHGC_vMlkZnQ5A-Lf_a6pGS8PfP2AcRP14c",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/deployments/{{DEPLOYMENT_ID}}/consent-documents/{{CONSENT_DOCUMENT_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"deployments",
								"{{DEPLOYMENT_ID}}",
								"consent-documents",
								"{{CONSENT_DOCUMENT_ID}}"
							]
						},
						"description": "> `Description`: `delete one` \n\nThis endpoint allows retrieving deleting consent document with the given [DEPLOYMENT_ID], and [CONSENT_DOCUMENT_ID] as the request parameter.\n\n> `Request`: (Http Method: [DELETE]) https://cans.cachet.dk:443/api/deployments/{{DEPLOYMENT_ID}}/consent-documents/{{CONSENT_DOCUMENT_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "delete one consent document by deploymentId and consent document id",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/consent-documents/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"consent-documents",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 15:11:57 GMT"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"description": "# **CARP Webservices API - Consent Document**\n\n`CARP Consent Document` enables clients to access the participant information document for a study, which can be displayed to the user on enrollment (e.g., on the smartphone). Once the user digitally signs the informed consent, a copy of the participant information document and the signed informed consent is uploaded and stored in the informed consent service in the CARP backend.\n\nThe participant information document contains detailed information on the purpose of the study and what data is being collected, and how it is handled, plus a number of other things related to clinical use, privacy, and security.\n\n\n# ***Permissions - Consent Document Endpoints***\n\n|**`Package`**      | **`Function`**                         | **`Permission`**                          | **`Condition`**                                                                |\n|--------------|----------------------------------|-------------------------------------|--------------------------------------------------------------------------|\n| **Consent** | **CREATE**  | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study deployment.<br/> `Participant` is allowed if he is a participant in the study deployment. |\n|             | **VIEW**, **DELETE**  | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study deployment.<br/> `Participant` is allowed if he is the creator of the resource. |\n|             | **VIEW ALL**    | `Study Owner` | `Study Owner` is allowed if he has access to the study deployment. |"
		},
		{
			"name": "Data Points",
			"item": [
				{
					"name": "create one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM4MDkzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiM2U2MWE1NTEtY2E2Ny00ZmZlLWFkNzQtMThlMmNjNjQ4NzZmIiwiY2xpZW50X2lkIjoiY2FycCJ9._X7gGGHpcVs1Sw0S2FT8ifboF-2YHoDRVmZ-lDnrWbg",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"carp_header\": {\n  \"study_id\": \"8\",\n  \"user_id\": \"user@dtu.dk\",\n  \"device_role_name\": \"Patient's phone\",\n  \"trigger_id\": \"task1\",\n  \"data_format\": {\n   \"namepace\": \"carp\",\n   \"name\": \"location\"\n  },\n  \"start_time\": \"2018-11-08T15:30:40.721748Z\"\n },\n \"carp_body\": {\n  \"classname\": \"LocationDatum\",\n  \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n  \"timestamp\": \"2018-11-08T15:30:40.721748Z\",\n  \"device_info\": {},\n  \"latitude\": 23454.345,\n  \"longitude\": 23.4,\n  \"altitude\": 43.3,\n  \"accuracy\": 12.4,\n  \"speed\": 2.3,\n  \"speed_accuracy\": 12.3\n }\n}"
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLYOMENT_ID}}/data-points",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLYOMENT_ID}}",
								"data-points"
							]
						},
						"description": "> `Description`: `create one` \n\nThis endpoint creates a new data point with the given [DEPLOYMENT_ID].\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443/api/deployments/{{DEPLYOMENT_ID}}/data-points\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created data point.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned.\n\n"
					},
					"response": [
						{
							"name": "create one datapoint by deploymentId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"carp_header\": {\n  \"study_id\": \"8\",\n  \"user_id\": \"user@dtu.dk\",\n  \"device_role_name\": \"Patient's phone\",\n  \"trigger_id\": \"task1\",\n  \"data_format\": {\n   \"namepace\": \"carp\",\n   \"name\": \"location\"\n  },\n  \"start_time\": \"2018-11-08T15:30:40.721748Z\"\n },\n \"carp_body\": {\n  \"classname\": \"LocationDatum\",\n  \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n  \"timestamp\": \"2018-11-08T15:30:40.721748Z\",\n  \"device_info\": {},\n  \"latitude\": 23454.345,\n  \"longitude\": 23.4,\n  \"altitude\": 43.3,\n  \"accuracy\": 12.4,\n  \"speed\": 2.3,\n  \"speed_accuracy\": 12.3\n }\n}"
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 14:44:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n    \"created_by_user_id\": 1,\n    \"carp_header\": {\n        \"study_id\": \"8\",\n        \"user_id\": \"user@dtu.dk\",\n        \"data_format\": {\n            \"name\": \"location\",\n            \"namepace\": \"carp\"\n        },\n        \"trigger_id\": \"task1\",\n        \"device_role_name\": \"Patient's phone\",\n        \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n        \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n        \"end_time\": \"2020-06-30T14:44:01.182Z\"\n    },\n    \"carp_body\": {\n        \"altitude\": 43.3,\n        \"device_info\": {},\n        \"classname\": \"LocationDatum\",\n        \"latitude\": 23454.345,\n        \"accuracy\": 12.4,\n        \"speed_accuracy\": 12.3,\n        \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n        \"speed\": 2.3,\n        \"timestamp\": \"2018-11-08T15:30:40.721748Z\",\n        \"longitude\": 23.4\n    },\n    \"created_at\": \"2020-06-30T14:44:01.251Z\",\n    \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n}"
						}
					]
				},
				{
					"name": "get one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM4NDc2LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNjUwZWJhOWQtYzY5Mi00ZTMzLThlOGEtZjgxMjNlYTJkOTNhIiwiY2xpZW50X2lkIjoiY2FycCJ9.ANlcek26IMnpJ-zqLkRpv88BHG0U3ZzfRejN1Vlbc5s",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLOYMENT_ID}}/data-points/{{DATA_POINT_ID}}",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLOYMENT_ID}}",
								"data-points",
								"{{DATA_POINT_ID}}"
							]
						},
						"description": "> `Description`: `get one` \n\nThis endpoint allows retrieving one data point with the [DEPLOYMENT_ID and [DATA_POINT_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLOYMENT_ID}}/data-points/{{DATA_POINT_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `carp_header`, `carp_body`,`created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned.\n"
					},
					"response": [
						{
							"name": "get one datapoint by deploymentId and id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 14:46:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n    \"created_by_user_id\": 1,\n    \"carp_header\": {\n        \"study_id\": \"8\",\n        \"user_id\": \"user@dtu.dk\",\n        \"data_format\": {\n            \"name\": \"location\",\n            \"namepace\": \"carp\"\n        },\n        \"trigger_id\": \"task1\",\n        \"device_role_name\": \"Patient's phone\",\n        \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n        \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n        \"end_time\": \"2020-06-30T14:44:01.182Z\"\n    },\n    \"carp_body\": {\n        \"altitude\": 43.3,\n        \"device_info\": {},\n        \"classname\": \"LocationDatum\",\n        \"latitude\": 23454.345,\n        \"accuracy\": 12.4,\n        \"speed_accuracy\": 12.3,\n        \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n        \"speed\": 2.3,\n        \"longitude\": 23.4,\n        \"timestamp\": \"2018-11-08T15:30:40.721748Z\"\n    },\n    \"created_at\": \"2020-06-30T14:44:01.251Z\",\n    \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n}"
						}
					]
				},
				{
					"name": "get all",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM4NzE3LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNDNlNjQyOTQtZWVhYi00NDg3LTgyN2QtNTNhZjAwYWZkOTA2IiwiY2xpZW50X2lkIjoiY2FycCJ9.pBqFpRXODwZE1fjeL9OwvG0MS11O4VZF1cT9Z0ewEso",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLYOMENT_ID}}/data-points",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLYOMENT_ID}}",
								"data-points"
							]
						},
						"description": "> `Description`: `get all` \n\nThis endpoint allows retrieving all data points with the given [DEPLOYMENT_ID and [DATA_POINT_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLYOMENT_ID}}/data-points\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `carp_header`, `carp_body`,`created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all datapoints by deploymentId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 14:50:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n        \"created_by_user_id\": 1,\n        \"carp_header\": {\n            \"study_id\": \"8\",\n            \"user_id\": \"user@dtu.dk\",\n            \"data_format\": {\n                \"name\": \"location\",\n                \"namepace\": \"carp\"\n            },\n            \"trigger_id\": \"task1\",\n            \"device_role_name\": \"Patient's phone\",\n            \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n            \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n            \"end_time\": \"2020-06-30T14:44:01.182Z\"\n        },\n        \"carp_body\": {\n            \"altitude\": 43.3,\n            \"device_info\": {},\n            \"classname\": \"LocationDatum\",\n            \"latitude\": 23454.345,\n            \"accuracy\": 12.4,\n            \"speed_accuracy\": 12.3,\n            \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n            \"speed\": 2.3,\n            \"longitude\": 23.4,\n            \"timestamp\": \"2018-11-08T15:30:40.721748Z\"\n        },\n        \"created_at\": \"2020-06-30T14:44:01.251Z\",\n        \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "get all pageable",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM4ODAzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTRhMzJmMDEtYTAzMC00M2Y0LThjM2UtYjFmNWI3ZGZiMjkyIiwiY2xpZW50X2lkIjoiY2FycCJ9.G9EHMF2GIUU-_H2ugA7ydLURR0LuC59h2Av7umW5U44",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLOYMENT_ID}}/data-points?page=0",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLOYMENT_ID}}",
								"data-points"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						},
						"description": "> `Description`: `get all pageable` \n\nThis endpoint allows retrieving all data points with the given [DEPLOYMENT_ID], [DATA_POINT_ID], and the [page] number as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLOYMENT_ID}}/data-points?page=0\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `carp_header`, `carp_body`,`created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all datapoints by deploymentId and pageable ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points?page=0",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 14:52:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n        \"created_by_user_id\": 1,\n        \"carp_header\": {\n            \"study_id\": \"8\",\n            \"user_id\": \"user@dtu.dk\",\n            \"data_format\": {\n                \"name\": \"location\",\n                \"namepace\": \"carp\"\n            },\n            \"trigger_id\": \"task1\",\n            \"device_role_name\": \"Patient's phone\",\n            \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n            \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n            \"end_time\": \"2020-06-30T14:44:01.182Z\"\n        },\n        \"carp_body\": {\n            \"altitude\": 43.3,\n            \"device_info\": {},\n            \"classname\": \"LocationDatum\",\n            \"latitude\": 23454.345,\n            \"accuracy\": 12.4,\n            \"speed_accuracy\": 12.3,\n            \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n            \"speed\": 2.3,\n            \"longitude\": 23.4,\n            \"timestamp\": \"2018-11-08T15:30:40.721748Z\"\n        },\n        \"created_at\": \"2020-06-30T14:44:01.251Z\",\n        \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "get all sorted",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM4OTA5LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNzAxNmI5MDktMTQ2Zi00MjBkLThjM2QtZDU3NzE2OGIwNGFiIiwiY2xpZW50X2lkIjoiY2FycCJ9.KrTwdTFhzop8c1edk-BjJFdN9mSHYx36xy4WkStZtBk",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLYOMENT_ID}}/data-points?sort=created_at,asc",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLYOMENT_ID}}",
								"data-points"
							],
							"query": [
								{
									"key": "sort",
									"value": "created_at,asc"
								}
							]
						},
						"description": "> `Description`: `get all sorted` \n\nThis endpoint allows retrieving sorted data points with the given [DEPLOYMENT_ID], [DATA_POINT_ID], and the [sort] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLYOMENT_ID}}/data-points?sort=created_at,asc\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `carp_header`, `carp_body`,`created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all datapoints by deploymentId and sorted",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points?sort=created_at,asc",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points"
									],
									"query": [
										{
											"key": "sort",
											"value": "created_at,asc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 14:53:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n        \"created_by_user_id\": 1,\n        \"carp_header\": {\n            \"study_id\": \"8\",\n            \"user_id\": \"user@dtu.dk\",\n            \"data_format\": {\n                \"name\": \"location\",\n                \"namepace\": \"carp\"\n            },\n            \"trigger_id\": \"task1\",\n            \"device_role_name\": \"Patient's phone\",\n            \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n            \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n            \"end_time\": \"2020-06-30T14:44:01.182Z\"\n        },\n        \"carp_body\": {\n            \"altitude\": 43.3,\n            \"device_info\": {},\n            \"classname\": \"LocationDatum\",\n            \"latitude\": 23454.345,\n            \"accuracy\": 12.4,\n            \"speed_accuracy\": 12.3,\n            \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n            \"speed\": 2.3,\n            \"longitude\": 23.4,\n            \"timestamp\": \"2018-11-08T15:30:40.721748Z\"\n        },\n        \"created_at\": \"2020-06-30T14:44:01.251Z\",\n        \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "get all with query",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM4OTg4LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiMjJiMzQ4M2YtNDdhNC00YzcyLTg1ODYtZjllZDZiNTljN2Y2IiwiY2xpZW50X2lkIjoiY2FycCJ9.iWKaz20Pd1TdwHl0rOTc5t3PM7IQZnqHByWmv5VY4iE",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLYOMENT_ID}}/data-points?query=study_id=={{STUDY_ID}}",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLYOMENT_ID}}",
								"data-points"
							],
							"query": [
								{
									"key": "query",
									"value": "study_id=={{STUDY_ID}}"
								}
							]
						},
						"description": "> `Description`: `get all with the query` \n\nThis endpoint allows retrieving all data points with the given [DEPLOYMENT_ID], [DATA_POINT_ID], and the [query] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLYOMENT_ID}}/data-points?query=study_id=={{STUDY_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `carp_header`, `carp_body`,`created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all datapoint with query (e.g., create_at)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points?query=created_at>2012-01-01T13:28:07Z;created_at<2020-10-06T08:55:26Z",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points"
									],
									"query": [
										{
											"key": "query",
											"value": "created_at>2012-01-01T13:28:07Z;created_at<2020-10-06T08:55:26Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 14:55:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n        \"created_by_user_id\": 1,\n        \"carp_header\": {\n            \"study_id\": \"8\",\n            \"user_id\": \"user@dtu.dk\",\n            \"data_format\": {\n                \"name\": \"location\",\n                \"namepace\": \"carp\"\n            },\n            \"trigger_id\": \"task1\",\n            \"device_role_name\": \"Patient's phone\",\n            \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n            \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n            \"end_time\": \"2020-06-30T14:44:01.182Z\"\n        },\n        \"carp_body\": {\n            \"altitude\": 43.3,\n            \"device_info\": {},\n            \"classname\": \"LocationDatum\",\n            \"latitude\": 23454.345,\n            \"accuracy\": 12.4,\n            \"speed_accuracy\": 12.3,\n            \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n            \"speed\": 2.3,\n            \"longitude\": 23.4,\n            \"timestamp\": \"2018-11-08T15:30:40.721748Z\"\n        },\n        \"created_at\": \"2020-06-30T14:44:01.251Z\",\n        \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n    }\n]"
						},
						{
							"name": "get all datapoints with query (e.g., study_id)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points?query=study_id==c9d341ae-2209-4a70-b9a1-09446bb05dca",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points"
									],
									"query": [
										{
											"key": "query",
											"value": "study_id==c9d341ae-2209-4a70-b9a1-09446bb05dca"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 14:56:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n        \"created_by_user_id\": 1,\n        \"carp_header\": {\n            \"study_id\": \"8\",\n            \"user_id\": \"user@dtu.dk\",\n            \"data_format\": {\n                \"name\": \"location\",\n                \"namepace\": \"carp\"\n            },\n            \"trigger_id\": \"task1\",\n            \"device_role_name\": \"Patient's phone\",\n            \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n            \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n            \"end_time\": \"2020-06-30T14:44:01.182Z\"\n        },\n        \"carp_body\": {\n            \"altitude\": 43.3,\n            \"device_info\": {},\n            \"classname\": \"LocationDatum\",\n            \"latitude\": 23454.345,\n            \"accuracy\": 12.4,\n            \"speed_accuracy\": 12.3,\n            \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n            \"speed\": 2.3,\n            \"longitude\": 23.4,\n            \"timestamp\": \"2018-11-08T15:30:40.721748Z\"\n        },\n        \"created_at\": \"2020-06-30T14:44:01.251Z\",\n        \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "get all with nested query",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkxMTkxMDc1LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZDg2OGVmNzEtZDVjYy00YzlhLWI4MWUtODY2NjljYjM5MTFjIiwiY2xpZW50X2lkIjoiY2FycCJ9.vzmt5JTllNfEzygthqmC2L2YvyGjQou9JzfOHuDIRoQ",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLOYMENT_ID}}/data-points?query=carp_header.user_id==user@dtu.dk;carp_body.timestamp==2018-11-08T15:30:40.721748Z",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLOYMENT_ID}}",
								"data-points"
							],
							"query": [
								{
									"key": "query",
									"value": "carp_header.user_id==user@dtu.dk;carp_body.timestamp==2018-11-08T15:30:40.721748Z"
								}
							]
						},
						"description": "> `Description`: `get all with nested query` \n\nThis endpoint allows retrieving all data points with the given [DEPLOYMENT_ID], and the [query] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/deployments/{{DEPLOYMENT_ID}}/data-points?query={{query}};{{query}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `studyId`, `created_by_user_id`, `carp_header`, `carp_body`,`created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all with nested query (e.g., deploymentsId, carp_header.user_id, carp_body.timestamp)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points?query=carp_header.user_id==user@dtu.dk;carp_body.timestamp==2018-11-08T15:30:40.721748Z",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points"
									],
									"query": [
										{
											"key": "query",
											"value": "carp_header.user_id==user@dtu.dk;carp_body.timestamp==2018-11-08T15:30:40.721748Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 15:00:59 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"study_id\": \"c9d341ae-2209-4a70-b9a1-09446bb05dca\",\n        \"created_by_user_id\": 1,\n        \"carp_header\": {\n            \"study_id\": \"8\",\n            \"user_id\": \"user@dtu.dk\",\n            \"data_format\": {\n                \"name\": \"location\",\n                \"namepace\": \"carp\"\n            },\n            \"trigger_id\": \"task1\",\n            \"device_role_name\": \"Patient's phone\",\n            \"upload_time\": \"2020-06-30T14:44:01.182Z\",\n            \"start_time\": \"2018-11-08T15:30:40.721748Z\",\n            \"end_time\": \"2020-06-30T14:44:01.182Z\"\n        },\n        \"carp_body\": {\n            \"altitude\": 43.3,\n            \"device_info\": {},\n            \"classname\": \"LocationDatum\",\n            \"latitude\": 23454.345,\n            \"accuracy\": 12.4,\n            \"speed_accuracy\": 12.3,\n            \"id\": \"3fdd1760-bd30-11e8-e209-ef7ee8358d2f\",\n            \"speed\": 2.3,\n            \"longitude\": 23.4,\n            \"timestamp\": \"2018-11-08T15:30:40.721748Z\"\n        },\n        \"created_at\": \"2020-06-30T14:44:01.251Z\",\n        \"updated_at\": \"2020-06-30T14:44:01.251Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "create many",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM5NDA5LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiMmZiZGUyNTktYjg4MS00NzkxLWJhN2ItNjQ1Y2FjNGQzMjA0IiwiY2xpZW50X2lkIjoiY2FycCJ9._-7I4dS7G9PI-0hMHLaUpjYtTlXRMSE2fAMvJjIWpaw",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLYOMENT_ID}}/data-points/batch",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLYOMENT_ID}}",
								"data-points",
								"batch"
							]
						},
						"description": "> `Description`: `create many` \n\nThis endpoint creates several data points with the given [DEPLOYMENT_ID].\n\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443/api/deployments/{{DEPLYOMENT_ID}}/data-points/batch\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created data points.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned.\n"
					},
					"response": []
				},
				{
					"name": "delete one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTM5NTM4LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNmNhMDMwMDUtNzU4Ny00OGU4LWE0NTUtZDZiNzQ4MWQ3ZmVjIiwiY2xpZW50X2lkIjoiY2FycCJ9.sLOolnm1Tqsv74eDyP-9fCvDR0sHISYMbmetfUGODaw",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLOYMENTS_ID}}/data-points/{{DATA_POINT_ID}}",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLOYMENTS_ID}}",
								"data-points",
								"{{DATA_POINT_ID}}"
							]
						},
						"description": "> `Description`: `delete one` \n\nThis endpoint deletes a data point with the given [DEPLOYMENT_ID] and [DATA_POINT_ID].\n\n> `Request`: (Http Method: [DELETE]) https://cans.cachet.dk:443/api/deployments/{{DEPLOYMENTS_ID}}/data-points/{{DATA_POINT_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned.\n"
					},
					"response": [
						{
							"name": "delete one datapoint by deploymentId and data point id",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/deployments/c9d341ae-2209-4a70-b9a1-09446bb05dca/data-points/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"deployments",
										"c9d341ae-2209-4a70-b9a1-09446bb05dca",
										"data-points",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 15:04:36 GMT"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get count of data points",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@cachet.dk",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:8080/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/deployments/{{DEPLOYMENT_ID}}/data-points/count?query=",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"deployments",
								"{{DEPLOYMENT_ID}}",
								"data-points",
								"count"
							],
							"query": [
								{
									"key": "query",
									"value": "",
									"description": "Standard RSQL query. Can be null."
								}
							]
						},
						"description": "> `Description`: `create one` \n\nReturns the total number of data points for the given deployment. In the request parameters, a `query` parameter can be used to filter the data. It accepts standard RSQL queries like the `getAll` endpoint. Can also be null.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created data point.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get count of data points",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{INSTANCE_URI}}/api/deployments/a477ad18-2ce8-4bb0-8f30-07c6439f1717/data-points/count",
									"host": [
										"{{INSTANCE_URI}}"
									],
									"path": [
										"api",
										"deployments",
										"a477ad18-2ce8-4bb0-8f30-07c6439f1717",
										"data-points",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 13 Jul 2021 11:52:31 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "0"
						}
					]
				}
			],
			"description": "# **CARP Webservices API - DataPoints**\n\n`CARP DataPoints` provides the core functionality for transferring sensory data collected from smartphones, wearables, and other devices supported in the CARP Platform. RabbitMQ is used to process data in real-time and stored in the PostgreSQL database and file server.\n\nEach data point is modeled using a JSON data format consists of two parts; a `header` and a `body`. Currently, nine endpoints have been implemented in the DataPoints service, which enables clients to upload, retrieve, and delete data. For complex queries, `RSQL` is used as a query language for parametrized filtering of entries in RESTful APIs – providing an advance and a friendlier syntax for the logical operators and other comparison operators.  \n\n*Note:* `RabbitMQ` is a message queueing platform that allows web-servers to respond to requests quickly or distribute a message to multiple consumers\n\n\n# ***DataPoints - Permissions Endpoints***\n\n|**`Package`**      | **`Function`**                         | **`Permission`**                          | **`Condition`**                                                                |\n|--------------|----------------------------------|-------------------------------------|--------------------------------------------------------------------------|\n| **Data Point** | **CREATE**  | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study deployment.<br/> `Participant` is allowed if he is a participant in the study deployment. |\n|                | **VIEW**    | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study deployment.<br/> `Participant` is allowed if he is the creator of the resource. |\n|                | **VIEW ALL**  | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study deployment.<br/> `Participant` is allowed if he has access to the study deployment. |\n|                | **DELETE**  | `Study Owner`  | `Study Owner` is allowed if he has access to the study deployment.<br/> `Participant` is allowed if he is the creator of the resource. |\n\n\n"
		},
		{
			"name": "Document",
			"item": [
				{
					"name": "create one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI4MjY0LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiODU3YmRjODMtM2JiNC00ZDg5LTgzNzktMTExN2Q1MzFlM2YyIiwiY2xpZW50X2lkIjoiY2FycCJ9.gzTGf94m80KyXlxc25JcQqr__yNlACHNtAA6TVLpcSY",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"test\",\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\"adsafd\", \"adsafd\"],\n                \"completed\": 1\n            }\n        }\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents"
							]
						},
						"description": "> `Description`: `create one` \n\nThis endpoint creates a new document with the given [STUDY_ID].\n\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created document.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "create one document",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"test\",\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\"adsafd\", \"adsafd\"],\n                \"completed\": 1\n            }\n        }\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/documents",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"documents"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI4MDE3LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNDBlOTllYmItNzYzNy00MTM1LTg1Y2ItN2YyYjFmZjkyZWU2IiwiY2xpZW50X2lkIjoiY2FycCJ9.11Z_pbGWtZ6eOU1yQUcmeppwE2MMjzGRzc3rSpZ4eFI",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents",
								"{{DOCUMENT_ID}}"
							]
						},
						"description": "> `Description`: `get one` \n\nThis endpoint allows retrieving one document with the [STUDY_ID] and [DOCUMENT_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get one document by studyId and documentId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/documents/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"documents",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 11:52:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"documentname\",\n    \"created_by_user_id\": 1,\n    \"collection_id\": 1,\n    \"collections\": [],\n    \"created_at\": \"2020-06-30T11:51:13.350Z\",\n    \"updated_at\": \"2020-06-30T11:51:13.350Z\",\n    \"data\": {\n        \"email\": \"almax@dtu.dk\",\n        \"height\": 175,\n        \"lastName\": \"Maxhuni\",\n        \"cprNumber\": \"112233-4455\",\n        \"firstName\": \"Alban\",\n        \"phoneNumber\": \"+45 50 11 22 33\",\n        \"consultationDates\": [\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\"\n        ],\n        \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n    }\n}"
						}
					]
				},
				{
					"name": "get all",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI4MDc3LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiY2I3NTAwZTEtZjZiZC00Yjk0LWFmYTctNmYzYWRiNGFmNzFmIiwiY2xpZW50X2lkIjoiY2FycCJ9.uv9sqqaqxVKPIWLmcpz2v_gaazoia7xKBI95gZXotwU",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents"
							]
						},
						"description": "> `Description`: `get all` \n\nThis endpoint allows retrieving all documents with the given [STUDY_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all documents for specific studyId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/documents",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"documents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 11:53:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"documentname\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:51:13.350Z\",\n        \"updated_at\": \"2020-06-30T11:51:13.350Z\",\n        \"data\": {\n            \"email\": \"almax@dtu.dk\",\n            \"height\": 175,\n            \"lastName\": \"Maxhuni\",\n            \"cprNumber\": \"112233-4455\",\n            \"firstName\": \"Alban\",\n            \"phoneNumber\": \"+45 50 11 22 33\",\n            \"consultationDates\": [\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\"\n            ],\n            \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "get all sorted",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI4Mjk5LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNzVkY2Y2NDctOGRmMS00ZDFmLTljNDMtOWIzZWYzNzJlMzJkIiwiY2xpZW50X2lkIjoiY2FycCJ9.jQfYW2BjPxL4WUKSGh4JnSzWNn8Y_Wxud1M3x6EiqYo",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents?sort=created_at,asc",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents"
							],
							"query": [
								{
									"key": "sort",
									"value": "created_at,asc"
								}
							]
						},
						"description": "> `Description`: `get all sorted` \n\nThis endpoint allows retrieving all documents sorted with the given[STUDY_ID] and [sort] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents?sort=created_at,asc\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all sorted by studyId - descending",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/documents?sort=created_at,desc",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"documents"
									],
									"query": [
										{
											"key": "sort",
											"value": "created_at,desc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 11:58:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"test\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:56:27.108Z\",\n        \"updated_at\": \"2020-06-30T11:56:27.108Z\",\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\n                    \"adsafd\",\n                    \"adsafd\"\n                ],\n                \"completed\": 1\n            }\n        }\n    },\n    {\n        \"id\": 1,\n        \"name\": \"documentname\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:51:13.350Z\",\n        \"updated_at\": \"2020-06-30T11:51:13.350Z\",\n        \"data\": {\n            \"email\": \"almax@dtu.dk\",\n            \"height\": 175,\n            \"lastName\": \"Maxhuni\",\n            \"cprNumber\": \"112233-4455\",\n            \"firstName\": \"Alban\",\n            \"phoneNumber\": \"+45 50 11 22 33\",\n            \"consultationDates\": [\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\"\n            ],\n            \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n        }\n    }\n]"
						},
						{
							"name": "get all sorted by studyId - ascending",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/documents?sort=created_at,asc",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"documents"
									],
									"query": [
										{
											"key": "sort",
											"value": "created_at,asc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 11:57:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"documentname\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:51:13.350Z\",\n        \"updated_at\": \"2020-06-30T11:51:13.350Z\",\n        \"data\": {\n            \"email\": \"almax@dtu.dk\",\n            \"height\": 175,\n            \"lastName\": \"Maxhuni\",\n            \"cprNumber\": \"112233-4455\",\n            \"firstName\": \"Alban\",\n            \"phoneNumber\": \"+45 50 11 22 33\",\n            \"consultationDates\": [\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\"\n            ],\n            \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n        }\n    },\n    {\n        \"id\": 2,\n        \"name\": \"test\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:56:27.108Z\",\n        \"updated_at\": \"2020-06-30T11:56:27.108Z\",\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\n                    \"adsafd\",\n                    \"adsafd\"\n                ],\n                \"completed\": 1\n            }\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "get all by query",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI4NTE5LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiOTc0N2YwZTktZjQyOS00ZDMzLWE1ODctM2FiMmQzMmQ5ZTYzIiwiY2xpZW50X2lkIjoiY2FycCJ9.sDHeKyO5vK4t8i1pSIkkbgYlDxJlS4IjtV0h3Ynn2nc",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents?query=name==test",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents"
							],
							"query": [
								{
									"key": "query",
									"value": "name==test"
								}
							]
						},
						"description": "> `Description`: `get all by query` \n\nThis endpoint allows retrieving all documents by query with the given [STUDY_ID] and [query] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents?query={{QUERY}}=={{VALUE}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all by query (e.g., collection_id)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/documents?query=collection_id==1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"documents"
									],
									"query": [
										{
											"key": "query",
											"value": "collection_id==1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:01:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"test\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:56:27.108Z\",\n        \"updated_at\": \"2020-06-30T11:56:27.108Z\",\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\n                    \"adsafd\",\n                    \"adsafd\"\n                ],\n                \"completed\": 1\n            }\n        }\n    },\n    {\n        \"id\": 1,\n        \"name\": \"documentname\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:51:13.350Z\",\n        \"updated_at\": \"2020-06-30T11:51:13.350Z\",\n        \"data\": {\n            \"email\": \"almax@dtu.dk\",\n            \"height\": 175,\n            \"lastName\": \"Maxhuni\",\n            \"cprNumber\": \"112233-4455\",\n            \"firstName\": \"Alban\",\n            \"phoneNumber\": \"+45 50 11 22 33\",\n            \"consultationDates\": [\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\",\n                \"2020-06-11T15:47:11.794680\"\n            ],\n            \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n        }\n    }\n]"
						},
						{
							"name": "get all by query (e.g., name)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/documents?query=name==test",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"documents"
									],
									"query": [
										{
											"key": "query",
											"value": "name==test"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:00:42 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"test\",\n        \"created_by_user_id\": 1,\n        \"collection_id\": 1,\n        \"collections\": [],\n        \"created_at\": \"2020-06-30T11:56:27.108Z\",\n        \"updated_at\": \"2020-06-30T11:56:27.108Z\",\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\n                    \"adsafd\",\n                    \"adsafd\"\n                ],\n                \"completed\": 1\n            }\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "update - overwritting data",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI4NzQxLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZjQ2OGZjNjItYjg1ZC00ZTI1LTk3MDMtNmQ5OGIyYjkxNTdhIiwiY2xpZW50X2lkIjoiY2FycCJ9.nT7P6O4DBCUXgtN9WQh2Ul_d9qE37Fo-wdJxWvSbgOc",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"test\",\n        \"data\": {\n            \"event\": {\n                \"id\": 5000,\n                \"date\": \"6/20/2019\",\n                \"time\": \"17:31\",\n                \"notes\": \"\",\n                \"source\": \"New input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\"sdfasdf\", \"adsafd\"],\n                \"completed\": 1\n            }\n        }\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents",
								"{{DOCUMENT_ID}}"
							]
						},
						"description": "> `Description`: `update - overwritting data` \n\nThis endpoint allows updating (overwriting) documents with the given [STUDY_ID] and [DOCUMENT_ID] as the request parameters.\n\n> `Request`: (Http Method: [PUT]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "update one",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"test_for_jakob\",\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\"adsafd\", \"adsafd\"],\n                \"completed\": 1\n            }\n        }\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/1/documents/6",
									"protocol": "https",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"1",
										"documents",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jun 2020 13:50:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 6,\n    \"name\": \"jacob_test\",\n    \"created_by_user_id\": 1,\n    \"collection_id\": 1,\n    \"collections\": [],\n    \"created_at\": \"2020-04-30T18:37:22.312Z\",\n    \"updated_at\": \"2020-06-16T13:50:12.624Z\",\n    \"data\": {\n        \"event\": {\n            \"id\": 562,\n            \"date\": \"6/20/2019\",\n            \"time\": \"15:31\",\n            \"notes\": \"\",\n            \"source\": \"Self input\",\n            \"deleted\": 0,\n            \"activity\": \"Walking\",\n            \"duration\": \"33.0\",\n            \"symptoms\": [\n                \"test_jacob\",\n                \"test_jacob\"\n            ],\n            \"completed\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "update - appending data",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTg4MjQyODUwLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTVhZTNjMjEtNGNhZS00MDk0LTliOWYtZTAwYmQxMzk1ODY2IiwiY2xpZW50X2lkIjoiY2FycCJ9.UNFrvGpBEfDHqN9JfAe7l1y_mEI1h3KRuUSXkt1_14Q",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"test\",\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\"adsafd\", \"adsafd\"],\n                \"completed\": 1\n            }\n        }\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}/append",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents",
								"{{DOCUMENT_ID}}",
								"append"
							]
						},
						"description": "> `Description`: `update - appending data` \n\nThis endpoint allows updating (appending) documents with the given [STUDY_ID] and [DOCUMENT_ID] as the request parameters.\n\n> `Request`: (Http Method: [PUT]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}/append\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "update one",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"test_for_jakob\",\n        \"data\": {\n            \"event\": {\n                \"id\": 562,\n                \"date\": \"6/20/2019\",\n                \"time\": \"15:31\",\n                \"notes\": \"\",\n                \"source\": \"Self input\",\n                \"deleted\": 0,\n                \"activity\": \"Walking\",\n                \"duration\": \"33.0\",\n                \"symptoms\": [\"adsafd\", \"adsafd\"],\n                \"completed\": 1\n            }\n        }\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/1/documents/6",
									"protocol": "https",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"1",
										"documents",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jun 2020 13:50:12 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 6,\n    \"name\": \"jacob_test\",\n    \"created_by_user_id\": 1,\n    \"collection_id\": 1,\n    \"collections\": [],\n    \"created_at\": \"2020-04-30T18:37:22.312Z\",\n    \"updated_at\": \"2020-06-16T13:50:12.624Z\",\n    \"data\": {\n        \"event\": {\n            \"id\": 562,\n            \"date\": \"6/20/2019\",\n            \"time\": \"15:31\",\n            \"notes\": \"\",\n            \"source\": \"Self input\",\n            \"deleted\": 0,\n            \"activity\": \"Walking\",\n            \"duration\": \"33.0\",\n            \"symptoms\": [\n                \"test_jacob\",\n                \"test_jacob\"\n            ],\n            \"completed\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "delete one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTg4Mjc5ODkwLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiM2UzYWY2YzItZWI3Ny00M2I1LWJlYjEtZTk1YThhOWQ1MzlkIiwiY2xpZW50X2lkIjoiY2FycCJ9.dcuwm4senPWon691A2rtgw20MJCljKpwnQMz2W8wiXE",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"documents",
								"{{DOCUMENT_ID}}"
							]
						},
						"description": "> `Description`: `delete one` \n\nThis endpoint allows deleting one document with the given [STUDY_ID] and [DOCUMENT_ID] as the request parameters.\n\n> `Request`: (Http Method: [DELETE]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/documents/{{DOCUMENT_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": []
				}
			],
			"description": "# **CARP Webservices API - Document**\n\n`CARP Document/Collection` allows clients to upload and access unstructured application-specific documents, which are structured in hierarchical collections. A document can, for example, provide detailed information on a patient (name, diagnosis, age, gender, etc.) and the list of patients in a study can be organized into a collection called \"patients\".\n\n# ***Permissions - Document Endpoints***\n\n| **Package**    | **Function** | **Permission** | **Condition** |\n| ------     | ------   | ------      | ------      |\n| **Document**   | **CREATE**  | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study.<br/> `Participant` is allowed if he is a participant in the study. |\n|                | **VIEW**, **UPDATE**, **DELETE**  | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study.<br/> `Participant` is allowed if he is the creator of the resource. |\n|                | **VIEW ALL**  | `Study Owner` | `Study Owner` is allowed if he has access to the study.|\n"
		},
		{
			"name": "File",
			"item": [
				{
					"name": "upload one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTQzOTg1LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiOGJiMTIyMmUtN2Y2NS00ZDY3LTk5NDMtNWU4NjAyMzYzMjQ1IiwiY2xpZW50X2lkIjoiY2FycCJ9.zosOr9SLTaMNbv2s7CesPF9V9VjRI1OSd5YeSuo4Rfo",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/Alban/Desktop/build.txt"
								},
								{
									"key": "metadata",
									"value": "{ \"test\": \"test\" }",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/files",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"files"
							]
						},
						"description": "> `Description`: `upload one` \n\nThis endpoint enables uploading a file with the given [STUDY_ID].\n\n> `Request`: (Http Method: [POST]) \nhttps://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/files\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created file.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "upload one",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/Alban/Desktop/cachet-logo.png"
										},
										{
											"key": "metadata",
											"value": "{ \"test\": \"test\" }",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:10:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"storage_name\": \"1593519019.png\",\n    \"original_name\": \"cachet-logo.png\",\n    \"metadata\": {\n        \"test\": \"test\"\n    },\n    \"created_by_user_id\": 1,\n    \"created_at\": \"2020-06-30T12:10:19.354Z\",\n    \"updated_at\": \"2020-06-30T12:10:19.354Z\",\n    \"study_id\": \"e86f0b78-988f-40b0-b3bf-bb3513100a5f\"\n}"
						}
					]
				},
				{
					"name": "get one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI5MjAzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNmJkZTQxODUtMTU3Ni00Yjk4LThmZGUtMDE0OGRjZGJjZDM4IiwiY2xpZW50X2lkIjoiY2FycCJ9.gMgtso3t8cVFZph7o78b9a-o1qCKRgloSFRcNPcWBys",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/files/{{FILE_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"files",
								"{{FILE_ID}}"
							]
						},
						"description": "> `Description`: `get one` \n\nThis endpoint allows retrieving one file with the given [STUDY_ID] and [FILE_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/files/{{FILE_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `storage_name`, `original_name`, `metadata`, `created_by_user_id `, `created_at `, `updated_at ` and `study_id` list.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get one file by studyId and fileId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:12:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"storage_name\": \"1593519019.png\",\n    \"original_name\": \"cachet-logo.png\",\n    \"metadata\": {\n        \"test\": \"test\"\n    },\n    \"created_by_user_id\": 1,\n    \"created_at\": \"2020-06-30T12:10:19.354Z\",\n    \"updated_at\": \"2020-06-30T12:10:19.354Z\",\n    \"study_id\": \"e86f0b78-988f-40b0-b3bf-bb3513100a5f\"\n}"
						}
					]
				},
				{
					"name": "get all files by studyId",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTQ0MDE4LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNGQ1MTU3OGItNGNiZS00OGRmLWFhZTUtOTIyMGU3NzgyZGE5IiwiY2xpZW50X2lkIjoiY2FycCJ9.7ghj7oB8Hp8aFBBCxUIbzkbkpegSwmP7T1ei1EF6Gis",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/files",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"files"
							]
						},
						"description": "> `Description`: `get all files by studyId` \n\nThis endpoint allows retrieving all files with the given [STUDY_ID] as the request parameter.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/files\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `storage_name`, `original_name`, `metadata`, `created_by_user_id `, `created_at `, `updated_at ` and `study_id` list.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all files by studyId",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/15212874-2081-4fc7-aa44-3d4094b8ee9f/files",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"15212874-2081-4fc7-aa44-3d4094b8ee9f",
										"files"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jul 2020 11:31:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"storage_name\": \"1593689489.txt\",\n        \"original_name\": \"build.txt\",\n        \"metadata\": {\n            \"test\": \"test\"\n        },\n        \"created_by_user_id\": 1,\n        \"created_at\": \"2020-07-02T11:31:30.005Z\",\n        \"updated_at\": \"2020-07-02T11:31:30.005Z\",\n        \"study_id\": \"15212874-2081-4fc7-aa44-3d4094b8ee9f\"\n    }\n]"
						}
					]
				},
				{
					"name": "get all with nested query",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTQzODk4LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNTZlNTg5NjEtNWE2Ni00ZGUxLWE5NjctMjBiOTc3MWIwZDQ4IiwiY2xpZW50X2lkIjoiY2FycCJ9.pdFTgk08ppQdyqtbgum1Gr13PYfMO0Xj54s5buqwlB0",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/files?query=id==1",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"files"
							],
							"query": [
								{
									"key": "query",
									"value": "id==1"
								}
							]
						},
						"description": "> `Description`: `get all with nested query` \n\nThis endpoint allows retrieving all files with the given [STUDY_ID] and nested [query] as the request parameter.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/files?query={{QUERY}}=={{VALUE}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `storage_name`, `original_name`, `metadata`, `created_by_user_id `, `created_at `, `updated_at ` and `study_id` list.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get all with nested query (e.g., created_by_user_id)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files?query=created_by_user_id==1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files"
									],
									"query": [
										{
											"key": "query",
											"value": "created_by_user_id==1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:22:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"storage_name\": \"1593519019.png\",\n        \"original_name\": \"cachet-logo.png\",\n        \"metadata\": {\n            \"test\": \"test\"\n        },\n        \"created_by_user_id\": 1,\n        \"created_at\": \"2020-06-30T12:10:19.354Z\",\n        \"updated_at\": \"2020-06-30T12:10:19.354Z\",\n        \"study_id\": \"e86f0b78-988f-40b0-b3bf-bb3513100a5f\"\n    }\n]"
						},
						{
							"name": "get all with nested query (e.g., original_name)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files?query=original_name==cachet-logo.png\n",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files"
									],
									"query": [
										{
											"key": "query",
											"value": "original_name==cachet-logo.png\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:23:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"storage_name\": \"1593519019.png\",\n        \"original_name\": \"cachet-logo.png\",\n        \"metadata\": {\n            \"test\": \"test\"\n        },\n        \"created_by_user_id\": 1,\n        \"created_at\": \"2020-06-30T12:10:19.354Z\",\n        \"updated_at\": \"2020-06-30T12:10:19.354Z\",\n        \"study_id\": \"e86f0b78-988f-40b0-b3bf-bb3513100a5f\"\n    }\n]"
						},
						{
							"name": "get all with nested query (e.g., storage_name)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files?query=storage_name==1593519019.png\n",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files"
									],
									"query": [
										{
											"key": "query",
											"value": "storage_name==1593519019.png\n"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:23:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"storage_name\": \"1593519019.png\",\n        \"original_name\": \"cachet-logo.png\",\n        \"metadata\": {\n            \"test\": \"test\"\n        },\n        \"created_by_user_id\": 1,\n        \"created_at\": \"2020-06-30T12:10:19.354Z\",\n        \"updated_at\": \"2020-06-30T12:10:19.354Z\",\n        \"study_id\": \"e86f0b78-988f-40b0-b3bf-bb3513100a5f\"\n    }\n]"
						},
						{
							"name": "get all with nested query (e.g., study_id)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files?query=study_id==e86f0b78-988f-40b0-b3bf-bb3513100a5f",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files"
									],
									"query": [
										{
											"key": "query",
											"value": "study_id==e86f0b78-988f-40b0-b3bf-bb3513100a5f"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:20:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"storage_name\": \"1593519019.png\",\n        \"original_name\": \"cachet-logo.png\",\n        \"metadata\": {\n            \"test\": \"test\"\n        },\n        \"created_by_user_id\": 1,\n        \"created_at\": \"2020-06-30T12:10:19.354Z\",\n        \"updated_at\": \"2020-06-30T12:10:19.354Z\",\n        \"study_id\": \"e86f0b78-988f-40b0-b3bf-bb3513100a5f\"\n    }\n]"
						},
						{
							"name": "get all with nested query (e.g., created_at)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files?query=created_at>2020-06-29T12:10:19.354Z",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files"
									],
									"query": [
										{
											"key": "query",
											"value": "created_at>2020-06-29T12:10:19.354Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:33:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"storage_name\": \"1593519019.png\",\n        \"original_name\": \"cachet-logo.png\",\n        \"metadata\": {\n            \"test\": \"test\"\n        },\n        \"created_by_user_id\": 1,\n        \"created_at\": \"2020-06-30T12:10:19.354Z\",\n        \"updated_at\": \"2020-06-30T12:10:19.354Z\",\n        \"study_id\": \"e86f0b78-988f-40b0-b3bf-bb3513100a5f\"\n    }\n]"
						}
					]
				},
				{
					"name": "download one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTkzNTI5NDU4LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiNzQ3OWU2YzQtMmI1Yy00ZTA5LWE3ZjctNjg2MGI1NDVhN2JmIiwiY2xpZW50X2lkIjoiY2FycCJ9.ZvRdAZ5Ul1bxlMQfg7-DulGFEPyE06Nr9QXP71BaEZk",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/files/{{FILE_ID}}/download",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"files",
								"{{FILE_ID}}",
								"download"
							]
						},
						"description": "> `Description`: `download one` \n\nThis endpoint allows downloading a file with the given [STUDY_ID] and [FILE_ID] as the request parameter.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/files/{{FILE_ID}}/download\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success returns a file content.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "download one",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e86f0b78-988f-40b0-b3bf-bb3513100a5f/files/1/download",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e86f0b78-988f-40b0-b3bf-bb3513100a5f",
										"files",
										"1",
										"download"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.0 (Ubuntu)"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jun 2020 12:16:20 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "21772"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Disposition",
									"value": "attachment; filename=\"cachet-logo.png\""
								},
								{
									"key": "Accept-Ranges",
									"value": "bytes"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubDomains; preload"
								}
							],
							"cookie": [],
							"body": "�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0000�\u0000\u0000\u0000�\b\u0002\u0000\u0000\u0000\":9�\u0000\u0000\u0000\u0004gAMA\u0000\u0000��\u000b�a\u0005\u0000\u0000\u0000 cHRM\u0000\u0000z&\u0000\u0000��\u0000\u0000�\u0000\u0000\u0000��\u0000\u0000u0\u0000\u0000�`\u0000\u0000:�\u0000\u0000\u0017p��Q<\u0000\u0000\u0000\u0006bKGD\u0000�\u0000�\u0000�����\u0000\u0000\u0000\u0007tIME\u0007�\u0003\u0001\u000e6\u0017h\u00154$\u0000\u0000T\u0010IDATx^��y�e�U\u001e�}k�sﭱ��A-���hM�,��'�\u0001\u001b\u0002��$�\u0005\u0012��LI�3�\bq���y�\u0005����\u0004�0\u0018�`�����'lْl���-�z\u001e��k�������>��zPWwW��%է��U��=���^k���^����%��\u0012��\u0001\t\b\u0002\u001cn����̬||Ǟ�ޫ��������ν669}ptz�H;\u0014(+3VD�>�r��b�\u0018\u0019\u000e�W�6��.����n\u0019�x3F\u0006Q\u0010\u0000\u001crU\u0014��\b@�H\u0002A\u000e\u0002 �ٻKP��}\u000e�}p<�L���7]����\u000b\u0000�\f\u0013������c�n��2H�X�:��]�\b� fF��@\"{@��*�W\fu֬�[�޼ႛn\u0018��J^��.\\��\n��&�\u0000���\fʧ\u0012H\u0000�)��DX&�Rc���\u0012\f�\t�\ba�����{�[�14���@$�d\u000e�\u0004H\u0015\u0005�2\u0019\u0000�\u0010I&\u001aH\u000b\t��L�[yO��i�ɑ����nx�u�_���\u001b���5(\f��N�nPf\u0015`\u0004��~�X&֒B�BA���\b\u0004��\fa�\u0013�}�G~�ⱙ����$���;\u0014\u0019,�I�\u001b�\fn�D)8\u0002(Pd2�LE\bH�r\u0007U�^�q�\n\\u�ʷ�j�\u001b_3p�u\u0018lI\u0015䠑\u0001@-�\u0016A���\u0001�xN �Y\u000ff�#\u0000q��:яt-\b\u0011p�n�A�L\nV� L\u0000`��ܘ�S�Bp�R�\n\u0014Z�A\u0014�j�&f�nx�]�����m���+��[V��U\u0018\u001a�K�\u0018M�\u0003F'\b�\u0018�3ǴgW��\u0012k���7e+�\u0004\u0002��#ս?��\u000f���V�NKH)��D�\u0018+�[�k\u0014\u0018A&E\u0017�Ԓ��\u0000�\u0018��1ZQ\u0005�\u0012=)e!D\u001a\u0010�\"��4���UëoyŖ��\u0003oz\rFB��F\u0003�\u000e3�X�,\u0013�y\u0000\u0007\u0000dK\u0007�5���#�?�����\u001b���v��\u0001�^Y�\u0018�_9ҿrekd������j�7��@595������\u000e�M��N\u001f\u001e���K�\u0010\u0002\rF\u0006S��`2�%�\u0018�=�)}z����o����5��\u001bdBr�`T#���K.\u0013�|��\u0004\u00100�.\u0010\"\u0005P$���z�~r�R�[9�5#h-t��\u0018���cGv�ܹ\u0007�=y��\u0007F\u001fy2�?�^i��V�;R�J�\u0014br\u0014�\u0016\u0002\u001d�z���+7�����\t/\\�)\u0011 \r�$\u0011�2��\u000fP�j�eN�\u0010\u0004\u0012\u0015%O�A�l�W L\u0014\bR��@�ki�,�,��\u0001\u0000\u00120�M�\u000f\u001d���{�|`��w���q|�?\u0010�@�\u0017A�J\u0003�E�ґ�;/������w�^r&\"\u0006\u0010�nfGqi�X�3\u0004\u0010�\u000b���\u0010\u0004\b��z\u0014T{�\u0002\u0012DXv0��\u0012�9�� d�\b\")\u0006\u0001!w\tl�7��C;o���/}��䮾��\u0017mxJR\u0015\\d��B1�����+��wm��?���*\u0013���/�fo��X&�\u0012ódq@B`\u0005�\u0015�<9\u0004(��g\u0002\\N�@��\u0003\u000e\u0019d�ܣ��ǐɚ��2P.@(�\u0000J/���'���ӟ\u001f{��U]u\u0018\u0013+W�r�S!�\u0010�����ko��\u0013���ˊ1��Q��rν{\u001c����\u0010P\u0002\u0001\b\u000e\b\n�Z�K&\u0007\u0005\u0010F5��9S\u001f>׭n��$��8,�l\u00165�\u0016�˓{$�\b�������<�\u00075��\u0013��\n\u0013S��\u001d�\u0017���d�i�K>�\u000e��^V\u0016\u0002HP%d`��\u0011'x�eb-=�\u0000�ּ~�f�b\u0000\u0013��\u000b)�YC\u0002��n\u0002jw<Pwv>���Q�{\n\u0010\u0005��\tn\u0016��ǟ~�Cz�#�*\u000e\u001c�\u000e�RKV�ӂ�x(�z[����j仿ٽd,HT@�\n�jS�X,\u0013k�!�\u0000Z�,@\u000e�\u0004\u0007\u0012\u0000!xJ��V����E\u0010ΚD\u0006���sq\u00187T@\u0004\u0004O����\u0011�\u000b�D$OA)����Kw����c�__���ə��\b��iOc��o���\u001ez�ɝ27�)��p§Z&�R��\u0015\u0013\u0019f9�N�\u0013h��\n\u001b�֜��\u0016rT���D&��A\u0000\u001c$�\r5�2\u0010��a\f�R�\u0018������GO����92��T��B��a:`t�����{���[=�EC��\\�X�#\u0004���F�PR\u0012�az&\u001d\u001c��)?4:y��ԁá���#�G� �����`\u001fZapͪ�uk�r8\u000e�c�\n�\u001a�'g\u0012�n�jH�9\u0016J���p�\u0014P%��x𣟽�\u0017��؎�\"��2�c�\u0006&\u000fGV\r����\u0019�޷z*\u0011���\f��eb-5T��)�I^��觿��#��zx���C�7��JN\t��\"`f�߲\b)Xg����M��]�+/����/�ڕh��\t=(\u0010�$]�\u001f�<g� B\u0011\u0006�\u0004\f\b�T�}6��\u0007���_��>�>ƪ��\u0018��\u0019R%߲��\u000f�����T�b8�\u0003Qc�XK�lY�\u0010r\"̓Y\u0018������\u000f�N\u000e\u0001-@\u0010I��?!��\u0014\u0004x@�\u001c�Ox�bѿnm{��k�n~�;7^�K.@\u001b)%H\b!˦ Pr\nt\u0003\u0001���\u0004\b^��U��w���������*�d)2�S�n���n��_��.Q�,�U��\u0007�р�a���������g���J]\n\u0010\r�נ�\"ͷ�*\u0019D��ɂ\u0007U�Ni�@9�j_�e�[_��-���J\f�\u0013*w/�@\u0012̲�\f���%\u0004x��Rɢ�O\u001e����̗��6�\u0017�JJ*উn���7^�[���~�9��Gx������xn�&��,-\f~p�?�X�\u0003\u0011.U\u0004 #\tPF�`9���Gk��$&F\u0001��\u0015;�UX�La������w��\u001e{b`p��i}(Z*K\u0006:sp��y}�<�\u0004\t2�J�fp�_q��GƷ=3X��T�^\u0006��3��ӭNk�u/��v�\u001d�eb-1\b�v�\u0002p�u&�}������\u0004(�\u001cR�J�*U\u000e��\u00017Tf\t�b\f!J�\u001e\u0007K\u001e<IU\u0011�\t���������m�\u000fo\u001fZ�.n�(���\u0019'�N�\u0001\u0001�S�����V\u000fmz�M��qo��g�Z�<AF�\u0001\u0015;\u001e|p�K����X��\r�eb-9�L� 9c\u0018Y����?�?�4\r�\u000f�'���W\r���w/XS\\u�Ժ�\u0007;ab�o��5m(ݫnO�\u0014\u00043\u000b���L\u0004\u0011�*�\u0001���9���{>w������ʆ��=�BJ�l\u0011Y�9\u00012�\u0011�m݊�Wl�����𤅐�\\�������7��u\u0018���O\u0004�r\bj��ZbԬR�R*ɠ�w>��[�{\u000e�޴���uŚUX�ZEd�\b��z��-!pt���ؽwt�3�'��|���xdr�T_\b\u0006�*�f��&�ӕ\u001f\t6�ڛ���\u001fm�r��'��cI96�d�\u001e�Pe\u0017WYY\u0011G��o�����v��*�d\u0016�8Pu���\u000f]��?ңb\"��\u0015@�����м\u001f���{\u0010\u00198���=w\u0016�|����t�}f���g�_�s��\u001c��1\u001b��X\u001c K%gDr\u0003�\u0016�֛��.\\���/����*C�\"Sp�\u0003\u0001\u00059Ŝ�\u0003�\\�1>�s���7�`�\u0015=�\u0018LL��M+_����u�ժ�f0\u0017@ز*\\R\b�7�\u0014!\"\u0001�\u001eW/Ir\u0000.2�\t�J��n� �\u0001I\u0010b�kF��^4�M7���o\u001a���ފ����c��E\u0004�.��U�\u001d81��3_\tG�V�t=��\n.3s���ד\u0004!'������bϝw�'vu�(��;\b��#��̆�&XV�$\t�2��\u0014�%�Y#'�?�Yd��\fُUw[m\u0016e疓2\u001aI\u0001����jw.�x�\u001b^��u����={�V\u0007\u000f�\u000bB\u0015c,�\u0012j���{�g♽k_s�\rv��h4&4\u0011I\u0000t��A������k����[�2�)Ll�8�s���_R\\~��I�Kז����|\u0011H\u0018@9� ��rĄ��Y��f���T\u000b�?�����+\u0015\b\u0017�Z�ڗ_�����vo�e\"�\u0018�)�H\u001fR<x�c�v���ʛ��\u0001�,��T/\t�BP0���[.�:���\u001d��ct(:̈�q����ì�A�2��\u001a�&�\u0018Yj�Y\u000b�F\u001ak?����VQj�c��\u0012�̎0\u00009:�DV���6�]��W������v���;h�NE7A�4�ꟼ�w���1�v\t4$Y핗�rv\f\u001dh�����|����xˬ�D\"2�;|h�M�t.�Pr\u0004���Zrș�%�f��\t&Xp�,K����ڐa-����s!�b@@@2�Q9�\nf}W_�鍯-���?�xDNJ�R����֡{\u001e.gfV���\u0016-�V��%�i/��^��k��Ⱦ��\u001d�D�\u0004�699\u0015�b�[_�\u0002A�e?֒C\u0000i\"\u001d�\u0004���L�I���\u0013��n��\u001c�M��\tV\u001b�@Ni�Cs\u001a\u0013\nt���\u001aZ�[B;����\u0013h)\u0006ГҐ�����N_��-/CJ�\u00019י\u0004)��\u0019AZ��5�?G�?��\u001c&�~�ɱ�u��ʸ~5$.�XK\u000eֳ<\u000123��h\t�LV�����tC�\u0005D��F\u0012R\u0005��y�|*X�\u0017M��Y�L\u0004���]}a��7�;};�+vSG0wG2���{\u001f^}�%�+.U�\u0018\fD�\\��i�`H)\u0015kW��\u0007［(��$,��d׶\\0��\u0000����~I���'�-a����\u001ex������ᙱ�(�d���ֺ�����7�]�i}\\�*�_k\u0003}9yS*%#ɜ�GV���N�15�\u0002S \u0005����;]i�\u0007�{����@A�\u0010P����k��ꫯ���ݓ)@���\u0000\u0011p���X��o���O���&s��Rw�৿��{�\u001d����eb-=��\u0012��m���kh|Z���X�D\bnr�\t�����\"�6�\u001b�zk窋F^}��u�q�*B�$w2H�j/\u0001\u000e#=3���1E�W\u001b�Rz�?~p]�腜p_Up���y�~�����(\b�\r����\t>\u0006�B|�\u0015÷�8�';\u0010�3����'z۶�6݀jY\u0015.-\b���������/�\u000fL\u000e�*�Zf+\u0014;\u0016�\u0016\u0007\u0018�\u0018;�>q�����\u0007G�<���۾~��_\u001d�������@\\��1���%/�+�DX�;���C\fF��\u001b�I����qO��/\u0017�\u0006o��{\u001eٶf��ε�V��\u0010�^��\\=�\b�ľ\"\u001c\u001e?���[B퉈���Xq��\u0015��$-;H�\u001aJ��\u0007��\u000b�'n�(U�J*��U\u0011�\u0002��IO%&�\u001b�\u001f�\b�><�m{\u000e~�����ՉG�\\1�:n\\G��\u0002\u0015(P����\u000b^{=ݨ��\t+o���}\u000fO<�c�hSbJ\u0016\u0002'��cc���Z\u001b\u001a@��L O\u0018jg.�����֯r�hA�d�J�\u001c���׳?�8�o\u0019�\u0011\u0004�\u0001\u0015�ғ� X�E��N?�y`*��d�\f�����\u0015����k�c��~�c����l����S{,D���\u0012��-\u0002�͕��e\u0011�\u000b\u001bW_�s?�ٸ���\t�4��Na�o�����<\t��&��\t\u0014\u0010�U٥[�ˮ�R2���\u0019\u000e��`zjOz�Ea�x�@(\u0018���y�]���dWhu\u0011��ӥ&J�,�L��vS���\u0000+d�bA�)A�DyL�B������\u000f���?y�c��ZDde�\u000f�\u0010\u001c��-p/\u001c\u0011�\u0005UU�kn��/�{�#�f�\u0012�\u0001k��\u0003������@$��%YX�\u0004\u001d�+^}C�\u001d�\u0015M\u000e\u0005����?��XV�K\n\u0001=��b��\u0015Wl�7vh���u���7�����\u0015[�%[�K.8�rh���K��=u+V^0\u0004�\"�<��e�X��ڷ�s�Ş�\\\u0003�B\u0005\u0019iNS��˂�aF\u0011\u0004�\u001a������{zoh\u0017 �*�<\u001c>8���p��W%w7�V�\u0000P�XƾP������\u0014\u0003��\"�4�|�Ƒ7߼<+\\J\u0010(d\u0004�i�-�|��ו��N��\u0003l\u0007���&G�U8xXOl\u001bjǡ\u0007\u001f\u001d��#�v���p�\u0005@����>\u0018�}�ӣ���#;v_��~\"l\u001a�'z��\u0002S@���:8I�\u0013֯��_����=]�;�\u000e�^������[��\u0006�\u001d�ZfQ\t\f\u0004\u001d��7\u0017\u0017n��>�qZ\b�B�\u001c{|ۅ��e���\u0010��\u0011hs��Ÿn��\u001a`d�@+� �\u0001\u0005B_�u��\u000b�^~����~��_;t����\u001b;t�:<\u0016�}��\u0006\u000bpv\u0012\u0007B�{�\u0003��v��+8�\u0007z���\u0011@Ȣ�A\u0011����֍}����3-c\u0019Ѓ\n\u000f����+���\u0002+�Yh�\n��\u0019\u0015�\f���\u000e������@�*uG�־�5��ZR4�-\u0010 K�r�U�\u0003\r��0�\fr\nr�i#C��^��[ް�57�E�ؾ'M��h\u0019\u0010�\u0002\u001c��[��\u0003�L�ܷ���1X��f9��\u001c�A^�C�s�?�O\u001f��\u001dm�K���651�\r�V���Bb01�-%�\b\b�\u001c򙽟����\tr0��:��u/_6ޗ\u00182�\u001ct�[2��F+\u00042�6e�\u0000\u001a3\u001b$��\"����������g�|�.�\u0000n�f�,��W�S�����_�m��M �`ʔ2\u0019ܐ�Rjk��*�t�L�\u0005��<�����\u000fj�A\u0016��*�6�9�\t�h_|A��OG\u000e/�\u0018f\u000e\u001e�ޱ�yA,5����\tP]}%�\u001d��z�7$ �\u001dr� o^����\u0017�s8��6���oᨯ�y���'\u0004k�E�\b�\u0012�9\n\ff\u000f\u0014I\u0018!6����%�+o������w?����x�@,IE+�2�J��x�~t���id0/\u0001H�>\b\u0002�/��^a������cl1\u0000��n,�住��\u001fu�U\u0017�Ȃ�v?\u0000}���U#������������}�\u0013Ks�y���zm�PF�.(\u0001\tpȥ��R�J���R�\u001c����\u0007��%Ir�ܛw\u00135U\u0004e�NCS�?��f햜w�ǿ�VIَ\u000eļ�T��V�sj�H3�`&3�T&�\u001f���{����޾VR�k�d\b�\u001b�|����mw�\u0015RJ\u0006\u0007�\u0004)8��+T�S�y���\u001f�\u0018�H7qd��x�Q\u0003HD @\b�o�\u0000�Y5\u0012V\rWL�0K��,�֞}�;���Ā,�W�����\u0019#0!(��\t\u0010�\u0019\u0005\u0002e�OJ@媤\nJdBT\f\u001e�\u001eM!\"\u0018�1��\u0015�d L�#���^e�R\u0012�}�0:�DS֥�\u0019�\u0004+�EΆC<�u\u0016!�d\fpW�6��[�ûG�b�6\u001d��R�,�\u001c}���=�N\u0010�J!!�y}\"\b�\"\u0001_}�K�\u0017m�\u0002\u0012r�a�����^LM\u0007�rV��� \\)\u000e\u000fwV�H�''\u0010Esh��燻��C^�;�0K\u0005\u0001�*{��D3�ZV2z\f\u0000Ma.1\t\u0002��#ӘI>9�^/7S\u001d�  W+�P?�f�}\b6o�\u0005\t�TY^�i\u0001�-\u0004���I�x�V�)�.����Y�y@\u0012�w/�W�Ԏt����#V,\u000b��j]ѷ�����٧7����D��I`\u0000H�A�uk�����\u0003\u000f���S\n� M=�S\u0007��¾\\U�&\u0016�������\u0003W;���c���X�M�F��~\"�Gs�H\u0000���D�\u0002�L!�8��16Q�=0�swo��r����#�\u0007G�����X51e̺�^p^y�����5�/\u000e�Y�7���regú�\r�Z��b�0���.\u0000A2w\u0001�ˀ�\u00048P̊R����\\R�� �!�BP����]ӏm?�O�*b�TT���\u0014��??��ͯ�k�<!kS\u0000��\b��6������̼��=46�Ԯ�\u000b���`@Ί\u0006�\u0000/пrd�()��\u00168�g��N�\f��ϖ\u0003�41�\u001a\\�+0wa�U8|hꉧ&��9����\u001ei�=P\u001e\u001a�9tXS�Vz��ƀ��y�\f�\u001c�\u0005�2%\u0003ǪjTPh�\u0006\u0006:����@�`Mߵ[���t���\u0003�^��+�*@�Ay0\nt��'塦X8ڬ�G4-�u\u0001\u0010��\u00077�\u0000\u001cCv�����\u0007\u001f���d���*�b�����O}nݏ�3���(��\u0004�+\u0004�U�b��\u000fO�\u0018P�\b��wpr���׽\u0014�:\u0012@-��ëVMY�\u001f�rm��~/��iK^<��\u0006(o�fD\u0010\u0011051�Ԟ�;\u001e�~��G�\u001fzb�OLZ���u��q�BlE\u0014�RV�\" ��妃sj��@#\n\u0003\bZU�T{�����\u001e���\u001d\u0013�bǊ��+��\\vQ��\u0006^q]�e���\u000e\u0000*9Ugo��1\u0000@\u0012���g\u000f\u000e\u0012�\u0004\u0002H\u0018\u0014L)�\u0015\u0017^��������^��\u001c�]���퓷��G��u�\u0001\n\b5O���\u0004зiu\\9�\u0007�a$��rz�ܵ\u0017\u000e1��AB\u0000U�ꩍ1Ok(?߉\u0005HY��r�*��B\b\u0004�K��C_����=��\u0013��\u0010G'\u0006��0\u0018<@EA���n~9�/�\u0016h\u0014\t��������<�d%�6�\u001f�2��������CO�����nm\\��+V�|��7�ڮ�b�( U��jG�\u0001\u0000�\\��d�zf\u0010@sȳ��ѽ\\�-o���g��|�\u0015�୲b���>6������R¬��V\u0013\t���������h�W�\u0015\f�x�\b4{����?��S�ׯ�X��%�\u000e\u0001J\b�4<3z���w|�sG�\u0017O���p�\"\u0006�@\t�\u0004�!'\u0014\u0005x�\n�\u0018iy�\u0007\u0001����\u001c��Q��C�r\u0007H��D$&�F�\u0013\u0007Q`��\u000f?5s��'��sӿ���/�����~�k^\u001e.X\u0005@.J�0�\u0019�Ar\u0016��\u000f(ǅ�I\u001e-\t\u001bG6���m���>S\u0002\u0012� \u0006\u000e�\u001f��\u001d\u0017���\"�0��|&\tad��f��\u0014������?�*��<]��nv�����\fG�����y��JU�-��Ď\u001d�����?׽��093\u001c\n\u0012�0\u000f���\u001cV�AR\u0010\rLp�zĄ@gͪ�H9�N�F�ι�\b\u0000�Aͪ=��\u000b�㔔S�,��\u0001��Į�w<�\u0017_\f�m]��7\\��o-.�\f��D\u0012�'Tǘ[�Evud#��:M\u001e$�������=/����\u001f�\u0004S\u0000�E�\u000e}���;\u000f�E�೚P�îr\f��ȰC4x��ւ����Z���|�F�9�ܴs�\u0017L�=�r�E\u0003Z�\u0003O���O�����O�%\u001f(\u0018:T唩rʍt�H�A�$0k�f\u0013��\n\t\u0011e@�\rv�p,����D�.\n�\"�ܐ��i L\u0012\r=�H�\u00173� t܇-����/�s���\u000f~�/.��7�����v+\u0004�\u0004�≋W�1Rv�9�ܽrs��\"֭X��\u001b���\u0003�\n=ȉ�i���;�Г#\u0017m\u0010\\F�1i\u0003j��\b��`\u001e��\u0001�I��\u0003P�S�\u0018���zܜkU�Yv7:\u0006���:T\"\u0002\t�}��R9S��\\l��\u001eؾ�O>��?;���\u0011�/D�*xrД�\u0006D�\"R�\tt'�`yj�x�\u0000X�M�\u0010�7%��;7\u001f6\n\u0006����@��&\u001a(R\u000e\"\u0011є�ܹГ\u001b9\u0018c�c��]�~�>���ny�[.�G�f�^�\u0018T&�ൿ-�B�#���`�\f�\u0001�\u001c����`�R�`f�\u0014I3�\u00109����*�N��\u0015#�ݷ�\u001b��_�ZM\u0003��\u0001z\u0010����#\f%i\fJ)Z<xp�\u0005ӓ��\u000fI\u0000-�]풆�$X@Heb�Y�ν��o<�W���DΕ5�\u0004\t4Fb��]\u001f���W��O����N1��'\u0007h\n�\u0002%Sm&\u000bt�\u0010�e\u0000 ����#�\u001eq�Q\u001f\u0000u\\u�\u0001�\u000f�<��N/\u0000\u0000�,OQ�z�[�9�2��0[�P>�̮��_�>�w���;6�;x�\u001c5\"\r�)��D\"��a�\u001d\u001f'eT��@��ќ�,\u0018\u0000\f_v��\u0005\u001b��\u001e\f}ms����JO�F�d+�h\u0000@ȡ�=2�z�!�\u0016�*�\u000b��i���J�Ո���k�\u0015-\u0007�)X��[k֞[b1?y�H�&Iu\u000b\u0002�,�aهL��h�PU{��;�ϧ�|x��`l�SM�\u0002A�\u001c�\"7�'\u0003� \u0004!zm\u001e\u00110A�37���υ.\u0004B�I(��5\\\u0001�J\u0000�!�Z\u0003f�m\u0007����x�_����o�w�%\ftT��8��٫M������<#�r�\u001b׌\\q���\u000f���\u0005�X�ڱ\u000f\u0013S\\�\u0002\u000e���+�V\u000205=�<}��\u0010�Xd��yY��}�@�ƛ^�Xߟ\u00173�p�\u0012Fͷ|���-�07�\b�Q\r9�p\u001e���\b.\t��޽O<��w�o�wW[\u001b��=\u0004B�1\u0004(YV^&6�;@De5�� �\fv�C\u00059� \u0006��X���ټ�x\b$<���H����c?�+�>��K��\u000f��|����\u0000�Yiip�\r\u0015j�z��\u0002��\u0017Z\u0017m��O�Cmq꩝>z�V�@%\u0003ːw\u000b���{��K�6J��J�a\u0005W\r�j�u�=gD������\u001f���?�����j���}��w��sN,4Z���y´�%�<\f&G4\u001b�\u000e��_=�[�\u0017��Y/X�e�1\u0006�6�؜ 8j�I�(sv\u0011( !8@��sg\n&\u0014���\u0005 +i\bȕ\u0015\u0016�%\u0005«^\u0004�H�\u0007���;�{��\u001f��\u000b~�{1\\��ܚ�լ�\t5��b�\u0005���\u001b�\t6��\u0002�\n݃G�Cc-\u0002���\u001c��s\u0003\u0016�.�\\�\u0005���\u0018`txh2�\u0004Զ��\u0006��~���m�?��\u0013\u0003[.j��\u0012\f��=�\u00004}Ϭ�$���/d@T�χ\u001e��ȯ���}v�d7v:I.O�(\u000f�@cP�I\br�\\\u0019fW�\u0001�\u001f�\r {t�1���oD��9MʢKD�d���@p\n����Z\u001f���������w��/}߿\n�]��T\b�Q�D2\u0007j�EK,ҁ����@;N�\u0012��Lb�PV\u0000\u001a+/?e}�T�\u0016��@ �Pt�a��:\f\rTȊ1�r9Z\n��fի�\u0001��|�C�\u0014�4�\u0001Y'e�' A\u0002U)��\u001c�����;�G�\\���\"�*ˀ\u00040��YgUң��<��9���\u0013�Q$D���\u0004��J�_\u0000\r�*\r\u0015,��7�^\u0000\t[P\u001c�-f,A\u0017��ze��\"g��������q+Q@�U6�4 y�\u0016Z$�0�`���Q���\n\u0016�|j|\u0002�K�7��<3\u0006P�\u001e>lI!\u0016V��\u001aO���\"\f�{Y���\"B\u0005\u0018\u0001\u0003\u0002-0 U*+$\u000f2ʞ\u000b�ul�[��\u001f �d\u00160]��o���o��btb��5�b����\u0013�3�0�Y���9���a�-�\u001f�s���h��\u0001�]evO�\u0001\u0004'Rh�eB.\b�ºU\u0005�̂�B:i�Ǽ[�,Ȍ�\r�)����,T��x��q��G��Ի8ܮTF\u0016uf\u0001�S.\u0016O/�Z��65a�\u0013I�ܧ�'G��\u0006cRI$�U\u0018�K������ơ/�7\\�\u0003�u^����V\u0018�B\u0002K���#D�\u001e\b0\nQ��.=\u0007�w\u001d��C\u0002�Ğ�\u0001�\u000e=�˿��#��T\u0011�Wb�@�\u0007W�b�EOnm\u0000��Y��HB�K\"J�\"�Ԇ��b�aFԼ��SC��T`.�B�%��I\u000bP -$��P��4��^�CQ�\u000b�PzI!Tj[�cS������g.�ş��k*�\u0005\u0015������b��\u001edv��� �P��\u0001-\u000b��wP�쪋^�[�a�\u001frz����V_�η���8{�X�d\u0002�@Nv\u0011���{\u0000(��=��@@ynH\u0000�V(\n<��ݿ�+\u0013��sC�mx��,�ꝰ\b�9}��2�%\u0000s���\u0019��\n&�\n�l�RJc�\u0006&W\u000e\n�ӣ�Q��)&�2\u000e�(\u000ew�᪨@)qaGF�5aoϊ��J3\u00162&���Z_����'��\u001c��\u0003�+���S��-��m�B Y�(�TY,`N!�J�D��fV\u0016��\t�.�h�Ͽ\u0007%�\u0002 /+�\b��{�eJg�m��,\u0000���7>�ݜMdAAԝ[��R�v����w��/�����v\u001f��2�\"(I\"\u0010\u0012\bK��T�\u0005�z.��� $G2���\n�H�C��=��;�m���^w�����ܸ�(\u0005�R'�'?��w��o�/��n7\u0014\u0006��\u0013#S/���= �r+�`��n�d��ӷ��w��c��_~o�5���W(�\tι��:}����L�b���7k��\u0015+\u0000���Mm�\b\"��J�[4w'`\u0016���;i\u0002ꩅ�:�ɲw�p<7���\f�\u00053\u0013�<���ʽw��/�\u001f�6T���R�3��\r�\u000f\\��\r��J9��\b��,\u0005D���\u0015��T\u0015!���\u000bp������3\u0004\u0010v�Z�3`\u001b]֛��T�4�\u0019���̈A��h47����N�����ϼ�?���������\u0006\u0000�I��\u000b\u0000�\u001d)\u000b3�\u0011.��W��vM�[��z�z����+�,��Y���\"\u0011�j�<Aa=И�l�j\u0018�Cu;��Mn�9���)�Z*)�h��\u001e��'�\u0003\u001f~j��v�t���\u0002���w��\u0005z��i\f.\u0010\u0010%f��d\u0004�9\u001c�u\u0015�3y���\u0012Te�Qy)�J���|8\u001d���_\u0000 ;�KC2\u0015�r8�������?M}�h�d��A\u0006���3x�\u0011\u0018'\u0007)�p�������\u001e�c�3�3��~��Ͽ3\\sY�ɏO��Q�Dê�y��/���9�X�~d�HUU���k\u000f���z���������#O�G�}$q\\�*�fʂ��G��\u0003N&�N\u0005�e3(�*\r2�<�����\u001b�����һ���\t'�av�-$�\u0004���/z�w\u000e�[���}�Tu�\u001b_��moR��Y؜\u000b�sb���(�W������m���U\u000f�\u001al\u0015�e��I\u001b���C�t�lg�\r'�)\b��Di��\u0012\u0006\u0011�'���S�z�\u0007v�\r/��Ch�^�9�pJ `���/V~כV~כ���31=O\u0015�HZ̃\u0010\u0001s!�t��w��/\r޷����ꚝZX�\u000b\n�L\u0000�\f� �^_d||�\u0003?��{���b�4\u0000\u0004�c0\u0014x�J�\t\u0001�L�J=U=U\u0015\u0011D\u0006�9�\u0011�9�\f�$Ұ��7��k�=�\u000e�\u0015=�2�,�i��P��jud\u001d\u0010$�z����ݏ��o�o߶�1���GM\u0015��\r<\u0001)R\u0000�T��\u0014Z�H�\u0003�v��Q8��\u0012�H�\u0012G����o�����v1�\u0012P��:vaԋ\u000f2\u0011(\u001c�\u0013@=�\f)�FZ��/��_�u�M����֪\u000f=%�;.��X�¨}��\u0006�X��D�;��\u0007���+cTJQ�\\�\u0004\\�}�B@����z�P6�ܠ��U��\u0003��'���0QHV'H5�=ى�\u0003B�E\b��`v$\u0007����\t�-��\nl\u001f��'\u001f���\u0004»E��\n�\u0000��\u001c\n�S,nd�P8\u0000T�n^#,�9�g�`)�v����}�O>��R�Dm���Q-x}Y�q\u001c�\fG���E�\u0016�sH,I�P}��{�Ã\u00133D�\u000b)�Lf^�������sR8�\u000b�\f�\u001c��k\u0007h̋;T��VLW\u000f�ʇ��\u001e`�����k\u001b���o�7;���� +N\u001a6X\f��y5�\t<[�\u0002�CS\u000f��\u0007Ӄ�\u0006[E�\bN&\u0013���\\T�<���\t����\"%���F�\u0000�-s5x\u001d���m�߶��\u000f�7�\u001e1�=e�x\u001d9^\u0018��S6 �<�<ɗ\u0016��\u0012K\u0000$����5��K�;��GF��\u001bBQ���\"$��t�Ґ\u0000�s8/9�8�\u0013x*��d�\u0010sEb\u0002پb\u001d\\p�\t�\u0006J�H���~��\u000f�!\u001c�za\u0016�\u0005n������\u0002�\u0016��ϊŞ��QC\u0005��\u00126xY�К��]�>��Ì�d5�\u0016���+,�T�\u0004�z����i�ǝ����_��b��HZ\u000e���X,��B\u0013�`\u0000\t$\u0013\n��������m��r$?�=�\u0002��\u0019�\u001b]>�\u0010v�>�뿇]�\u0018s����V/�XY\u0006�\u0011̫�S����?���w۪�@J�\u000f�绝�\u0014 \t�9\u0019/�#��/|}ϟ}\u0012n�R^�|~b���Ʈ\r�lwo��{d����O�KU�`sfԹ���0a�%X�\u0004�G��������\u0019\u0003�Jb���Y�/圣��B���C�\u001ey��\u000e���Ӗe�u��`��sC�\n�U��Gv>�;���T���b��\u0003�e].�ia�k����gV�ܫ<i\\�\u0014�xv���r\u0012v\"�y�z�\u0011w|��ƿ|�1��\u000b�ci�Xb5�^\u0001pK�*��/l��\u000e��1�T���8\u0011\u0004x\u001dD6圄�b@�?����oLτ�պX4�\u0000\u0003�Nx2\u00163_�k�S_鄐�\u0002��\u0016�2N\u001f�A=�4R�J��)��[������[�FF���\u000f�\u0002��4L����|ߡ\"����T]��8!(�׋n��ջ�\nT�d祐|\u0002\u0013e.\u0006�Й�k,�X� \u0018��\u001f9�w_\u001e\t���-:\u0019���9�� (�-\u0017�q��\u0005\u0006�\u000f���;f�v\u000f\u0001��rͼ��!HK˶���4&\b�v���\u0016;�\u001bRP\u0010(y�[���3D\u00136ʕ^��\u000eH�2��\u0003;?�\u0019��pF>�@�\u00063�1�4X4�\u0004:Zfն]�|髑V�U�\u000e���y�\u0018s��$s�7���<󹯥���\b��e�̍..\u0019�p\u0016�\u0005�\u000b�������3}�\u0012\u001d�(\u0000L<�I�/VH2��\u0014ha��=��<A��]?\u0010rr��-`�\u0006�&��\u0005���O}��K��|��@�s��q�0��g��\u0001\u00033վ[����\u0019,GxrI�Fz-ٰ^,�D�6s���o�{(\u0014�Sp\n\u0010s\u0012�R=�\u000b\u0013�RJ�����R\bS\u000f?>z烰 �\u0001\u000e��d�,���XbU\u0014\u001cO�0>\u0011��U����s�J�\"Dm`�\u0003���\u0006�\u0003���߁�dh\u0012Zk�H`Ɇ��%�\u0005�94��ۨJJ�сb�g�3,cqp�\u0010l�����PN��Ҭ�I.��s�E\u0011KR\u0000&\u001ex�\u001ey��.\u001c��4�*1t[�G[����\"��\f�\u001f|b��\u0007\u0001��@�O�%L\u0003\\\u0014�2\u000e��\u0000\u000f\u001e�\b\u000e�`N���MX�Y��S)��8���\nH3��r��\u000f�t)\u0001Js��Kv��D�g\u0013;4�xw�mw�ĘD�� \u0005\u0017��]�{�<\u0003�Y\u0017�\u0014\u0000�\u0002���Q�\u0011g1��G����\b���\u00185�7�їx�g�\u000b�ʉ��Ł�\f\u0006)5�ggu�s����H�\u001cf�!\t)�� ��o�5�Г��N%��l\u0019\u0014���͏�\u0017��J��y��liyF\u0010�&\n�)��wWPE\b\u0006�J*�9?\u001cȅ�j8\t���-cS�vQ��EQ\u0016d.)Z�GX�\u0005O�eqb���\u0000\u0018�@ޙ,��ܾ�w���#H(B3\u0016NIn�\u0013,D,\u0010:^�\n4%g\b��>d\u0007\u000eè*\u0017\u000bWv��~�Po`�\u001c\u0016�B\u0000\u0019�่kn\u001d���\"(R&�\u0007�-��@�\":,�|N-�[\u0000��\u0003f!�B(�\u001e+7�n:���\u0005\u0001e�J\u0001N�U&\u000bA�3\u0001�\u0016�2{�\u0018t�\\��Zf�w�\u001d}���/�Vj���]��g?c,D�9\u0015�|@�r��\u0000�{���T��\u001d#�\u001d���\u001a\u0003\u0000�\u0018���Ѧ�;����BpOA�����s��Y �(@A��C)8�\fl��(�7i|�F���H\u0002�\u0019��w�\u0014n&UJ���H\t�q��qY�\"��t\u0014�B�b\u0012�TTU��Zl\u0001��fWN���%kKw�|�w������ԧ\u0016-I\u0017���u\f\u0004��[0b��}l[%�;<�C�+�1����+\u0005�Lٵ\r�\u0017�ty�m�=�\u0013S\"����Wm\u001a4x�<y\u0001&̺�\u0000T�\r�5\nZ����7C=��,'X\u0018�,��\u0019&a�����M�Վ\u0015KK\u0000��I$�����\t\u001e�\u0004\u001c�\t��v�����c�<�O�F+�\\�q��jҽ;!�=�\u0004\u000e�q�9\u001a/\u001d\u0016&�1��\u0000\u001c��bw���ǟ\u001eH\u0010���iN�*\u0017n�V�2�ckljz��.��_���:�`�\b�|��?Nd\u001e\u0005!���@�X�!�\u0001��_��E6/!�\u00074\u0000+^��[^z\u0003�\u00077\u0018�Tgg?\u001b����R+s�1�+�\fy\u001d}�����?��?m���Ԓ\u001a�zn��4��\n�}\u000f=Y�\u001d��V֝�c�����b}s�(h\u001a�\u0001L\u001d\u001cK\u0007�Z1tsy���A�0�\u0003\u0010ܽEF��*\u0016\u0018\u001a�ၼ���C\u001f5\bq\u0014N�kM��فV�\\�Qvѳ���`�;&\u0001P_\u0007}\u0005R��%�LZ\u00018Q�\u001e�2(\u001f�o۠*Y\u0011&[��0׳��ٙ���I\f!�\u000eOr�\u0001\\wi�ڂ�sZ\u0003�dX�X��F  *�\u0018�\u001b�=�=�O�\b\u0015\u0012��L\u0014�4Z�Ar���\u0012�z�\t!;�N2q_�Y4{9\"k���p�\u0016s�\r:k�Y$�]o�K�v�=��ɓ\u00005\u001f2K1��0\u0002\u0000��{�=�\u0000R������;��\n@jh�T8%b5 \u00003@�\u0003&�أ�*\u0000yߙ�h1\u0000A�\u0000\u000bN\u0011eP2���Lʻ>�M��\u0006��MAͺ�,�\f)�\u001af�8y}*s oXB\u0010�y��l����B�2ɼ_Dnb\u0006c�+b�@N�F3��Y1'Y`��C�w�\u001fü%�)\u0010K�cG@��\u0004,\u0018�r����*��\u001cA���z�=\u0002��-Q��\u0016&u\u0003j�\u0010-j�6�3�\u0018�\u001f��R9�3��D\u0018`BY�\u0018+d\n@�׵\u0000\u0000q�ڮeW��j��e9���o�����^5�̮�Ip1�\u001d�$85b��2�)-7f��\u0007F\u000b�\u0003!)��h�jH\u0006@2Ub2�$U��\u000e\u0004kZQ\\T�y\u0001u�7b�jW��-�\u0017�\u000ej�\u0010,\u001bmf����dv�1�@=ts\u0003�*�|ά f=�Bt�-A\u0013�\u0003\u000715��6j��bo�q\n�Z�^C�[\u0016y�b�ꖣ�#��\u000b��gv���J�\u0012���\u0015Q�(\u001f.��\r�\u0004������d��F\u0010� \u001asM!�\u0016\u0011P\u0017w�Y躦�5�T�햭�ƪ�M�u�\u000303�\u0000 )\u0015!`b\u001a�4�R/�Z�_��#D(o\u0013%\u0000:2͙�(�����=mfۆ�9Mf��D���\u0007�`y���6}O�\u0000\u0014�=�V\u000f���p6��f~\u0011���~\u000bC� t5\"�VxĬw\u0001\u0010X��2jV\u000b#)۲L�H���̑I���\u0016?��\u0014��0��*?\t4>YNMg��\u0012�A�z���Si��:�F�\u001f���U�WMN�c����0�����k=���\t��Ɯ�\u000f\\Ƴ�d-\u0018\\f63953:\u0006���;�7�-\u0016&�1P\u0013�W��\u0006\u0017��,N��e�2���t�l\b3 O\b�\u0005\u0003��\u0012�@,ͽ\u000b ��S�c�c�v:�Z�YGn|6~Ī�+'��g�Ycm\tp\n�z\u0016T�\u0012�O\u001e([�s���,Xof�;>�z*�t��u��I�uA��9�2\u0016�lGQ����L6�p\tq\n�\u0002�IT���I\u0018\u0005���\u0000XJC�\u0005\u000f\n\u000e�t�� ���/U�/�y�s�\u001f䀬T�֝/+�s\t'E�\u0018bQ\u0000���ɿs.q�\u0002g\u0016���\u0003C�}\u0003���qa��q�8-��U\u0006w����\r\u000f���\u001c�\u000bK,*��)H@9)�=�\u001f;mq��7�(ϩ\r��g�#�b\u001e�Y�r�x|��\u0005�y����y�J\u0000����-w\u000e\b8�\n���fN�\u0012\u001a�\u000b\u0013\u000b��O���1x0�̞�\u0006\u0016�\u0013�er\n9e���͞��?}�]X��y�10�̫�\\�\u0002�FW\n��\b�'k\u0005���:*��\\�\u0014�5�\u0016�v�\u0015C�N��o��7��y5G\u0013�s\u001dvjmx\u0002̿�q�rv\u001auޒ\u00045�6�\u001a0,���0��\u001b�lSO\u0000ʑم��9\r\r\u0000A%o���W\f\u0002sC��4���\u0014��y7��yW��������\u001c�\t7T�@�\u0013\u0005�\u001c\u0004\u0003�T��$Xpc��7m#��K�9�[GO�\bb��=\u0000Y�8����09���X��iǁ6�:;YK�\fO�X9'_����\u001c�}�000-����U\u0005$c��{^��\r��-�|�\n�}�(ax6�Tc���Ǫ\u0013\u001dq\u0006 ؐ�u\"�܂\u0000\"�Q���Wb\u0016�V%\u0015C��Ȑ\u0004.2/w�8\u0005b�c�A\u001e\u0005\u0004�\u0018W\rw�ڌ'#�d�,岡Kԃ\f����6��=��1�,\\�\u0000�!�9e>��=^�\u0011t�D#��� F\u0006�N�t~�Xs\u000fS�\u0010E Z����H4�{\u001d�\u0019\u0013\u0001\nH\n�\u0002h���L�jtq�Ά�\u0019HA�\"��k[\u0002@^�G�#��_\u0003S�,\bPȊa.�\u001esrRz6�k@ AV�\u00067�E\u0011�\u001c\"x��\u0016\u000b\u0010K�o��G MB�]rAي,\t\u0010�|J5`\b�˓{.��\u0019\u0012�\u001c�?qs�\u000e��\u000f��G\u0000�\u0005�f�\n�Q_\u0000H�\u0013{\u0002`\u0000l��{\t2{�!:�z|�sv�Ƴ\u000f?%\u000f4\u0000�{��Z���\u000f$�Ƹ=c,,��\u0006\u0001�`\u0012\u0002��\"�k��۲���l�J��\u0014\u0018\u0018�ݑW\u0007(��j\u001e�ԟ�^;0�����z�+KX�g�\u0004��y�'\u0001O\u0001h�\fd\u001e�4��x�%��e\u001a\u001c�\tI�h�'�r0RpZ���+.�\b�\u000b<�מ\u0003���b�\u0010�PV�ٖ�ߴ��r(\u001d܇\u00182�H\u001e+��F3\u001a�\u0014\u0019Q�\u0005\u0018l^��i>��\u000f�]��\u000f������3%�Y@\u0004�d��t0�\u0014D�&��\u0000�f��ѿ<\f��^V�\"�q�\u0013��77=��85�5���+\f�_;�a}zlO�wt�t���n\u0006T��\u0018�\u001d����\u0015EL��N�5���+wE�Y\u0012��\u0003����7�.�d�Ě#�\u0004��S;�\u001ey�/�X�@�P��&\f\u0014%��\u0011�`0O��V�|���77Q�#�Ǹ\u0004OU5�y\u000bW\r\u000bм\u0005��ۺg\u000b\u000b\u0010kv�7Ԫ%?Mr�5}[/���]�\u0004�\u0012A�\f9���\\\n���ow���+?��\u001e\u0013�|�1�t����� ��\u0019\u0013�\u000ea���������ܿ�'��W���d�������{ת_3ea����w�nȓ���׀v*�l8�Z�Ku5��`@0B-�n�\u001a��j۰\u000e�d\u0002|�6��p�\u0012�_��\u001azx�C���\u001bd�q��\u0000ߙ�wQp%Ɉ\u0001ؐG��,f�\u0012fQ�/)g�0W!����,���K����cN��'mR�\u001c�\u0012�\u0004�\u0005\u000fg�\n�1o�%\u000b�I3�h���f=���[0X(�>�ٽ��ĩ\u0011�hd\u0007\t�\u0000�y�K\u001e\u001c�\u001b:R�\u0006!\u0017�vȤ�\u0012�\u0004���B\u0005���M�\u0005-�:?\tj�hM,���YQ���Y���\b�v�#$\u0016=\u000fU\u0015�HP��Y�\rb�\u0002B�$�1���\t!��IUq����\\�?��)\n:��.g\u0019gB,�և\u0010��K�eC����(9i��\u0007��:��Ir��\u00164�ye\r=N\u001f����(�uI\b\tբ\u0016��A�c��MN��m���D&��@��\u001d��\u0005�M��L���u��_��I�\u0012vNe>�8\u0013b��-+��n�o8tǓ�v��\u0013���6\u00076��\u0018�<�́�\fi\u00054�r\u0011�ז�������A\u0016�ܹ�Ē$\u000br\u0013�e\u0012�řY�}5�{��r��\u0013}���(�\u0015�˰a�{\u0015r�l��x)p�ĚUޙ@E\u001cy�\r{;��\u0018��\t{\nͦ\u001b�&�\u0000Γ�)� .*!-_�\b\u0018$�=\u0010�@�n�%\u0010h�,%%RI)�Hp1��D8z��\u0000;\u001c���Z��\u001b0��T��a?���{�>�����w��\u0014\u0017n�zr�\u0005�\u0016\u0012\"�ȗf�AԼ�\u0007����\u0011s�(\u0000\u0000\u0011\f��av)��ۖP]>��O�h^�v��)�Q8�v�Wl>\u001eb`�\u0011֭Ys������\u0017�t�\u001c�O������\u0015��\rW�<�c��\\���G���\u000fj�\bd���\u0006��G\u0002`m�5g���\"/1����{�\u0011M5�����v;\u0000B:�r���\u0016�_*\u0017i�C�:��dN��\u0011+\u000f�~��[ny�S_��\u0012�1�$'��x?\n\u00048��+@L��x��Ru�Π\\N\u001e�c/}��PqȬ%\u0002�\u000bq�\u0017�'����q���\bfӝ�y͍\u0018j�\u0013b]c��)�\u00103�\u0019\u0016K�\u001c3]���woڐ�z���Ϭ\u00049J�q^\u001b\u001d]��̅J� �\u0001Y�\u0012u����[4��9\u00010ʨ�\\��Ο:3���\u0017f\u0015ɲW�m�`��\u001ba�ׅW���,=�\u0019bqr� ��y��oy͸'��\b �(W��p�#f�?�:q�ϧ�b=2��Ϗ\u0007\u001b0���Y�1'\u0013��<ӛ��\b'y\u0001�q��̋�\u0019���|Y��\u0017�J��4ۧ����\u001c� \u0016��B��oy��\u0019\t)T�D\u0014@�W��\b��\u000fI���\u0003�g��\u0002\u0012�5�\\��g���B}�s's��ܙ\u0004_�&\u0017z�\u0014j6\u0016\u0000,��\u0001�<�E�65<��ߌ�\u0016Bb��\\�*\u001b�.\u0005\u0016A�\u0006�IՊ�_��gz��\u0015S\u0017I����i�2���\f��x���T�x�+q`Bp\u0000H&H\u0016L��f����+\u0007^w���y\u001d&�0\u00170��z�9\u0016K,\u0011�{q�\u001e����`z�?\b\f��Oɳ<\u0015?\u001d�\u000f�s}~�\r\r�[��\u0006�d��&\u000bn~�\u001b�aHI�e\u001f�l��ٚ��\u0019\u0016K�\u00049<�\u0010\u001e��W�\u001b��uK�,�,\u0017}�\u0017=HQ��WA�<\th#�t�⚭\u001b��\u0006\u0001���Yχ\u0001y}�IO}N�؎'T\u0007RJ��\u0017��MU�%\u001a�7�Y\"A�\u0002��\u0014�!��^�LF�\u0019i�;�\t[6(9\u0019@�L@�k-Sʟ\u000b�zb,�X��yb������bW_:�\u000eP�->\r�ōzZH8�\f2\u0016Ψ0�)^���~\u001b��: �f/\u0006�g�Khb-�X�쭓�\u001c�n\\�O�}�\u0015�QƄt��.cA(\u0017�\u0017��*� \u001b\u000b��\u0007�+\\~��$2��h��ʋ�A-nW��a��\"\u0000��\u001b�4H\u0017~���_��19�\u0016\u001b\u0006\\\u0006jkɄ�\u0004X���T��t����fH��&@K4���˰���b{^��ր�\u001dӺU���w�\fu\u001c�}��8S�\f!�\u0010\u001d�)���p�\u000f|wܼ^�3y���Y'��~��\u001e�%V=&�\t�\b0�Jk���\u000b��uSݙ\b��\u0002Y�\u0007}�B�y�D(d��̺��j�\u001d�$%Z�]z�\u0013.z�'���%�B\u0016K,e�%\u0006!G\t���֖����\u0017��2T�\u0013��\u00151�\u0011�����z��\u0017-D$��i�pҙw�%e�)��Q0@Ąaf�+���X�B��-]��\u0011b������uuf�\u0012\u0004��WƗ��\u001f��}F\u000b�\\42��^�ku��\u0012�Z�\u0017��&0�\u001c����9��\u0011\u001c���x�҆\u001f���kn�'\u000by\u001f2��H\u0002��Fo�[v�Ģ@@���\u0010\u001e\r(7��w\f����3�\u0001\u0014��\n��D\u0000�vŢ�I�/j\u000b̄�`\u000e\u0000�(�X�\u0011��n\u0002���\b�\u0018��V���K��N��\u00069��\u0015��%\u0016P�N\u001c^�z)7�\u0004�\u001f����/�0�\u0014a&WKT2�a\"�f��\u0017+��d�\u000e\u0007*Cep�i �J�h���lZu�O�\u0010֬�\u000bޒ\u0001l��\u001f�\u0002�TW\u0018W�g\u0019,8�ѽ�套��yd�ef0T�\u0004%C\u0019���]p�ӿ��\u001aߦ\u0013U�\u000fm��;E�ɝx:�.y�?\u001d|�+իh�%��l���\u000f�&V�\u0014�.��n�!g�\u0007Ik���5�xӞ�ta��H0xS��_��B��(�.�T�L�\u0002��\u0012\n!�U�����M?�}21F\u0011\f�ʉ��i\u0003.�X\u0000�eWg3\u0013������k_:٭\"\"\\�\u0001/�{�t�E\f����[�Hh��\f��\u001d[�{�]{ٍ�{�\u000f\u0015��5�#�\u0001�����c��R���vRy[�f�+\u0012�ܲ��_���K/(Sh[� �\n��,.a���\u0000kG\u0003r�\u001e�� ���B�r*u/Xw�\u0007އ�.a�iV\u0002��6-�\u001b�ٱXb�Ĩ�е��B�sK�����-7]���\u0018\u001bhM\u0011=B\u0006UU����\u000e'�y��Ǡ\u001e�M\u001eU�0C��b���#����O\u000e��f/+Ƃ\t-��j��Bg_:,�X�%j\\s��\u001cC\u0012\u0019�R�\u0015���W������\u0015\u0006xbr�lԁ\u0001��\u0002\b�����l�k\u0016D^�\u0001di\u000fV��P1Űcз��\u0007ּ�[UV�<���-+�srGg\r�%\u0016������\t\u0011��r?�\u0012��������w\u001d*�\n\u00111�AU#��)��z6p�1F���uK+�\n\r8���ى}m/�,�S��\u0013�I���ֈ\u001e'�l���n����\u001f_���L�\u0011�\u0005��M\t�'⧾��R`�˿✴0b~K3S�\u0002rYH#�\u0017��G{ez���pUl�X�2\u0011���\u0006��y�ep�Xa~9�g��Sȱ\"\u0005�sx\u00030_�8���kqr)üz�E�\u0003,۔'=\u0003M4!��/g���\u0016\u0011U \u001d�tC\n\u001e\\�����w}���\u001eo���Z\u0000\u0000 �%�<��=�%\u00162����?%\u0005�\u000f���{R�}��\u000f�Yˌ)%\u000f�9(�n\n@\u000e�H\u0014y��\u0018�\u001d�y���\tH\u000e��n�\u001a���<���\u0005�Sf\t��9��%�IU^�pR�\u0011$\u0001e\u0000���+�\u0003\u0002�zwZ�{�z�9\n\u0014{����֭���iE\u001b�y�$1+͟�r�\u000f�\u0002�\u0016\u0000�\u0005H�\t[H��?�#�]���\"C��\n`\bY<d���\u0016��\u0015լw\u0002����#٦9\\�qL�\r����@�J=kmz^\u0014m�\f\u0012NZ�\u001e&U��\u0018��eM\u001d�\u000e8a�UNcE'i��䛿�\u001d��ҿ�U\u001dx�,>/ht<�9�r�''K�\r�A�b�.���x���_?���/Yp�\u0010�BB\u0014\u0001U�-d%��+\u001a\u0001J\u0006� ����M\u0000m~��\f@�b��gK$j��Oa��S\u0006\u0005G��AfN�\n�\u0003\u0005(�y\r�`�����K~��5�\u0007�H\u0012�|\u0011Q���\u0012K@\u0002\u0002aB\u001b�(g�\u0012�my�{lu�#\u001f��)\u001f�V�R*�\u0016\rr'��\u0019�I@e�\t�[��I/���ȭ��f���:�2�\"�`\u000e�݈8`\u000f�3�#X\u0019̒��J�\u0013#\u0019L�Tp�\tA�\u0014����˂�\f`�vp ^�����\u001f�\u0001�\nVR0\"5���\u001f���}��p��5Bc\u000f\u001b�\u000bƐp��?v�\u0007>4�ԁ!���1K\u001d��C\u000bE-\b�Sd27!�W\u0001U@�\nc�r��rKg�����J\n�d�c\u001c����W��\u0018��D5[���g�IE��^`2\u0004G���\u0001.�,�3i|����׏l���V\u0004�z�2��9'V�\f��\nb�\tʩ�n���}�_��S_�]�%Ur�\u0018\u0018���\u001e\u0013\u0019\u0012@T&\u0002ѕ�^`tv��BY��KE�d\u001e\u001d�!�\f\u0001���'\u0016\u0014M�m����\u0004�!���P8L�\u0002 /\u0018\u000f ū�^���m߷�Z.��p��G�<e׹%V-��]�\tϱ�\u0004\u0018 �\u0012#�Gv<�K�����\u0015U�\u0006��DKrٳ��\b���Pe\u0000�[E��b��-�\u0010��\u0015����4�$\u0016�9\u001b�\u0007��\u0004\"Lݪ(�\u0012<d��[o���?\u0019��\\��\f�L\u0014�(S�V�G�sb�&D-�p\u0007��[̻�R�\"���S��G�}��\u0006�\u001f\u0019l�z^��\fv�Y\u0017�>Wyc��w�勒y�\u0002\u0014��\u0007� �\n��Vj��\u001e\u001d8��\u000f�Q`t�\u0012�*0�������������\u0017���c���\u001eC\u000b@I\u0010�L3��S����sK,��O��j��6+�\u001c\u000e�^\u0004`���~��_����\u0007��,xJZ�&�,�\f*�\u0000�f\u0000Z\tn^�A,f\r\u001a%Bnp\u0018� $��?G�m��\u001a�A\u0003�;�\u0015AR(\u000e�\u00127^u�ϼ{�m���L$']�B��.\u0002,�*|^R�\u0013�6��F��o��D�C�$X�Q�'ƈ\u001d���\u000f����\u0016�\u0013�1\u0010^J��APTV�yB�@\u0015��\"\u0017\u0013�`�$��E�U�Zf\u0012d�U��N��c�j3\b��멊\u0006%Z�ed-R4/A��\u0000\u0012Lr��k\u001b\\A0���\u0011�f��.��o��'�\u000f\\��D���\u0017�\u0011�(4t}>[Y�X\u000b@�J�\u0001A@�{�V4���|������m_���\"��< #)$�du~RM\u0016\n��ї����Ֆ2-m�l;3��z�x�)ˌ�a���\u001e\t�D��7킂+x��C\u0002��!\u0019a��d�\u0002\u0007_y�e?����[�F�\n��}!�7��X\u0000�\u0003\u0004\u0014@�\u0018��\f\n����=\u001f�������gVV((��J\u0001\u0015M�y6�I��\u0010s�S'\u0000\u0017Aю\u0016K5Ej�-`z��L@=\u000f��yFL,\u001c\u0015Q��}�r\u0005'\u0007-�@s��\u0015�ߺ�]o��{�\u0015�W��g!�6Ο��n\u0001,5��n�\u0005b�Ҫ��y\u0002I\u0014z��'���\u0007�����\u0007\u001dl�i&�!y@\b\u001ef�m���\b�9aCP\r7�y��솝���\u000f���I���\n���K\u0001Q�I�E������~��������p�V!UU�P\u0018��%�}����yA���ڼW ��\u0016�R^�\u0016*O�>y�/>���?3�mǰ�/�\t�����Z\u0013Ő#�\u0000�\u001c:�\n\r��ʎ�e�\u0019es\u001b��F �!̝\"�������H(\u001c\u0002<\u0004�䘁\u001fB�o˦����M���p�V�(�\u0004\u0003\u0003��\u0007�=_�\t\u000bb����=�}���H\u0004� �E�\u0005\u0017c\u00040}�\u0013����?���G���ʁ\u0018B�K\u000e�\u000evg�g� �ʒ\tlR˛\r\r��ep��\u00015�0\u0013��R���L\u0007�&G*\u001c\u0001A!N�w+/[�}�E������\r��]�\u0018UU\u0010\u0018bm�Ϸ��|�z^c鉕/o�eY�\u001dկ8+`\\\u0002\u0018\b\u0001�w\u001f���;����;���}�E+\u0014\u0005%#�]\u0010Ԙ�\u0004� Zr\u0013a�d\u0005!��i6��@�T\u0003\u0000��y�X��\u0018��(V\u001e�\u0018\r\u0004TB�c��+֮j�t��w�i�[_͋7�t%�L\u00043�P���\u0017�i��<�����H������\u0004�iv\u0011�\u0002FIL�\u0000\u0005\u001c�\u0019���C_���_����S\u0003�&\u0007K�Ǩ�nr�{��\n�\f$��<�/�\u00014W\"�z�gʔ��$�@�yr�\u000b��\u0005�h&�,+�6>�\u0017��r�-7o|�+\u0007n�\u000e�\u0006A�WD�j:`N,f���ц\u0017��u\u001e\u0011+���ٖv`6o��]�r�@\u000f\u0016\u00008���������{�o�g��m~�\bgf\u0006�\n�\u0012\"\u000b�\bT��J\u0014\u0002�RL���9���E�u������݌\u0000�A�����f�b�jx��KFn��׾�u�U�i\u0015���\tƐ�\rd-z�DD����<(�^�\"� ��Z\u001a\u0002��p\u0000G�Ų�\u0000\bw�D@B.�^X����F�|���������Lw׾��(�I�B��\r�C=�(�QQd\u0001�ғ\u00032$w��n�hE\n��r�]���uS�����U�_�u�\u0000�+��\u0006X�\u0013\u0014��W�P�{ʣf\u0004/<,5�fE�l��Q��\u001d\u0011j���N�֐\u000b�`\u0004b�$�\b5E{\t����\u001d\u0007�xbj��ǟ��ڋݣqb�ӽ��4R�e���z\u0006�5\u0014��ݲ\"Z\u0011ڝ�u:3���nUk�a˦����\\�%n��\u0015Ch\u001b�WS\u0005�!��z\u0013�<�P\u0005\u0005YmY������\u000b�U8/���M�\r��?�\u00059\f�\u001a�\u0004��� \u001a!\u0006\u0000��b|\u001a�'�����dy�OLΌOL�\u001d�Y\u0014\u0002l��op�52\u001c�\u0007Z�����\r\f`h\u0000#�\u0018(�N(H�D�xGT�\u001cP���N�\u0016Ü\u0015Tx!�\nKO�s���\u0010����خlRw�yZi�q�����J\u0003_���\u00174�f!\u0000ٿ.�\u0019~�Ҙ璚�\"��IN0 oR�L��Ë�XG��+ͦ�p�\u001f!4y=�\u0004[�ә��.�8_@�!X^ѐ�Y��4G\u001f�\u001e�?�]�'8�2N�\u0017h@a>�\n���#K㾚;��q�s�̪3�\u000b_\u0015\u001e�xsT�G7͗S̀[&�\u0019�š\nOH�\u0013\u001dC��a5�Z�֙�/�N�\u0005�x�M�ƋEb\u001d�y�����Pm���$;#�\b�u\"���8�[�]Nf�-���T��p��k\u0019g\r/\u0002�uR,S�\u001c�E��Z�R`�X�8'X&�2�\t����s�eb-�`�X�8'��\u0001��[v�[��\u0000\u0000\u0000%tEXtdate:create\u00002018-03-01T14:54:23+00:00����\u0000\u0000\u0000%tEXtdate:modify\u00002018-03-01T14:54:23+00:00�Ls\u0000\u0000\u0000\u0000IEND�B`�"
						}
					]
				},
				{
					"name": "delete one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTg4NTg5NzMzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTE0MzRjN2ItOTI3MS00NWUxLWFiNDEtY2JlYmUyMDRlYThlIiwiY2xpZW50X2lkIjoiY2FycCJ9.raUWbzGDamUY8TIjvwnC0kH79aIX1lgvH-eVEi18BEg",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/files/{{FILE_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"files",
								"{{FILE_ID}}"
							]
						},
						"description": "> `Description`: `delete one` \n\nThis endpoint allows deleting a file with the given [STUDY_ID] and [FILE_ID] as the request parameters.\n\n> `Request`: (Http Method: [DELETE]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/files/{{FILE_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": []
				}
			],
			"description": "# **CARP Webservices API - File**\n\n`CARP File` enables clients to upload, download, and delete files into a CARP Persistence Storage layer.\nFor this file service, five endpoints have been implemented for reliable and secure file transfer. All the files are stored into our file server and other metadata/storage IDs that enable researchers to access or monitor data received in the CARP Web Application dashboard. \n\n| **Package**    | **Function** | **Permission** | **Condition** |\n| ------     | ------   | ------      | ------      |\n| **File**       | **CREATE**  | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study.<br/> `Participant` is allowed if he is a participant in the study. |\n|                | **DOWNLOAD**, **VIEW**, **DELETE**  | `Study Owner`, `Participant` |  `Study Owner` is allowed if he has access to the study.<br/> `Participant` is allowed if he is the creator of the resource. |\n|                | **VIEW ALL**  | `Study Owner` | `Study Owner` is allowed if he has access to the study.|\n"
		},
		{
			"name": "Collection",
			"item": [
				{
					"name": "create collection/document from path",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJyZXNlYXJjaGVyQGNhY2hldC5kayIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1OTMyMDQyOTksImF1dGhvcml0aWVzIjpbIlNUVURZX09XTkVSIl0sImp0aSI6ImVkOTlkODZiLTExOGEtNDEwNi1hN2E5LWRkMmJmMzNlZTlhNSIsImNsaWVudF9pZCI6ImNhcnAifQ.zeoh_OpCVNnF9FyOSrJqNr7LQU9RFRqrrX1WvalkK-s",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Alban\",\n    \"lastName\" : \"Maxhuni\",\n    \"email\": \"almax@dtu.dk\",\n    \"phoneNumber\": \"+45 50 11 22 33\",\n    \"cprNumber\": \"112233-4455\",\n    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n    \"consultationDates\": [\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\"\n    ],\n    \"height\": 175\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}/{{DOCUMENT_NAME}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections",
								"{{COLLECTION_NAME}}",
								"{{DOCUMENT_NAME}}"
							]
						},
						"description": "> `Description`: `create collection/document from path` \n\nThis endpoint creates a new collection/document with the given [STUDY_ID], [COLLECTION_NAME], and [DOCUMENT_NAME].\n\n> `Request`: (Http Method: [POST]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}/{{DOCUMENT_NAME}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created document.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "create collection and document by studyId, collectionName, and documentName",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Alban\",\n    \"lastName\" : \"Maxhuni\",\n    \"email\": \"almax@dtu.dk\",\n    \"phoneNumber\": \"+45 50 11 22 33\",\n    \"cprNumber\": \"112233-4455\",\n    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n    \"consultationDates\": [\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\"\n    ],\n    \"height\": 175\n}"
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/33f62b9d-53ce-4706-8d0a-087b575f2cb9/collections/ipdm/go",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"33f62b9d-53ce-4706-8d0a-087b575f2cb9",
										"collections",
										"ipdm",
										"go"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "465"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 17:57:03 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"go\",\n    \"created_by_user_id\": 2,\n    \"collection_id\": 1,\n    \"collections\": null,\n    \"created_at\": \"2020-06-26T17:57:03.459Z\",\n    \"updated_at\": \"2020-06-26T17:57:03.459Z\",\n    \"data\": {\n        \"firstName\": \"Alban\",\n        \"lastName\": \"Maxhuni\",\n        \"email\": \"almax@dtu.dk\",\n        \"phoneNumber\": \"+45 50 11 22 33\",\n        \"cprNumber\": \"112233-4455\",\n        \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n        \"consultationDates\": [\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\"\n        ],\n        \"height\": 175\n    }\n}"
						},
						{
							"name": "create collection by studyId and collectionName",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Alban\",\n    \"lastName\" : \"Maxhuni\",\n    \"email\": \"almax@dtu.dk\",\n    \"phoneNumber\": \"+45 50 11 22 33\",\n    \"cprNumber\": \"112233-4455\",\n    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n    \"consultationDates\": [\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\"\n    ],\n    \"height\": 175\n}"
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/33f62b9d-53ce-4706-8d0a-087b575f2cb9/collections/ipdm-go",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"33f62b9d-53ce-4706-8d0a-087b575f2cb9",
										"collections",
										"ipdm-go"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "214"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 18:01:43 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"ipdm-go\",\n    \"study_id\": \"33f62b9d-53ce-4706-8d0a-087b575f2cb9\",\n    \"document_id\": null,\n    \"documents\": null,\n    \"created_at\": \"2020-06-26T18:01:43.881Z\",\n    \"updated_at\": \"2020-06-26T18:01:43.881Z\",\n    \"created_by_user_id\": 2\n}"
						}
					]
				},
				{
					"name": "create nested collection/document from path",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTg4NTg5NzMzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTE0MzRjN2ItOTI3MS00NWUxLWFiNDEtY2JlYmUyMDRlYThlIiwiY2xpZW50X2lkIjoiY2FycCJ9.raUWbzGDamUY8TIjvwnC0kH79aIX1lgvH-eVEi18BEg",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Alban\",\n    \"lastName\" : \"Maxhuni\",\n    \"email\": \"almax@dtu.dk\",\n    \"phoneNumber\": \"+45 50 11 22 33\",\n    \"cprNumber\": \"112233-4455\",\n    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n    \"consultationDates\": [\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\"\n    ],\n    \"height\": 175\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}/{{DOCUMENT_NAME}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections",
								"{{COLLECTION_NAME}}",
								"{{DOCUMENT_NAME}}"
							]
						},
						"description": "> `Description`: `create nested collection/document from path` \n\nThis endpoint creates a new nested collection/document with the given [STUDY_ID], [COLLECTION_NAME], and [DOCUMENT_NAME].\n\n> `Request`: (Http Method: [POST]) \nhttps://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}/{{DOCUMENT_NAME}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success, a JSON object is returned with a created collection.\n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "create nested collection by studyId and collectionName",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Alban\",\n    \"lastName\" : \"Maxhuni\",\n    \"email\": \"almax@dtu.dk\",\n    \"phoneNumber\": \"+45 50 11 22 33\",\n    \"cprNumber\": \"112233-4455\",\n    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n    \"consultationDates\": [\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\"\n    ],\n    \"height\": 175\n}"
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e33b37e2-0bb0-4441-8d5a-3f007ae6d110/collections/ipdm-collection-name-2",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e33b37e2-0bb0-4441-8d5a-3f007ae6d110",
										"collections",
										"ipdm-collection-name-2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "229"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 18:39:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"name\": \"ipdm-collection-name-2\",\n    \"study_id\": \"e33b37e2-0bb0-4441-8d5a-3f007ae6d110\",\n    \"document_id\": null,\n    \"documents\": null,\n    \"created_at\": \"2020-06-26T18:39:44.712Z\",\n    \"updated_at\": \"2020-06-26T18:39:44.712Z\",\n    \"created_by_user_id\": 2\n}"
						},
						{
							"name": "create nested collection/document by studyId, collectionName, and documentName",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Alban\",\n    \"lastName\" : \"Maxhuni\",\n    \"email\": \"almax@dtu.dk\",\n    \"phoneNumber\": \"+45 50 11 22 33\",\n    \"cprNumber\": \"112233-4455\",\n    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n    \"consultationDates\": [\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\",\n        \"2020-06-11T15:47:11.794680\"\n    ],\n    \"height\": 175\n}"
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e33b37e2-0bb0-4441-8d5a-3f007ae6d110/collections/ipdm-collection-name-3/ipdm-document-name-3",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e33b37e2-0bb0-4441-8d5a-3f007ae6d110",
										"collections",
										"ipdm-collection-name-3",
										"ipdm-document-name-3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "483"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 18:40:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"ipdm-document-name-3\",\n    \"created_by_user_id\": 2,\n    \"collection_id\": 4,\n    \"collections\": null,\n    \"created_at\": \"2020-06-26T18:40:35.426Z\",\n    \"updated_at\": \"2020-06-26T18:40:35.426Z\",\n    \"data\": {\n        \"firstName\": \"Alban\",\n        \"lastName\": \"Maxhuni\",\n        \"email\": \"almax@dtu.dk\",\n        \"phoneNumber\": \"+45 50 11 22 33\",\n        \"cprNumber\": \"112233-4455\",\n        \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\",\n        \"consultationDates\": [\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\"\n        ],\n        \"height\": 175\n    }\n}"
						}
					]
				},
				{
					"name": "get one document from path",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTg4NTg5NzMzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTE0MzRjN2ItOTI3MS00NWUxLWFiNDEtY2JlYmUyMDRlYThlIiwiY2xpZW50X2lkIjoiY2FycCJ9.raUWbzGDamUY8TIjvwnC0kH79aIX1lgvH-eVEi18BEg",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}/{{DOCUMENT_NAME}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections",
								"{{COLLECTION_NAME}}",
								"{{DOCUMENT_NAME}}"
							]
						},
						"description": "> `Description`: `get one document from path` \n\nThis endpoint allows retrieving one document with the given [STUDY_ID], [COLLECTION_NAME], and [DOCUMENT_NAME] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}/{{DOCUMENT_NAME}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get one collections/document by studyId, collectionName, documentName",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e33b37e2-0bb0-4441-8d5a-3f007ae6d110/collections/ipdm-collection-name/ipdm-document-name",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e33b37e2-0bb0-4441-8d5a-3f007ae6d110",
										"collections",
										"ipdm-collection-name",
										"ipdm-document-name"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 18:36:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"ipdm-document-name\",\n    \"created_by_user_id\": 2,\n    \"collection_id\": 2,\n    \"collections\": [],\n    \"created_at\": \"2020-06-26T18:35:57.126Z\",\n    \"updated_at\": \"2020-06-26T18:35:57.126Z\",\n    \"data\": {\n        \"email\": \"almax@dtu.dk\",\n        \"height\": 175,\n        \"lastName\": \"Maxhuni\",\n        \"cprNumber\": \"112233-4455\",\n        \"firstName\": \"Alban\",\n        \"phoneNumber\": \"+45 50 11 22 33\",\n        \"consultationDates\": [\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\",\n            \"2020-06-11T15:47:11.794680\"\n        ],\n        \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n    }\n}"
						}
					]
				},
				{
					"name": "get collection with the nested query",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTk0MTYxNjAyLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTYxYWEyMzgtNmE3MS00NDI1LTk0NTQtOWQ4MTc5MzYzMTQ4IiwiY2xpZW50X2lkIjoiY2FycCJ9.kMsJ75AR0djNyKw73Hvj4CuV2XD6O35p7o28Y-wttc4",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections?query={{ID/NAME/DOCUMENT_ID/CREATED_AT/...}}==",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections"
							],
							"query": [
								{
									"key": "query",
									"value": "{{ID/NAME/DOCUMENT_ID/CREATED_AT/...}}=="
								}
							]
						},
						"description": "> `Description`: `get collection with the nested query` \n\nThis endpoint allows retrieving collection with the given [STUDY_ID], and nested [query] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections?query={{ID/NAME/DOCUMENT_ID/CREATED_AT/...}}==\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get one collection by name",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/33f62b9d-53ce-4706-8d0a-087b575f2cb9/collections?query=name==ipdm",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"33f62b9d-53ce-4706-8d0a-087b575f2cb9",
										"collections"
									],
									"query": [
										{
											"key": "query",
											"value": "name==ipdm"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 17:57:26 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"ipdm\",\n        \"study_id\": \"33f62b9d-53ce-4706-8d0a-087b575f2cb9\",\n        \"document_id\": null,\n        \"documents\": [\n            {\n                \"id\": 1,\n                \"name\": \"go\",\n                \"created_by_user_id\": 2,\n                \"collection_id\": 1,\n                \"collections\": [],\n                \"created_at\": \"2020-06-26T17:57:03.459Z\",\n                \"updated_at\": \"2020-06-26T17:57:03.459Z\",\n                \"data\": {\n                    \"email\": \"almax@dtu.dk\",\n                    \"height\": 175,\n                    \"lastName\": \"Maxhuni\",\n                    \"cprNumber\": \"112233-4455\",\n                    \"firstName\": \"Alban\",\n                    \"phoneNumber\": \"+45 50 11 22 33\",\n                    \"consultationDates\": [\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\"\n                    ],\n                    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n                }\n            }\n        ],\n        \"created_at\": \"2020-06-26T17:57:03.444Z\",\n        \"updated_at\": \"2020-06-26T17:57:03.444Z\",\n        \"created_by_user_id\": 2\n    }\n]"
						},
						{
							"name": "get one collection using neseted queries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e33b37e2-0bb0-4441-8d5a-3f007ae6d110/collections?query=name==ipdm-collection-name;created_by_user_id==2",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e33b37e2-0bb0-4441-8d5a-3f007ae6d110",
										"collections"
									],
									"query": [
										{
											"key": "query",
											"value": "name==ipdm-collection-name;created_by_user_id==2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 18:55:04 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"ipdm-collection-name\",\n        \"study_id\": \"e33b37e2-0bb0-4441-8d5a-3f007ae6d110\",\n        \"document_id\": null,\n        \"documents\": [\n            {\n                \"id\": 1,\n                \"name\": \"ipdm-document-name\",\n                \"created_by_user_id\": 2,\n                \"collection_id\": 2,\n                \"collections\": [],\n                \"created_at\": \"2020-06-26T18:35:57.126Z\",\n                \"updated_at\": \"2020-06-26T18:35:57.126Z\",\n                \"data\": {\n                    \"email\": \"almax@dtu.dk\",\n                    \"height\": 175,\n                    \"lastName\": \"Maxhuni\",\n                    \"cprNumber\": \"112233-4455\",\n                    \"firstName\": \"Alban\",\n                    \"phoneNumber\": \"+45 50 11 22 33\",\n                    \"consultationDates\": [\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\"\n                    ],\n                    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n                }\n            }\n        ],\n        \"created_at\": \"2020-06-26T18:35:57.109Z\",\n        \"updated_at\": \"2020-06-26T18:35:57.109Z\",\n        \"created_by_user_id\": 2\n    }\n]"
						},
						{
							"name": "get one collection by studyId",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/33f62b9d-53ce-4706-8d0a-087b575f2cb9/collections?query=study_id==33f62b9d-53ce-4706-8d0a-087b575f2cb9",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"33f62b9d-53ce-4706-8d0a-087b575f2cb9",
										"collections"
									],
									"query": [
										{
											"key": "query",
											"value": "study_id==33f62b9d-53ce-4706-8d0a-087b575f2cb9"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 18:00:33 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Updated name\",\n        \"study_id\": \"33f62b9d-53ce-4706-8d0a-087b575f2cb9\",\n        \"document_id\": null,\n        \"documents\": [\n            {\n                \"id\": 1,\n                \"name\": \"go\",\n                \"created_by_user_id\": 2,\n                \"collection_id\": 1,\n                \"collections\": [],\n                \"created_at\": \"2020-06-26T17:57:03.459Z\",\n                \"updated_at\": \"2020-06-26T17:57:03.459Z\",\n                \"data\": {\n                    \"email\": \"almax@dtu.dk\",\n                    \"height\": 175,\n                    \"lastName\": \"Maxhuni\",\n                    \"cprNumber\": \"112233-4455\",\n                    \"firstName\": \"Alban\",\n                    \"phoneNumber\": \"+45 50 11 22 33\",\n                    \"consultationDates\": [\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\"\n                    ],\n                    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n                }\n            }\n        ],\n        \"created_at\": \"2020-06-26T17:57:03.444Z\",\n        \"updated_at\": \"2020-06-26T17:58:17.020Z\",\n        \"created_by_user_id\": 2\n    }\n]"
						},
						{
							"name": "get one collection by collectionId",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/33f62b9d-53ce-4706-8d0a-087b575f2cb9/collections?query=id==1",
									"protocol": "http",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"33f62b9d-53ce-4706-8d0a-087b575f2cb9",
										"collections"
									],
									"query": [
										{
											"key": "query",
											"value": "id==1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 17:59:48 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Updated name\",\n        \"study_id\": \"33f62b9d-53ce-4706-8d0a-087b575f2cb9\",\n        \"document_id\": null,\n        \"documents\": [\n            {\n                \"id\": 1,\n                \"name\": \"go\",\n                \"created_by_user_id\": 2,\n                \"collection_id\": 1,\n                \"collections\": [],\n                \"created_at\": \"2020-06-26T17:57:03.459Z\",\n                \"updated_at\": \"2020-06-26T17:57:03.459Z\",\n                \"data\": {\n                    \"email\": \"almax@dtu.dk\",\n                    \"height\": 175,\n                    \"lastName\": \"Maxhuni\",\n                    \"cprNumber\": \"112233-4455\",\n                    \"firstName\": \"Alban\",\n                    \"phoneNumber\": \"+45 50 11 22 33\",\n                    \"consultationDates\": [\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\",\n                        \"2020-06-11T15:47:11.794680\"\n                    ],\n                    \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n                }\n            }\n        ],\n        \"created_at\": \"2020-06-26T17:57:03.444Z\",\n        \"updated_at\": \"2020-06-26T17:58:17.020Z\",\n        \"created_by_user_id\": 2\n    }\n]"
						}
					]
				},
				{
					"name": "get collection by study ID and collection name",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJyZXNlYXJjaGVyQGNhY2hldC5kayIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1OTMyMDQzMTMsImF1dGhvcml0aWVzIjpbIlNUVURZX09XTkVSIl0sImp0aSI6ImYzZTY2NThlLTdhN2MtNDg4Mi1iYzg1LTU2NjgzNGJhNGEzMSIsImNsaWVudF9pZCI6ImNhcnAifQ.KhDhbKqltULMt8bgXUaSxoH0Ss0q3HZjTeJuqeUtNDU",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections",
								"{{COLLECTION_NAME}}"
							]
						},
						"description": "> `Description`: `get collection by study ID and collection name` \n\nThis endpoint allows retrieving collection with the given [STUDY_ID] and [COLLECTION_NAME] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_NAME}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get collection by studyId and collectionName",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/48d92d55-8558-4bd6-a752-b045dcab18ac/collections/ipdm-test-collection",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"48d92d55-8558-4bd6-a752-b045dcab18ac",
										"collections",
										"ipdm-test-collection"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "get collection by study id and collection id",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTk0MjE1MDQxLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTM4MTlhNTgtNzIxMi00YjQzLWI2ZGEtOWZlNWMzMTg4NTYwIiwiY2xpZW50X2lkIjoiY2FycCJ9.2ESxE_pW1vXg-3UC6TEVfuakNMUDWFu5hc1hLICrifM",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections/id/{{COLLECTION_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections",
								"id",
								"{{COLLECTION_ID}}"
							]
						},
						"description": "> `Description`: `get collection by study id and collection id` \n\nThis endpoint allows retrieving collection with the given [STUDY_ID] and [COLLECTION_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections/id/{{COLLECTION_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "get collection by studyId and collection Id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/b9b65f45-393a-4477-8045-f041335008f8/collections/id/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"b9b65f45-393a-4477-8045-f041335008f8",
										"collections",
										"id",
										"1"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "delete one",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTg4NTg5NzMzLCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTE0MzRjN2ItOTI3MS00NWUxLWFiNDEtY2JlYmUyMDRlYThlIiwiY2xpZW50X2lkIjoiY2FycCJ9.raUWbzGDamUY8TIjvwnC0kH79aIX1lgvH-eVEi18BEg",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections/id/{{COLLECTION_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections",
								"id",
								"{{COLLECTION_ID}}"
							]
						},
						"description": "> `Description`: `delete one` \n\nThis endpoint allows deleting one collection with the given [STUDY_ID] and [COLLECTION_ID] as the request parameters.\n\n> `Request`: (Http Method: [DELETE]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- This request doesn't return a response body. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "delete collection by studyId and collectionId",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/e33b37e2-0bb0-4441-8d5a-3f007ae6d110/collections/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"e33b37e2-0bb0-4441-8d5a-3f007ae6d110",
										"collections",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 18:27:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "update collection name",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJyZXNlYXJjaGVyQGNhY2hldC5kayIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSJdLCJleHAiOjE1OTMyMDQzNzIsImF1dGhvcml0aWVzIjpbIlNUVURZX09XTkVSIl0sImp0aSI6Ijc3YmZmM2Y1LTBmNDAtNGQxMS04ZTFkLWJmOWMyNDQyNGIzZiIsImNsaWVudF9pZCI6ImNhcnAifQ.s3RuCHAzwV0agV369LX7l9cVxI7GO6rH8Ad2ZKZkIl8",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated name\"\n}"
						},
						"url": {
							"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/{{CLIENT}}/api/studies/{{STUDY_ID}}/collections/id/{{COLLECTION_ID}}",
							"protocol": "{{PROTOCOL}}",
							"host": [
								"{{SERVER_HOST}}"
							],
							"port": "{{SERVER_PORT}}",
							"path": [
								"{{CLIENT}}",
								"api",
								"studies",
								"{{STUDY_ID}}",
								"collections",
								"id",
								"{{COLLECTION_ID}}"
							]
						},
						"description": "> `Description`: `update collection name` \n\nThis endpoint allows updating the collection name with the given [STUDY_ID] and [COLLECTION_ID] as the request parameters.\n\n> `Request`: (Http Method: [GET]) https://cans.cachet.dk:443/api/studies/{{STUDY_ID}}/collections/{{COLLECTION_ID}}\n\nThis request must be authenticated using a HTTP OAuth 2.0 Authentication header.\n\n> `Response`:\n\n- On success a JSON object is returned with a fields `id`, `name`, `created_by_user_id`, `collection_id`, `collections`, `data`, `created_at` and `updated_at` list. \n- On failure status code `400` (bad request) is returned.\n- On failure status code `401` (unauthorized) is returned.\n- On failure status code `500` (internal server error) is returned."
					},
					"response": [
						{
							"name": "update collections name",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Updated name\"\n}"
								},
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/studies/33f62b9d-53ce-4706-8d0a-087b575f2cb9/collections/1",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"studies",
										"33f62b9d-53ce-4706-8d0a-087b575f2cb9",
										"collections",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jun 2020 17:58:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Updated name\",\n    \"study_id\": \"33f62b9d-53ce-4706-8d0a-087b575f2cb9\",\n    \"document_id\": null,\n    \"documents\": [\n        {\n            \"id\": 1,\n            \"name\": \"go\",\n            \"created_by_user_id\": 2,\n            \"collection_id\": 1,\n            \"collections\": [],\n            \"created_at\": \"2020-06-26T17:57:03.459Z\",\n            \"updated_at\": \"2020-06-26T17:57:03.459Z\",\n            \"data\": {\n                \"email\": \"almax@dtu.dk\",\n                \"height\": 175,\n                \"lastName\": \"Maxhuni\",\n                \"cprNumber\": \"112233-4455\",\n                \"firstName\": \"Alban\",\n                \"phoneNumber\": \"+45 50 11 22 33\",\n                \"consultationDates\": [\n                    \"2020-06-11T15:47:11.794680\",\n                    \"2020-06-11T15:47:11.794680\",\n                    \"2020-06-11T15:47:11.794680\"\n                ],\n                \"nextConsultationDate\": \"2020-06-11T15:47:11.794680\"\n            }\n        }\n    ],\n    \"created_at\": \"2020-06-26T17:57:03.444Z\",\n    \"updated_at\": \"2020-06-26T17:58:17.020Z\",\n    \"created_by_user_id\": 2\n}"
						}
					]
				}
			],
			"description": "# **CARP Webservices API - Collection**\n\n`CARP Document/Collection` allows clients to upload and access unstructured application-specific documents, which are structured in hierarchical collections. A document can, for example, provide detailed information on a patient (name, diagnosis, age, gender, etc.) and the list of patients in a study can be organized into a collection called \"patients\".\n\n# ***Permissions - Collection Endpoints***\n\n| **Package**    | **Function** | **Permission** | **Condition** |\n| ------     | ------   | ------      | ------      |\n| **Collection** | **CREATE**   | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study.<br/> `Participant` is allowed if he is a participant in the study. |\n|            | **VIEW**, **UPDATE**, **DELETE** | `Study Owner`, `Participant` | `Study Owner` is allowed if he has access to the study.<br/> `Participant` is allowed if he is the creator of the resource. |\n"
		},
		{
			"name": "Summaries",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:8080/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sys1admin1DK@cachet.dk",
									"type": "string"
								},
								{
									"key": "password",
									"value": "CaChet1Sys1Admin1DK",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/summaries?studyId=f8252c61-9a18-443a-8415-67e829c60402",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"summaries"
							],
							"query": [
								{
									"key": "studyId",
									"value": "f8252c61-9a18-443a-8415-67e829c60402"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:8080/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sys1admin1DK@cachet.dk",
									"type": "string"
								},
								{
									"key": "password",
									"value": "CaChet1Sys1Admin1DK",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/summaries/all",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"summaries",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:8080/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sys1admin1DK@cachet.dk",
									"type": "string"
								},
								{
									"key": "password",
									"value": "CaChet1Sys1Admin1DK",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/summaries/{{SUMMARY_ID}}/download",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"summaries",
								"{{SUMMARY_ID}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get By Id",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "{{PROTOCOL}}://{{SERVER_HOST}}:8080/oauth/token",
									"type": "string"
								},
								{
									"key": "challengeAlgorithm",
									"value": "S256",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sys1admin1DK@cachet.dk",
									"type": "string"
								},
								{
									"key": "password",
									"value": "CaChet1Sys1Admin1DK",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "password_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "carp",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/summaries/{{SUMMARY_ID}}",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"summaries",
								"{{SUMMARY_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Monitoring",
			"item": [
				{
					"name": "Get Health Status",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbjFhZG0xaW5AY2FjaGV0LmRrIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTYwMDE4NTg5NCwiYXV0aG9yaXRpZXMiOlsiU1lTVEVNX0FETUlOIl0sImp0aSI6Ijk0NjUxNzQ4LWI1ZWEtNGY2Ny1hZDViLWU3ZWY4NWVhNzExMSIsImNsaWVudF9pZCI6ImNhcnAifQ.qB1OksHnOaOFB3N1QdXffS6nZJy5SDH6sCA0VoaMuaY",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/health",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": [
						{
							"name": "Get Health Status",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/health",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 02 Sep 2020 15:39:45 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\",\n    \"components\": {\n        \"db\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"database\": \"PostgreSQL\",\n                \"validationQuery\": \"isValid()\"\n            }\n        },\n        \"diskSpace\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"total\": 1000240963584,\n                \"free\": 526333165568,\n                \"threshold\": 10485760,\n                \"exists\": true\n            }\n        },\n        \"ping\": {\n            \"status\": \"UP\"\n        },\n        \"rabbit\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"version\": \"3.8.7\"\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Disk Space",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbjFhZG0xaW5AY2FjaGV0LmRrIiwic2NvcGUiOlsicmVhZCIsIndyaXRlIl0sImV4cCI6MTYwMDE4NTg5NCwiYXV0aG9yaXRpZXMiOlsiU1lTVEVNX0FETUlOIl0sImp0aSI6Ijk0NjUxNzQ4LWI1ZWEtNGY2Ny1hZDViLWU3ZWY4NWVhNzExMSIsImNsaWVudF9pZCI6ImNhcnAifQ.qB1OksHnOaOFB3N1QdXffS6nZJy5SDH6sCA0VoaMuaY",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/health",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": [
						{
							"name": "Get Disk Space",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/health/diskSpace",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"health",
										"diskSpace"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Sep 2020 20:34:28 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\",\n    \"details\": {\n        \"total\": 1000240963584,\n        \"free\": 531972173824,\n        \"threshold\": 10485760,\n        \"exists\": true\n    }\n}"
						}
					]
				},
				{
					"name": "Get Current Commit-ID",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiY2FycCJdLCJ1c2VyX25hbWUiOiJhZG1pbkBjYWNoZXQuZGsiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiZXhwIjoxNTk5MDcxMTg5LCJhdXRob3JpdGllcyI6WyJTWVNURU1fQURNSU4iXSwianRpIjoiZTYzMjYzYzAtZTQ1My00OTE5LWE0ODEtY2M1ZTYzZWEzODI4IiwiY2xpZW50X2lkIjoiY2FycCJ9.Bk28ARZGeuRmuj2Sa6cx7apGLde5z6Mx27w2lGPUrKI",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{INSTANCE_URI}}/api/info",
							"host": [
								"{{INSTANCE_URI}}"
							],
							"path": [
								"api",
								"info"
							]
						}
					},
					"response": [
						{
							"name": "Get Current Commit-ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROTOCOL}}://{{SERVER_HOST}}:{{SERVER_PORT}}/api/info",
									"protocol": "{{PROTOCOL}}",
									"host": [
										"{{SERVER_HOST}}"
									],
									"port": "{{SERVER_PORT}}",
									"path": [
										"api",
										"info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 02 Sep 2020 15:38:33 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"app\": {\n        \"encoding\": \"UTF-8\",\n        \"java\": {\n            \"source\": \"1.8\",\n            \"target\": \"1.8\",\n            \"version\": \"1.8\"\n        },\n        \"name\": \"CARP-Webservices-API\",\n        \"description\": \"This is CARP Webservices API.\",\n        \"version\": \"1.0.0\"\n    },\n    \"git\": {\n        \"build\": {\n            \"host\": \"dtu-c02yk3u4jgh6.clients.net.dtu.dk\",\n            \"version\": \"1.0.0\",\n            \"user\": {\n                \"name\": \"Alban Maxhuni\",\n                \"email\": \"almax@dtu.dk\"\n            }\n        },\n        \"branch\": \"develop\",\n        \"commit\": {\n            \"message\": {\n                \"short\": \"fix grafana dashboard instance declaration\",\n                \"full\": \"fix grafana dashboard instance declaration\\n\"\n            },\n            \"id\": {\n                \"describe\": \"\",\n                \"abbrev\": \"ebaf9b2\",\n                \"full\": \"ebaf9b2b7df59f3e1b2095646ae2303c4b2e1d6b\"\n            },\n            \"time\": \"2020-08-28T16:56:50Z\",\n            \"user\": {\n                \"email\": \"s192617@student.dtu.dk\",\n                \"name\": \"Richard Pekk\"\n            }\n        },\n        \"closest\": {\n            \"tag\": {\n                \"name\": \"\",\n                \"commit\": {\n                    \"count\": \"\"\n                }\n            }\n        },\n        \"dirty\": \"true\",\n        \"remote\": {\n            \"origin\": {\n                \"url\": \"https://github.com/cph-cachet/carp.webservices-docker.git\"\n            }\n        },\n        \"tags\": \"\",\n        \"total\": {\n            \"commit\": {\n                \"count\": \"410\"\n            }\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "`CARP Monitoring` - monitoring of the CARP Webservice application, gathering metrics, understanding traffic, or the state of our database becomes trivial with the actuator dependency.\n\n# ***Permissions - Deployment Endpoints***\n\n| **Package**    | **Function** | **Permission** | **Condition** |\n| ------     | ------   | ------      | ------      |\n|  **Montitoring**     | **Actuator** | `System Admin` | `System Admin` is always allowed. |"
		}
	]
}